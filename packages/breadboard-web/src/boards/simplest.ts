/**
 * @license
 * Copyright 2023 Google LLC
 * SPDX-License-Identifier: Apache-2.0
 */

import { Schema, base, board } from "@google-labs/breadboard";
import { core } from "@google-labs/core-kit";

const inputSchema = {
  type: "object",
  properties: {
    text: {
      type: "string",
      title: "Prompt",
      description: "The prompt to generate a completion for",
      examples: ["Tell me a fun story about playing with breadboards"],
    },
  },
  required: ["text"],
} satisfies Schema;

const outputSchema = {
  type: "object",
  properties: {
    text: {
      type: "string",
      title: "Response",
      description: "The completion generated by the LLM",
    },
  },
  required: ["text"],
} satisfies Schema;

export default await board(() => {
  return base
    .input({ $id: "text", schema: inputSchema })
    .to(core.invoke({ $id: "gemini", $board: "gemini-generator.json" }))
    .to(base.output({ $id: "response", schema: outputSchema }));
}).serialize({
  title: "The simplest LLM-based board",
  description:
    "This board is as simple as it gets: takes text as input and invokes Gemini to generate a text response as output.",
  version: "0.0.3",
});
