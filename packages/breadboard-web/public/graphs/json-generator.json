{
  "title": "JSON Generator",
  "description": "Tries its best to always generate valid JSON that adheres to a provided JSON schema. Use it when you want your LLM calls to return valid JSON.",
  "$schema": "https://raw.githubusercontent.com/breadboard-ai/breadboard/@google-labs/breadboard-schema@1.4.1/packages/schema/breadboard.schema.json",
  "version": "0.0.1",
  "edges": [
    {
      "from": "dontUseStreaming",
      "to": "retryGenerator",
      "out": "useStreaming",
      "in": "useStreaming"
    },
    {
      "from": "dontUseStreaming",
      "to": "textGenerator",
      "out": "useStreaming",
      "in": "useStreaming"
    },
    {
      "from": "errorFormatter",
      "to": "error",
      "out": "message",
      "in": "error"
    },
    {
      "from": "formatTemplate",
      "to": "generatorTemplate",
      "out": "prompt",
      "in": "format"
    },
    {
      "from": "generatorTemplate",
      "to": "textGenerator",
      "out": "prompt",
      "in": "text"
    },
    {
      "from": "jsonata-2",
      "to": "retryTemplate",
      "out": "result",
      "in": "error"
    },
    {
      "from": "parameters",
      "to": "generatorTemplate",
      "out": "template",
      "in": "template"
    },
    {
      "from": "parameters",
      "to": "retryGenerator",
      "out": "generator",
      "in": "path"
    },
    {
      "from": "parameters",
      "to": "schemish-1",
      "out": "schema",
      "in": "schema"
    },
    {
      "from": "parameters",
      "to": "textGenerator",
      "out": "generator",
      "in": "path"
    },
    {
      "from": "parameters",
      "to": "validateOnce",
      "out": "schema",
      "in": "schema"
    },
    {
      "from": "parameters",
      "to": "validateTwice",
      "out": "schema",
      "in": "schema"
    },
    {
      "from": "retryGenerator",
      "to": "validateTwice",
      "out": "text",
      "in": "json"
    },
    {
      "from": "retryTemplate",
      "to": "retryGenerator",
      "out": "prompt",
      "in": "text"
    },
    {
      "from": "schemish-1",
      "to": "formatTemplate",
      "out": "schemish",
      "in": "schemish"
    },
    {
      "from": "textGenerator",
      "to": "retryTemplate",
      "out": "text",
      "in": "json"
    },
    {
      "from": "textGenerator",
      "to": "validateOnce",
      "out": "text",
      "in": "json"
    },
    {
      "from": "validateOnce",
      "to": "json",
      "out": "json",
      "in": "json"
    },
    {
      "from": "validateOnce",
      "to": "jsonata-2",
      "out": "$error",
      "in": "json"
    },
    {
      "from": "validateTwice",
      "to": "errorFormatter",
      "out": "$error",
      "in": "json"
    },
    {
      "from": "validateTwice",
      "to": "json",
      "out": "json",
      "in": "json"
    }
  ],
  "nodes": [
    {
      "id": "parameters",
      "type": "input",
      "configuration": {
        "schema": {
          "type": "object",
          "properties": {
            "generator": {
              "type": "board",
              "title": "Text Generator",
              "description": "The underlying text generator to use.",
              "default": "text-generator.json"
            },
            "schema": {
              "type": "object",
              "title": "Schema",
              "description": "The schema of the JSON to be generated",
              "default": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"first_answer\": {\n      \"type\": \"string\",\n      \"description\": \"a first attempt at the answer to the question\"\n    },\n    \"assumptions\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"description\": \"one or more assumptions made when making the response above\",\n        \"type\": \"string\"\n      }\n    },\n    \"critique\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"description\": \"how might these assumptions be wrong?\",\n        \"type\": \"string\"\n      }\n    },\n    \"response\": {\n      \"type\": \"string\",\n      \"description\": \"the final response made synthesizing first_answer, assumptions, and critique\"\n    }\n  },\n  \"required\": [\n    \"first_answer\",\n    \"assumptions\",\n    \"critique\",\n    \"response\"\n  ],\n  \"additionalProperties\": false\n}"
            },
            "template": {
              "type": "text",
              "title": "Template",
              "description": "the template for the reply. Insert {{format}} where you want the format to be specified",
              "default": "What is the meaning of life?\n{{format}}",
              "format": "multiline"
            }
          }
        }
      }
    },
    {
      "id": "error",
      "type": "output",
      "configuration": {
        "schema": {
          "type": "object",
          "properties": {
            "error": {
              "type": "object",
              "title": "Error",
              "description": "Generated JSON"
            }
          }
        }
      }
    },
    {
      "id": "json",
      "type": "output",
      "configuration": {
        "schema": {
          "type": "object",
          "properties": {
            "json": {
              "type": "object",
              "title": "JSON",
              "description": "Generated JSON"
            }
          }
        }
      }
    },
    {
      "id": "dontUseStreaming",
      "type": "passthrough",
      "configuration": {
        "useStreaming": false
      }
    },
    {
      "id": "dontUseStreaming",
      "type": "passthrough",
      "configuration": {
        "useStreaming": false
      }
    },
    {
      "id": "errorFormatter",
      "type": "jsonata",
      "configuration": {
        "expression": "{\n  \"type\": $.error.type,\n  \"message\": $.error.message\n}",
        "raw": true
      }
    },
    {
      "id": "formatTemplate",
      "type": "promptTemplate",
      "configuration": {
        "template": "Respond in valid JSON of the following structure:\n\n{{schemish}}\n\nRESPONSE:"
      }
    },
    {
      "id": "generatorTemplate",
      "type": "promptTemplate",
      "configuration": {}
    },
    {
      "id": "jsonata-2",
      "type": "jsonata",
      "configuration": {
        "expression": "$string($.error, true)"
      }
    },
    {
      "id": "retryGenerator",
      "type": "invoke",
      "configuration": {}
    },
    {
      "id": "retryTemplate",
      "type": "promptTemplate",
      "configuration": {
        "template": "The following output failed to parse as valid JSON:\"\n{{json}}\nThe error was:\n{{error}}\nPlease reply with the corrected JSON."
      }
    },
    {
      "id": "schemish-1",
      "type": "schemish",
      "configuration": {}
    },
    {
      "id": "textGenerator",
      "type": "invoke",
      "configuration": {}
    },
    {
      "id": "validateOnce",
      "type": "validateJson",
      "configuration": {}
    },
    {
      "id": "validateTwice",
      "type": "validateJson",
      "configuration": {}
    }
  ],
  "kits": [
    {
      "title": "Core Kit",
      "url": "npm:@google-labs/core-kit"
    },
    {
      "title": "JSON Kit",
      "url": "npm:@google-labs/json-kit"
    },
    {
      "title": "Template Kit",
      "url": "npm:@google-labs/template-kit"
    }
  ]
}