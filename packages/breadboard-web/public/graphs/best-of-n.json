{
  "title": "Best of N",
  "description": "Apply the `agent` to `task` in parallel of `n` attempts, then return the best response that fits the task",
  "version": "0.0.2",
  "edges": [
    {
      "from": "createList",
      "to": "generateN",
      "out": "list",
      "in": "list"
    },
    {
      "from": "curry-3",
      "to": "generateN",
      "out": "board",
      "in": "board"
    },
    {
      "from": "filterErrors",
      "to": "output-2",
      "out": "list",
      "in": "list"
    },
    {
      "from": "filterErrors",
      "to": "pickFirst",
      "out": "list",
      "in": "list"
    },
    {
      "from": "filterErrors",
      "to": "presentChoices",
      "out": "list",
      "in": "json"
    },
    {
      "from": "filterErrors",
      "to": "promptTemplate-5",
      "out": "n",
      "in": "n"
    },
    {
      "from": "generateN",
      "to": "filterErrors",
      "out": "list",
      "in": "list"
    },
    {
      "from": "input-1",
      "to": "createList",
      "out": "n",
      "in": "n"
    },
    {
      "from": "input-1",
      "to": "curry-3",
      "out": "agent",
      "in": "agent"
    },
    {
      "from": "input-1",
      "to": "curry-3",
      "out": "text",
      "in": "context"
    },
    {
      "from": "input-1",
      "to": "promptTemplate-5",
      "out": "text",
      "in": "text"
    },
    {
      "from": "pickFirst",
      "to": "output-2",
      "out": "result",
      "in": "best"
    },
    {
      "from": "presentChoices",
      "to": "promptTemplate-5",
      "out": "result",
      "in": "list"
    },
    {
      "from": "promptTemplate-5",
      "to": "rank",
      "out": "prompt",
      "in": "instruction"
    },
    {
      "from": "rank",
      "to": "output-2",
      "out": "json",
      "in": "rank"
    },
    {
      "from": "rank",
      "to": "pickFirst",
      "out": "json",
      "in": "rank"
    }
  ],
  "nodes": [
    {
      "id": "input-1",
      "type": "input",
      "configuration": {
        "schema": {
          "type": "object",
          "properties": {
            "agent": {
              "type": "string",
              "title": "Agent",
              "description": "Agent to apply to the task",
              "examples": [
                "ad-writer.json"
              ]
            },
            "n": {
              "type": "number",
              "title": "Number of parallel attempts",
              "examples": [
                "4"
              ]
            },
            "text": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ],
              "title": "Task",
              "description": "The task to perform",
              "examples": [
                "This ad is for my lawn care company that will fit into an inch of newspaper copy. It's called \"Max's Lawn Care\" and it should use the slogan \"I care about your lawn.\" Emphasize the folksiness of it being a local, sole proprietorship that I started after graduating from high school."
              ],
              "format": "multiline"
            }
          },
          "required": [
            "agent",
            "n",
            "text"
          ]
        }
      }
    },
    {
      "id": "output-2",
      "type": "output",
      "configuration": {
        "schema": {
          "type": "object",
          "properties": {
            "best": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ],
              "title": "result",
              "description": "The result of the Jsonata expression"
            },
            "list": {
              "type": "string",
              "title": "list"
            },
            "rank": {
              "type": "string",
              "title": "json",
              "description": "The validated JSON."
            }
          }
        }
      }
    },
    {
      "id": "createList",
      "type": "runJavascript",
      "configuration": {
        "code": "const createList = ({n:n2})=>{return{list:[...Array(n2).keys()]}};",
        "name": "createList",
        "raw": true
      }
    },
    {
      "id": "curry-3",
      "type": "curry",
      "configuration": {
        "$board": {
          "kind": "board",
          "board": {
            "kits": [],
            "edges": [
              {
                "from": "invokeAgent",
                "to": "output-2",
                "out": "json",
                "in": "item"
              },
              {
                "from": "input-1",
                "to": "invokeAgent",
                "out": "context",
                "in": "context"
              },
              {
                "from": "input-1",
                "to": "invokeAgent",
                "out": "agent",
                "in": "$board"
              }
            ],
            "nodes": [
              {
                "id": "output-2",
                "type": "output",
                "configuration": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "item": {
                        "type": "string",
                        "title": "item"
                      }
                    }
                  }
                }
              },
              {
                "id": "invokeAgent",
                "type": "invoke",
                "configuration": {}
              },
              {
                "id": "input-1",
                "type": "input",
                "configuration": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "context": {
                        "type": "string",
                        "title": "context"
                      },
                      "agent": {
                        "type": "string",
                        "title": "board",
                        "description": "The board to invoke. Can be a BoardCapability, a graph or a URL",
                        "behavior": [
                          "board"
                        ]
                      }
                    },
                    "required": [
                      "context",
                      "agent"
                    ]
                  }
                }
              }
            ],
            "graphs": {}
          }
        }
      },
      "metadata": {
        "title": "Curry Agent and Context"
      }
    },
    {
      "id": "filterErrors",
      "type": "runJavascript",
      "configuration": {
        "code": "const filterErrors = ({list})=>{const listWithErrors=list;const filtered=listWithErrors.filter(item=>!item.$error);return{list:filtered,n:filtered.length}};",
        "name": "filterErrors",
        "raw": true
      }
    },
    {
      "id": "generateN",
      "type": "map",
      "configuration": {}
    },
    {
      "id": "pickFirst",
      "type": "jsonata",
      "configuration": {
        "expression": "($index := $split((**.choice)[0], ' ')[1];list[0][0][$index]).item"
      }
    },
    {
      "id": "presentChoices",
      "type": "jsonata",
      "configuration": {
        "expression": "item ~> $map(function ($v, $i) { { \"title\": \"choice \" & $i, \"content\": $v } })"
      }
    },
    {
      "id": "promptTemplate-5",
      "type": "promptTemplate",
      "configuration": {
        "template": "You are a ranking expert. Given {{n}} choices of the output, you are to rank these choices in the order (starting with the best) of matching the requirements of the task described below:\n\n        TASK:\n\n        {{text}}\n\n        CHOICES:\n\n        {{list}}"
      }
    },
    {
      "id": "rank",
      "type": "structuredWorker",
      "configuration": {
        "context": [],
        "schema": {
          "type": "object",
          "properties": {
            "ranking": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "choice": {
                    "type": "string",
                    "description": "Title of ranked choice"
                  },
                  "justification": {
                    "type": "string",
                    "description": "Detailed justification of why this is the right position within ranking"
                  }
                }
              }
            }
          }
        }
      }
    }
  ]
}