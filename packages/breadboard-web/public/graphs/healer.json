{
  "title": "Healer",
  "description": "Try to heal broken text by generating new text that fixes the errors supplied by the validator",
  "$schema": "https://raw.githubusercontent.com/breadboard-ai/breadboard/@google-labs/breadboard-schema@1.2.0/packages/schema/breadboard.schema.json",
  "version": "0.0.1",
  "edges": [
    {
      "from": "parameters",
      "to": "validate",
      "constant": true,
      "out": "validator",
      "in": "path"
    },
    {
      "from": "parameters",
      "to": "validate",
      "out": "text",
      "in": "text"
    },
    {
      "from": "parameters",
      "to": "generate",
      "constant": true,
      "out": "generator",
      "in": "path"
    },
    {
      "from": "dontUseStreaming",
      "to": "generate",
      "constant": true,
      "out": "useStreaming",
      "in": "useStreaming"
    },
    {
      "from": "validate",
      "to": "startCycle",
      "out": "error",
      "in": "error"
    },
    {
      "from": "first",
      "to": "first",
      "out": "count",
      "in": "count"
    },
    {
      "from": "parameters",
      "to": "first",
      "constant": true,
      "out": "tries",
      "in": "tries"
    },
    {
      "from": "startCycle",
      "to": "first",
      "out": "error",
      "in": "error"
    },
    {
      "from": "first",
      "to": "firstTimePremble",
      "out": "first",
      "in": "first"
    },
    {
      "from": "first",
      "to": "otherTimePremble",
      "out": "again",
      "in": "again"
    },
    {
      "from": "firstTimePremble",
      "to": "tryTemplate",
      "out": "preamble",
      "in": "preamble"
    },
    {
      "from": "otherTimePremble",
      "to": "tryTemplate",
      "out": "preamble",
      "in": "preamble"
    },
    {
      "from": "parameters",
      "to": "tryTemplate",
      "out": "text",
      "in": "text"
    },
    {
      "from": "generate",
      "to": "tryTemplate",
      "out": "text",
      "in": "text"
    },
    {
      "from": "validate",
      "to": "tryTemplate",
      "out": "error",
      "in": "error"
    },
    {
      "from": "tryTemplate",
      "to": "generate",
      "out": "prompt",
      "in": "text"
    },
    {
      "from": "generate",
      "to": "validate",
      "out": "text",
      "in": "text"
    },
    {
      "from": "validate",
      "to": "outputSuccess",
      "out": "text",
      "in": "text"
    }
  ],
  "nodes": [
    {
      "id": "parameters",
      "type": "input",
      "configuration": {
        "schema": {
          "type": "object",
          "properties": {
            "text": {
              "type": "string",
              "title": "Text to Heal",
              "format": "multiline",
              "description": "The text to heal, if necessary",
              "default": "{\n  first_answer: \"to live\",\n  \"assumptionss\": [\n      \"life is meaningful\",\n      \"there is a single meaning to life\",\n      \"the meaning of life is inherent to life itself\"\n  ],\n  \"critique\": [\n      \"life may not be meaningful\",\n      \"there may be multiple meanings to life\",\n      \"the meaning of life may be extrinsic to life itself\"\n  ],\n  \"response\": \"the meaning of life is a complex question with no easy answer\"\n}"
            },
            "generator": {
              "type": "board",
              "title": "Text Generator",
              "description": "The text generator to use for healing.",
              "default": "text-generator.json"
            },
            "validator": {
              "type": "board",
              "title": "Text Validator",
              "description": "The text validator to use for healing.",
              "default": "json-validator.json"
            },
            "tries": {
              "type": "number",
              "title": "Tries",
              "description": "The number of tries to attempt to fix the problem",
              "default": "5"
            }
          },
          "required": [
            "text",
            "gnerator",
            "validator"
          ]
        }
      }
    },
    {
      "id": "validate",
      "type": "invoke"
    },
    {
      "id": "generate",
      "type": "invoke"
    },
    {
      "id": "dontUseStreaming",
      "type": "passthrough",
      "configuration": {
        "useStreaming": false
      }
    },
    {
      "id": "startCycle",
      "type": "passthrough"
    },
    {
      "id": "first",
      "type": "jsonata",
      "configuration": {
        "expression": "{\n    \"error\": error,\n    \"count\": count + 1, \n    \"tries\": tries,\n    (count = 0 ? \n        \"first\" : \n        count > 0 and count < tries ?\n            \"again\" : \n            \"done\"): true\n}",
        "count": 0,
        "raw": true
      }
    },
    {
      "id": "firstTimePremble",
      "type": "passthrough",
      "configuration": {
        "preamble": "You are a validation error fixer bot. Your job is to examine the INPUT provided and the ERRORS it currently contains. You notice the format of the input and supply a FIX that matches the format and contains minimal modifications to input to correct the validation errors. You do not change the content of the input, only the validation errors."
      }
    },
    {
      "id": "otherTimePremble",
      "type": "passthrough",
      "configuration": {
        "preamble": "Nice job, validation error fixer bot! However, you didn't get it quite right "
      }
    },
    {
      "id": "tryTemplate",
      "type": "promptTemplate",
      "configuration": {
        "template": "\n{{preamble}}\n\nINPUT:\n\n{{text}}\n\nThe validation errors are:\n\nERRORS:\n{{error}}\n\nFIX:"
      }
    },
    {
      "id": "outputSuccess",
      "type": "output",
      "configuration": {
        "schema": {
          "type": "object",
          "properties": {
            "text": {
              "type": "object",
              "title": "Healed Text",
              "description": "The healed text"
            }
          }
        }
      }
    },
    {
      "id": "outputError",
      "type": "output",
      "configuration": {
        "schema": {
          "type": "object",
          "properties": {
            "error": {
              "type": "object",
              "title": "Error",
              "description": "Error reported as a failure to heal"
            }
          }
        }
      }
    }
  ],
  "kits": [
    {
      "url": "npm:@google-labs/template-kit"
    },
    {
      "url": "npm:@google-labs/core-kit"
    },
    {
      "url": "npm:@google-labs/json-kit"
    }
  ]
}