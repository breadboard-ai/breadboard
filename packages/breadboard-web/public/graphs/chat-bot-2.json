{
  "title": "Chat bot 2.0",
  "description": "A board that uses the Agent kit to create a simple chat bot",
  "version": "0.0.1",
  "edges": [
    {
      "from": "repeat",
      "to": "output-2",
      "out": "context",
      "in": "context"
    }
  ],
  "nodes": [
    {
      "id": "output-2",
      "type": "output",
      "configuration": {
        "schema": {
          "type": "object",
          "properties": {
            "context": {
              "type": "string",
              "title": "context"
            }
          },
          "required": [
            "context"
          ]
        }
      }
    },
    {
      "id": "repeat",
      "type": "repeater",
      "configuration": {
        "context": [],
        "worker": {
          "kind": "board",
          "board": {
            "kits": [],
            "edges": [
              {
                "from": "bot",
                "to": "output-2",
                "out": "context",
                "in": "context"
              },
              {
                "from": "bot",
                "to": "output-2",
                "out": "text",
                "in": "text"
              },
              {
                "from": "askUser",
                "to": "bot",
                "out": "context",
                "in": "context"
              },
              {
                "from": "input-1",
                "to": "askUser",
                "out": "context",
                "in": "context"
              }
            ],
            "nodes": [
              {
                "id": "output-2",
                "type": "output",
                "configuration": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "context": {
                        "type": "string",
                        "title": "context"
                      },
                      "text": {
                        "title": "Output",
                        "type": "string",
                        "description": "Agent's output"
                      }
                    },
                    "required": [
                      "context",
                      "text"
                    ]
                  }
                }
              },
              {
                "id": "bot",
                "type": "worker",
                "configuration": {
                  "instruction": "As a friendlly assistant bot, reply to the request below in a friendly, helpful, and brief manner to assist the user as quickly as possible. Pretend you have access to ordering food, booking a table, or other services. You can also ask for more information if needed. If you don't understand the request, ask for clarification. If you can't help, apologize and explain why you can't help"
                }
              },
              {
                "id": "askUser",
                "type": "invoke",
                "configuration": {
                  "$board": {
                    "title": "Ask User",
                    "description": "A building block for the nascent agent framework",
                    "version": "0.0.1",
                    "edges": [
                      {
                        "from": "appendContext",
                        "to": "output-2",
                        "out": "context",
                        "in": "context"
                      },
                      {
                        "from": "input",
                        "to": "appendContext",
                        "out": "text",
                        "in": "text"
                      },
                      {
                        "from": "input",
                        "to": "output-2",
                        "out": "text",
                        "in": "text"
                      },
                      {
                        "from": "createSchema",
                        "to": "input",
                        "out": "schema",
                        "in": "schema"
                      },
                      {
                        "from": "createSchema",
                        "to": "appendContext",
                        "out": "context",
                        "in": "context"
                      },
                      {
                        "from": "input-1",
                        "to": "maybeOutputRouter",
                        "out": "context",
                        "in": "context"
                      },
                      {
                        "from": "input-1",
                        "to": "createSchema",
                        "out": "title",
                        "in": "title"
                      },
                      {
                        "from": "input-1",
                        "to": "createSchema",
                        "out": "description",
                        "in": "description"
                      },
                      {
                        "from": "maybeOutputRouter",
                        "to": "createSchema",
                        "out": "context",
                        "in": "context"
                      },
                      {
                        "from": "maybeOutputRouter",
                        "to": "output",
                        "out": "output",
                        "in": "output"
                      }
                    ],
                    "nodes": [
                      {
                        "id": "output-2",
                        "type": "output",
                        "configuration": {
                          "schema": {
                            "type": "object",
                            "properties": {
                              "context": {
                                "type": "array",
                                "title": "Context"
                              },
                              "text": {
                                "title": "Text",
                                "type": "string"
                              }
                            },
                            "required": [
                              "context",
                              "text"
                            ]
                          }
                        }
                      },
                      {
                        "id": "appendContext",
                        "type": "invoke",
                        "configuration": {
                          "path": "#appendContext"
                        }
                      },
                      {
                        "id": "input",
                        "type": "input",
                        "configuration": {
                          "schema": {
                            "type": "object",
                            "properties": {
                              "text": {
                                "title": "Text",
                                "type": "string"
                              }
                            },
                            "required": [
                              "text"
                            ]
                          }
                        }
                      },
                      {
                        "id": "createSchema",
                        "type": "invoke",
                        "configuration": {
                          "path": "#createSchema"
                        }
                      },
                      {
                        "id": "input-1",
                        "type": "input",
                        "configuration": {
                          "schema": {
                            "type": "object",
                            "properties": {
                              "context": {
                                "title": "Context",
                                "description": "Incoming conversation context",
                                "type": "object",
                                "examples": [
                                  "[{\"role\":\"model\",\"parts\":[{\"text\":\"Hello, user!\"}]}]"
                                ],
                                "default": "[]"
                              },
                              "title": {
                                "title": "Title",
                                "description": "The title to ask",
                                "default": "User",
                                "type": "string"
                              },
                              "description": {
                                "title": "Description",
                                "description": "The description of what to ask",
                                "default": "User's question or request",
                                "type": "string"
                              }
                            },
                            "required": []
                          }
                        }
                      },
                      {
                        "id": "maybeOutputRouter",
                        "type": "invoke",
                        "configuration": {
                          "path": "#maybeOutputRouter"
                        }
                      },
                      {
                        "id": "output",
                        "type": "output",
                        "configuration": {
                          "schema": {
                            "type": "object",
                            "hints": [
                              "bubble"
                            ],
                            "properties": {
                              "output": {
                                "type": "string",
                                "title": "Output",
                                "description": "The output to display"
                              }
                            }
                          }
                        }
                      }
                    ],
                    "graphs": {
                      "appendContext": {
                        "edges": [
                          {
                            "from": "appendContext-input",
                            "to": "appendContext-run",
                            "out": "*"
                          },
                          {
                            "from": "appendContext-run",
                            "to": "appendContext-output",
                            "out": "*"
                          }
                        ],
                        "nodes": [
                          {
                            "id": "appendContext-input",
                            "type": "input",
                            "configuration": {}
                          },
                          {
                            "id": "appendContext-run",
                            "type": "runJavascript",
                            "configuration": {
                              "code": "function appendContext({context,text}) {return{context:[...context||[],{role:\"user\",parts:[{text}]}]}}",
                              "name": "appendContext",
                              "raw": true
                            }
                          },
                          {
                            "id": "appendContext-output",
                            "type": "output",
                            "configuration": {}
                          }
                        ]
                      },
                      "createSchema": {
                        "edges": [
                          {
                            "from": "createSchema-input",
                            "to": "createSchema-run",
                            "out": "*"
                          },
                          {
                            "from": "createSchema-run",
                            "to": "createSchema-output",
                            "out": "*"
                          }
                        ],
                        "nodes": [
                          {
                            "id": "createSchema-input",
                            "type": "input",
                            "configuration": {}
                          },
                          {
                            "id": "createSchema-run",
                            "type": "runJavascript",
                            "configuration": {
                              "code": "function createSchema({title,description,context}) {const schema2={type:\"object\",properties:{text:{title,description,behavior:[\"transient\"]}}};return{schema:schema2,context}}",
                              "name": "createSchema",
                              "raw": true
                            }
                          },
                          {
                            "id": "createSchema-output",
                            "type": "output",
                            "configuration": {}
                          }
                        ]
                      },
                      "maybeOutputRouter": {
                        "edges": [
                          {
                            "from": "maybeOutputRouter-input",
                            "to": "maybeOutputRouter-run",
                            "out": "*"
                          },
                          {
                            "from": "maybeOutputRouter-run",
                            "to": "maybeOutputRouter-output",
                            "out": "*"
                          }
                        ],
                        "nodes": [
                          {
                            "id": "maybeOutputRouter-input",
                            "type": "input",
                            "configuration": {}
                          },
                          {
                            "id": "maybeOutputRouter-run",
                            "type": "runJavascript",
                            "configuration": {
                              "code": "function maybeOutputRouter({context}) {if(Array.isArray(context)&&context.length>0){const lastItem=context[context.length-1];if(lastItem.role===\"model\"){const output=lastItem.parts.map(item=>item.text).join(\"/n\");return{output,context}}}return{context}}",
                              "name": "maybeOutputRouter",
                              "raw": true
                            }
                          },
                          {
                            "id": "maybeOutputRouter-output",
                            "type": "output",
                            "configuration": {}
                          }
                        ]
                      }
                    }
                  }
                }
              },
              {
                "id": "input-1",
                "type": "input",
                "configuration": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "context": {
                        "type": "string",
                        "title": "context"
                      }
                    },
                    "required": [
                      "context"
                    ]
                  }
                }
              }
            ],
            "graphs": {}
          }
        },
        "max": 3
      }
    }
  ],
  "graphs": {}
}