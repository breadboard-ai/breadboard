{
  "title": "Agent",
  "description": "The essential building block for the emerging Agent Framework",
  "version": "0.0.3",
  "edges": [
    {
      "from": "assemble",
      "to": "output-2",
      "out": "result",
      "in": "context"
    },
    {
      "from": "generate",
      "to": "assemble",
      "out": "context",
      "in": "generated"
    },
    {
      "from": "generate",
      "to": "output-2",
      "out": "text",
      "in": "text"
    },
    {
      "from": "input-1",
      "to": "assemble",
      "out": "context",
      "in": "context"
    },
    {
      "from": "input-1",
      "to": "generate",
      "out": "context",
      "in": "context"
    },
    {
      "from": "input-1",
      "to": "generate",
      "out": "generator",
      "in": "$board"
    },
    {
      "from": "input-1",
      "to": "generate",
      "out": "stopSequences",
      "in": "stopSequences"
    }
  ],
  "nodes": [
    {
      "id": "input-1",
      "type": "input",
      "configuration": {
        "schema": {
          "type": "object",
          "properties": {
            "context": {
              "type": "array",
              "title": "Context",
              "examples": [
                "[\n  {\n    \"role\": \"user\",\n    \"parts\": [\n      {\n        \"text\": \"You are a brilliant poet who specializes in two-line rhyming poems.\\nGiven any topic, you can quickly whip up a two-line rhyming poem about it.\\nReady?\\n\\nThe topic is: the universe within us\"\n      }\n    ]\n  }\n]"
              ],
              "items": {
                "type": "object",
                "behavior": [
                  "llm-content"
                ]
              }
            },
            "generator": {
              "type": "string",
              "behavior": [
                "board"
              ],
              "title": "Generator",
              "description": "The board to invoke. Can be a BoardCapability, a graph or a URL",
              "default": "gemini-generator.json"
            },
            "stopSequences": {
              "type": "array",
              "title": "Stop Sequences",
              "default": "[]"
            }
          },
          "required": [
            "context"
          ]
        }
      }
    },
    {
      "id": "output-2",
      "type": "output",
      "configuration": {
        "schema": {
          "type": "object",
          "properties": {
            "context": {
              "type": "object",
              "title": "Context",
              "description": "Agent context after generation"
            },
            "text": {
              "type": "string",
              "title": "Output",
              "description": "Agent's output"
            }
          }
        }
      }
    },
    {
      "id": "assemble",
      "type": "jsonata",
      "configuration": {
        "expression": "$append(context ? context, [generated])"
      }
    },
    {
      "id": "generate",
      "type": "invoke",
      "configuration": {
        "text": "unused"
      }
    }
  ]
}