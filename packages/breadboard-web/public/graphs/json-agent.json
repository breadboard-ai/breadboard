{
  "title": "JSON Agent",
  "description": "An agent-like board that outputs structured data (JSON)",
  "version": "0.0.3",
  "edges": [
    {
      "from": "validate",
      "to": "validationError",
      "out": "$error",
      "in": "$error"
    },
    {
      "from": "validate",
      "to": "output-2",
      "out": "json",
      "in": "json"
    },
    {
      "from": "agent",
      "to": "validate",
      "out": "text",
      "in": "json"
    },
    {
      "from": "agent",
      "to": "output-2",
      "out": "context",
      "in": "context"
    },
    {
      "from": "input-1",
      "to": "schemish",
      "out": "schema",
      "in": "schema"
    },
    {
      "from": "input-1",
      "to": "format",
      "out": "text",
      "in": "text"
    },
    {
      "from": "input-1",
      "to": "appendContext",
      "out": "context",
      "in": "context"
    },
    {
      "from": "input-1",
      "to": "agent",
      "out": "generator",
      "in": "generator"
    },
    {
      "from": "input-1",
      "to": "validate",
      "out": "schema",
      "in": "schema"
    },
    {
      "from": "appendContext",
      "to": "agent",
      "out": "context",
      "in": "context"
    },
    {
      "from": "schemish",
      "to": "format",
      "out": "schemish",
      "in": "schemish"
    },
    {
      "from": "format",
      "to": "appendContext",
      "out": "text",
      "in": "text"
    }
  ],
  "nodes": [
    {
      "id": "output-2",
      "type": "output",
      "configuration": {
        "schema": {
          "type": "object",
          "properties": {
            "json": {
              "type": "string",
              "title": "json"
            },
            "context": {
              "type": "string",
              "title": "context"
            }
          },
          "required": [
            "json",
            "context"
          ]
        }
      }
    },
    {
      "id": "validate",
      "type": "validateJson",
      "configuration": {}
    },
    {
      "id": "agent",
      "type": "invoke",
      "configuration": {
        "path": "agent.json"
      }
    },
    {
      "id": "input-1",
      "type": "input",
      "configuration": {
        "schema": {
          "type": "object",
          "properties": {
            "schema": {
              "title": "Schema",
              "examples": [
                "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"descriptions\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"title\": {\n            \"type\": \"string\",\n            \"description\": \"expert's title\"\n          },\n          \"responsibilities\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\",\n              \"description\": \"expert's responsibilities\"\n            }\n          }\n        }\n      }\n    }\n  }\n}"
              ],
              "type": "object",
              "format": "multiline",
              "default": "{}"
            },
            "text": {
              "title": "Text",
              "description": "The value to substitute for the parameter \"text\"",
              "type": [
                "string",
                "object"
              ],
              "examples": [
                "You are building a team of skilled experts to create high quality rhyming poems that will be used as lyrics for jingles in TV commercials. These experts can only read text and produce text. Creating melodies and producing music is not their responsibility. The experts will work as a team, collaborating, creating, reviewing, critiquing, and iteratively improving the quality of the poems.\n\nPlease identify the necessary job descriptions of these experts."
              ],
              "format": "multiline"
            },
            "context": {
              "title": "Context",
              "type": "array",
              "examples": [
                "[]"
              ]
            },
            "generator": {
              "title": "Generator",
              "default": "gemini-generator.json",
              "type": "string"
            }
          },
          "required": [
            "text",
            "context"
          ]
        }
      }
    },
    {
      "id": "validationError",
      "type": "output",
      "configuration": {
        "schema": {
          "type": "object",
          "properties": {
            "$error": {
              "type": "string",
              "title": "$error"
            }
          },
          "required": [
            "$error"
          ]
        }
      }
    },
    {
      "id": "appendContext",
      "type": "invoke",
      "configuration": {
        "path": "#appendContext"
      }
    },
    {
      "id": "schemish",
      "type": "schemish",
      "configuration": {}
    },
    {
      "id": "format",
      "type": "promptTemplate",
      "configuration": {
        "template": "{{text}}\n\nReply as valid JSON of the following format:\n\n```json\n{{schemish}}\n```\n"
      }
    }
  ],
  "graphs": {
    "appendContext": {
      "edges": [
        {
          "from": "appendContext-input",
          "to": "appendContext-run",
          "out": "*"
        },
        {
          "from": "appendContext-run",
          "to": "appendContext-output",
          "out": "*"
        }
      ],
      "nodes": [
        {
          "id": "appendContext-input",
          "type": "input",
          "configuration": {}
        },
        {
          "id": "appendContext-run",
          "type": "runJavascript",
          "configuration": {
            "code": "function appendContext({context,text}) {return{context:[...context||[],{role:\"user\",parts:[{text}]}]}}",
            "name": "appendContext",
            "raw": true
          }
        },
        {
          "id": "appendContext-output",
          "type": "output",
          "configuration": {}
        }
      ]
    }
  }
}