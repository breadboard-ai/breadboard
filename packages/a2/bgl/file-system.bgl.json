{
  "title": "Local File System",
  "description": "",
  "version": "0.0.1",
  "nodes": [],
  "edges": [],
  "metadata": {
    "icon": "code",
    "visual": {
      "presentation": {
        "themes": {
          "f65ea9aa-b8c6-4c80-9667-a08c4f631013": {
            "themeColors": {
              "primaryColor": "#246db5",
              "secondaryColor": "#5cadff",
              "backgroundColor": "#ffffff",
              "textColor": "#1a1a1a",
              "primaryTextColor": "#ffffff"
            },
            "template": "basic",
            "splashScreen": {
              "storedData": {
                "handle": "/images/app/generic-flow.jpg",
                "mimeType": "image/jpeg"
              }
            }
          }
        },
        "theme": "f65ea9aa-b8c6-4c80-9667-a08c4f631013"
      }
    },
    "userModified": true,
    "tags": [
      "connector",
      "published",
      "experimental"
    ],
    "comments": [
      {
        "id": "comment-c74afa15",
        "text": "Intentionally Left Blank",
        "metadata": {
          "title": "Comment",
          "visual": {
            "x": 281,
            "y": 501,
            "collapsed": "expanded",
            "outputHeight": 0
          }
        }
      }
    ]
  },
  "modules": {
    "configurator": {
      "code": "/**\n * @fileoverview Add a description for your module here.\n */\nimport { createConfigurator } from \"./a2/connector-manager\";\nexport { invoke as default, describe };\nconst CONNECTOR_TITLE = \"File System\";\nconst { invoke, describe } = createConfigurator({\n    title: CONNECTOR_TITLE,\n    initialize: async () => {\n        return { title: \"File System\", configuration: {} };\n    },\n    read: async ({ id: _id, configuration }) => {\n        return {\n            schema: {\n                type: \"object\",\n                properties: {},\n            },\n            values: configuration,\n        };\n    },\n    preview: async () => {\n        return [\n            {\n                parts: [{ text: \"File System\" }],\n            },\n        ];\n    },\n    write: async ({ values }) => {\n        return values;\n    },\n});\n//# sourceMappingURL=configurator.js.map"
    },
    "connector-load": {
      "code": "import { llm } from \"./a2/utils\";\nexport { invoke as default, describe };\nasync function invoke() {\n    return {\n        context: [llm `Loading this connector is not yet implemented`.asContent()],\n    };\n}\nasync function describe() {\n    return {\n        metadata: {\n            tags: [\"connector-load\"],\n        },\n        inputSchema: {\n            type: \"object\",\n            properties: {\n                context: {\n                    type: \"array\",\n                    items: { type: \"object\", behavior: [\"llm-content\"] },\n                    title: \"Context in\",\n                },\n            },\n        },\n        outputSchema: {\n            type: \"object\",\n            properties: {\n                context: {\n                    type: \"array\",\n                    items: { type: \"object\", behavior: [\"llm-content\"] },\n                    title: \"Context out\",\n                },\n            },\n        },\n    };\n}\n//# sourceMappingURL=connector-load.js.map"
    },
    "connector-save": {
      "code": "import { llm } from \"./a2/utils\";\nexport { invoke as default, describe };\nasync function invoke({ id, method, context, }) {\n    console.log(\"SAVING TO FILE SYSTEM\", id, method, context);\n    return { context: [llm `Saved`.asContent()] };\n}\nasync function describe() {\n    return {\n        title: \"Save To Local File System\",\n        metadata: {\n            tags: [\"connector-save\"],\n        },\n        inputSchema: {\n            type: \"object\",\n            properties: {\n                context: {\n                    type: \"array\",\n                    items: { type: \"object\", behavior: [\"llm-content\"] },\n                    title: \"Context in\",\n                },\n            },\n        },\n        outputSchema: {\n            type: \"object\",\n            properties: {\n                context: {\n                    type: \"array\",\n                    items: { type: \"object\", behavior: [\"llm-content\"] },\n                    title: \"Context out\",\n                },\n            },\n        },\n    };\n}\n//# sourceMappingURL=connector-save.js.map"
    },
    "types": {
      "code": "export {};\n//# sourceMappingURL=types.js.map"
    }
  },
  "imports": {
    "a2": {
      "url": "./a2.bgl.json"
    }
  },
  "exports": [
    "#module:configurator",
    "#module:connector-save",
    "#module:connector-load"
  ]
}