{
  "title": "UI Code Generator Workbench",
  "description": "A blank board. Use it as a starting point for your creations.",
  "version": "0.0.1",
  "nodes": [
    {
      "id": "a2-2075294f",
      "type": "file://bgl/a2.bgl.json#module:make-code",
      "metadata": {
        "visual": {
          "x": -40,
          "y": -780,
          "collapsed": "expanded",
          "outputHeight": 288
        },
        "title": "Make Code",
        "logLevel": "info"
      },
      "configuration": {
        "instruction": {
          "role": "user",
          "parts": [
            {
              "text": "A tree"
            }
          ]
        }
      }
    },
    {
      "id": "input-b0928a0a",
      "type": "input",
      "metadata": {
        "visual": {
          "x": -380,
          "y": -780,
          "collapsed": "expanded",
          "outputHeight": 88
        },
        "title": "Reference Implementation",
        "logLevel": "info"
      },
      "configuration": {
        "schema": {
          "properties": {
            "context": {
              "type": "array",
              "title": "Context",
              "items": {
                "type": "object",
                "examples": [],
                "behavior": [
                  "llm-content"
                ]
              },
              "default": "[{\"role\":\"user\",\"parts\":[{\"text\":\"This is a reference implementation for the JavaScript style and libraries to use.\\n\\n--- my-button.js ---\\n```\\nimport { LitElement, html, css } from \\\"lit\\\";\\nimport { customElement, property, state } from \\\"lit/decorators.js\\\";\\n\\n@customElement(\\\"my-counter\\\")\\nexport class MyCounter extends LitElement {\\n  @property()\\n  label = 'My Counter';\\n\\n  @state()\\n  counter = 0;\\n\\n  static styles = css`\\n    :host {\\n      display: block;\\n    }\\n\\n    button {\\n      &::before {\\n        content: '';\\n        width: 20px;\\n        height: 20px;\\n        background: var(--icon-add) 8px center / 20px 20px no-repeat;\\n      }\\n    }\\n    `;\\n\\n  render() {\\n    return html`<button @click=${() => {\\n      this.counter++;\\n    }}>${this.label}<button>`;\\n  }\\n}\\n```\"},{\"text\":\"This is a list of predefined icon values that can be used within the UI.\\n\\n# Action\\nadd\\ncreate\\nedit\\ndelete\\nsave\\nsearch\\nshare\\nsend\\nget_app\\ndownload\\nupload\\nview_list\\nview_module\\nview_quilt\\nview_stream\\n\\n# Navigation\\narrow_back\\narrow_forward\\narrow_drop_down\\narrow_drop_up\\narrow_left\\narrow_right\\nexpand_less\\nexpand_more\\nmenu\\nmore_vert\\nmore_horiz\\nrefresh\\nfirst_page\\nlast_page\\n\\n#Communication\\nchat\\nforum\\nemail\\nphone\\ncall\\nvideocam\\nmessage\\nnotifications\\nnotifications_active\\nnotifications_none\\nnotifications_off\\nring_volume\\nvolume_up\\nvolume_down\\nvolume_mute\\n\\n#Content\\ncopy\\ncut\\npaste\\nlink\\nimage\\nphoto\\naudiotrack\\nmic\\nvideocam\\nmovie\\nbook\\nprint\\n\\n# Social\\nperson\\npeople\\ngroup\\nshare\\nthumb_up\\nthumb_down\\npublic\\nprivate\\n\\n# Alerts/Status\\nwarning\\nerror\\ninfo\\ncheck_circle\\ncancel\\nclose\\nadd_alert\\n\\n# Av/Media\\nplay_arrow\\npause\\nstop\\nfast_forward\\nfast_rewind\\nskip_next\\nskip_previous\\nvolume_up\\nvolume_down\\nvolume_mute\\nmic\\nmic_off\\n\\n# Places\\nlocation_on\\nplace\\nmap\\ndirections\\n\\n# File/Folder\\nfolder\\nfolder_open\\nfile_copy\\nfile_download\\nfile_upload\"},{\"text\":\"You should use CSS custom properties for any color or font used. The following properties are the only ones you may use, but you must not define them yourself as they already exist, and you must not provide any fallback values for them, either:\\n\\n--primary-color\\n--secondary-color\\n--text-color\\n--background-color\"},{\"text\":\"When using icons prepend --icon- on the front, e.g, --icon-file_upload.\"}]}]",
              "description": ""
            }
          },
          "type": "object",
          "required": []
        }
      }
    }
  ],
  "edges": [
    {
      "from": "input-b0928a0a",
      "to": "a2-2075294f",
      "out": "context",
      "in": "context"
    }
  ],
  "metadata": {
    "visual": {}
  }
}