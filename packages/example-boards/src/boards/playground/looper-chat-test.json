{
  "title": "Looper Chat Testing Grounds",
  "description": "A board where we teach the Looper Node facilitate conversations.",
  "version": "0.0.1",
  "edges": [
    {
      "from": "human-6",
      "to": "looper-4",
      "out": "context",
      "in": "context"
    },
    {
      "from": "looper-4",
      "to": "output-2",
      "out": "done",
      "in": "context"
    },
    {
      "from": "looper-4",
      "to": "specialist-5",
      "out": "loop",
      "in": "in"
    },
    {
      "from": "passthrough-3",
      "to": "looper-4",
      "out": "context",
      "in": "context"
    },
    {
      "from": "specialist-5",
      "to": "human-6",
      "out": "out",
      "in": "context"
    }
  ],
  "nodes": [
    {
      "id": "output-2",
      "type": "output",
      "configuration": {
        "schema": {
          "type": "object",
          "properties": {
            "context": {
              "type": "array",
              "title": "Done",
              "items": {
                "type": "object",
                "anyOf": [
                  {
                    "type": "object",
                    "properties": {
                      "role": {
                        "type": "string",
                        "enum": [
                          "user",
                          "model",
                          "tool"
                        ]
                      },
                      "parts": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "anyOf": [
                            {
                              "type": "object",
                              "properties": {
                                "text": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "text"
                              ],
                              "additionalProperties": false
                            },
                            {
                              "type": "object",
                              "properties": {
                                "functionCall": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    },
                                    "args": {
                                      "type": "object",
                                      "properties": {},
                                      "required": [],
                                      "additionalProperties": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "required": [
                                    "name",
                                    "args"
                                  ],
                                  "additionalProperties": false
                                }
                              },
                              "required": [
                                "functionCall"
                              ],
                              "additionalProperties": false
                            }
                          ]
                        }
                      }
                    },
                    "required": [
                      "parts"
                    ],
                    "additionalProperties": false,
                    "behavior": [
                      "llm-content"
                    ]
                  },
                  {
                    "type": "object",
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string",
                            "enum": [
                              "$metadata"
                            ]
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "looper"
                            ]
                          },
                          "data": {
                            "type": "object",
                            "properties": {
                              "max": {
                                "type": "number"
                              },
                              "todo": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "task": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "task"
                                  ],
                                  "additionalProperties": false
                                }
                              },
                              "doneMarker": {
                                "type": "string"
                              },
                              "done": {
                                "type": "boolean"
                              },
                              "appendLast": {
                                "type": "boolean"
                              },
                              "returnLast": {
                                "type": "boolean"
                              },
                              "next": {
                                "type": "string"
                              }
                            },
                            "required": [],
                            "additionalProperties": false
                          }
                        },
                        "required": [
                          "role",
                          "type",
                          "data"
                        ],
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string",
                            "enum": [
                              "$metadata"
                            ]
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "split"
                            ]
                          },
                          "data": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "start",
                                  "next",
                                  "end"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "type",
                              "id"
                            ],
                            "additionalProperties": false
                          }
                        },
                        "required": [
                          "role",
                          "type",
                          "data"
                        ],
                        "additionalProperties": false
                      }
                    ]
                  }
                ],
                "behavior": [
                  "llm-content"
                ]
              }
            }
          }
        }
      }
    },
    {
      "id": "human-6",
      "type": "human",
      "configuration": {},
      "metadata": {
        "title": "User",
        "description": "Giving control back to the user"
      }
    },
    {
      "id": "looper-4",
      "type": "looper",
      "configuration": {
        "task": {
          "parts": [
            {
              "text": "Chat until \"##DONE##\"."
            }
          ]
        }
      },
      "metadata": {
        "title": "Looper"
      }
    },
    {
      "id": "passthrough-3",
      "type": "passthrough",
      "configuration": {
        "context": []
      },
      "metadata": {
        "title": "Start"
      }
    },
    {
      "id": "specialist-5",
      "type": "specialist",
      "configuration": {
        "persona": {
          "parts": [
            {
              "text": "You are a friendly chat bot. You typically start conversation with a warm greeting, and then get to work.\n  \n  Your job is to collect the name, the location, and the instagram account of the customer's business.\n\n  When you have this information, reply with a brief summary of the information you've collected in a neat bulleted list, then conclude the conversation by saying \"OK, hold on one moment while I look that up. I'll be with you in just a couple of minutes. Stand by. ##DONE##\""
            }
          ]
        }
      },
      "metadata": {
        "title": "Chat Bot"
      }
    }
  ]
}