{
  "title": "Team Builder",
  "description": "Build a team of experts",
  "version": "0.0.1",
  "edges": [
    {
      "from": "createPrompts",
      "to": "output-2",
      "out": "list",
      "in": "prompts"
    },
    {
      "from": "input-1",
      "to": "jobDescriptions",
      "out": "purpose",
      "in": "context"
    },
    {
      "from": "jobDescriptions",
      "to": "splitJobDescriptions",
      "out": "json",
      "in": "json"
    },
    {
      "from": "jobDescriptions",
      "to": "workflow",
      "out": "context",
      "in": "context"
    },
    {
      "from": "splitJobDescriptions",
      "to": "createPrompts",
      "out": "result",
      "in": "list"
    },
    {
      "from": "workflow",
      "to": "output-2",
      "out": "json",
      "in": "json"
    }
  ],
  "nodes": [
    {
      "id": "input-1",
      "type": "input",
      "configuration": {
        "schema": {
          "type": "object",
          "properties": {
            "purpose": {
              "type": "array",
              "title": "Purpose",
              "default": "[]",
              "examples": [
                "Create high quality rhyming poems that will be used as lyrics for jingles in TV commercials. Creating melodies and producing music is not part of job."
              ],
              "items": {
                "type": "object",
                "anyOf": [
                  {
                    "type": "object",
                    "properties": {
                      "role": {
                        "type": "string",
                        "enum": [
                          "user",
                          "model",
                          "tool"
                        ]
                      },
                      "parts": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "anyOf": [
                            {
                              "type": "object",
                              "properties": {
                                "text": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "text"
                              ],
                              "additionalProperties": false
                            },
                            {
                              "type": "object",
                              "properties": {
                                "functionCall": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    },
                                    "args": {
                                      "type": "object",
                                      "properties": {},
                                      "required": [],
                                      "additionalProperties": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "required": [
                                    "name",
                                    "args"
                                  ],
                                  "additionalProperties": false
                                }
                              },
                              "required": [
                                "functionCall"
                              ],
                              "additionalProperties": false
                            }
                          ]
                        }
                      }
                    },
                    "required": [
                      "parts"
                    ],
                    "additionalProperties": false,
                    "behavior": [
                      "llm-content"
                    ]
                  },
                  {
                    "type": "object",
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string",
                            "enum": [
                              "$metadata"
                            ]
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "looper"
                            ]
                          },
                          "data": {
                            "type": "object",
                            "properties": {
                              "max": {
                                "type": "number"
                              },
                              "todo": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "task": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "task"
                                  ],
                                  "additionalProperties": false
                                }
                              },
                              "doneMarker": {
                                "type": "string"
                              },
                              "done": {
                                "type": "boolean"
                              },
                              "appendLast": {
                                "type": "boolean"
                              },
                              "returnLast": {
                                "type": "boolean"
                              },
                              "next": {
                                "type": "string"
                              }
                            },
                            "required": [],
                            "additionalProperties": false
                          }
                        },
                        "required": [
                          "role",
                          "type",
                          "data"
                        ],
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string",
                            "enum": [
                              "$metadata"
                            ]
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "split"
                            ]
                          },
                          "data": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "start",
                                  "next",
                                  "end"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "type",
                              "id"
                            ],
                            "additionalProperties": false
                          }
                        },
                        "required": [
                          "role",
                          "type",
                          "data"
                        ],
                        "additionalProperties": false
                      }
                    ]
                  }
                ],
                "behavior": [
                  "llm-content"
                ]
              },
              "format": "multiline"
            }
          },
          "required": [
            "purpose"
          ]
        }
      }
    },
    {
      "id": "output-2",
      "type": "output",
      "configuration": {
        "schema": {
          "type": "object",
          "properties": {
            "json": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ],
              "title": "JSON",
              "description": "The validated JSON."
            },
            "prompts": {
              "type": "array",
              "title": "List",
              "description": "The list of outputs from the board.",
              "items": {
                "type": "object",
                "properties": {},
                "required": [],
                "additionalProperties": true
              }
            }
          }
        }
      }
    },
    {
      "id": "createPrompts",
      "type": "map",
      "configuration": {
        "board": {
          "kind": "board",
          "board": {
            "kits": [],
            "edges": [
              {
                "from": "generatePrompt",
                "to": "output-2",
                "out": "json",
                "in": "item"
              },
              {
                "from": "input-1",
                "to": "generatePrompt",
                "out": "item",
                "in": "context"
              }
            ],
            "nodes": [
              {
                "id": "output-2",
                "type": "output",
                "configuration": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "item": {
                        "type": [
                          "array",
                          "boolean",
                          "null",
                          "number",
                          "object",
                          "string"
                        ],
                        "title": "JSON",
                        "description": "The validated JSON."
                      }
                    }
                  }
                }
              },
              {
                "id": "generatePrompt",
                "type": "structuredWorker",
                "configuration": {
                  "instruction": "You are an expert in creating perfect system prompts for LLM agents from job descriptions. Create a prompt for the the following job description",
                  "schema": {
                    "type": "object",
                    "properties": {
                      "prompt": {
                        "type": "string",
                        "description": "the prompt for the job description"
                      }
                    }
                  }
                }
              },
              {
                "id": "input-1",
                "type": "input",
                "configuration": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "item": {
                        "type": "array",
                        "title": "Context",
                        "default": "[]",
                        "examples": [
                          "[\n  {\n    \"role\": \"user\",\n    \"parts\": [\n      {\n        \"text\": \"the universe within us\"\n      }\n    ]\n  }\n]"
                        ],
                        "items": {
                          "type": "object",
                          "anyOf": [
                            {
                              "type": "object",
                              "properties": {
                                "role": {
                                  "type": "string",
                                  "enum": [
                                    "user",
                                    "model",
                                    "tool"
                                  ]
                                },
                                "parts": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "anyOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "text": {
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "text"
                                        ],
                                        "additionalProperties": false
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "functionCall": {
                                            "type": "object",
                                            "properties": {
                                              "name": {
                                                "type": "string"
                                              },
                                              "args": {
                                                "type": "object",
                                                "properties": {},
                                                "required": [],
                                                "additionalProperties": {
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "required": [
                                              "name",
                                              "args"
                                            ],
                                            "additionalProperties": false
                                          }
                                        },
                                        "required": [
                                          "functionCall"
                                        ],
                                        "additionalProperties": false
                                      }
                                    ]
                                  }
                                }
                              },
                              "required": [
                                "parts"
                              ],
                              "additionalProperties": false,
                              "behavior": [
                                "llm-content"
                              ]
                            },
                            {
                              "type": "object",
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "role": {
                                      "type": "string",
                                      "enum": [
                                        "$metadata"
                                      ]
                                    },
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "looper"
                                      ]
                                    },
                                    "data": {
                                      "type": "object",
                                      "properties": {
                                        "max": {
                                          "type": "number"
                                        },
                                        "todo": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "task": {
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "task"
                                            ],
                                            "additionalProperties": false
                                          }
                                        },
                                        "doneMarker": {
                                          "type": "string"
                                        },
                                        "done": {
                                          "type": "boolean"
                                        },
                                        "appendLast": {
                                          "type": "boolean"
                                        },
                                        "returnLast": {
                                          "type": "boolean"
                                        },
                                        "next": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [],
                                      "additionalProperties": false
                                    }
                                  },
                                  "required": [
                                    "role",
                                    "type",
                                    "data"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "role": {
                                      "type": "string",
                                      "enum": [
                                        "$metadata"
                                      ]
                                    },
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "split"
                                      ]
                                    },
                                    "data": {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "enum": [
                                            "start",
                                            "next",
                                            "end"
                                          ]
                                        },
                                        "id": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "id"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "required": [
                                    "role",
                                    "type",
                                    "data"
                                  ],
                                  "additionalProperties": false
                                }
                              ]
                            }
                          ],
                          "behavior": [
                            "llm-content"
                          ]
                        }
                      }
                    },
                    "required": [
                      "item"
                    ]
                  }
                }
              }
            ],
            "graphs": {}
          }
        }
      }
    },
    {
      "id": "jobDescriptions",
      "type": "structuredWorker",
      "configuration": {
        "instruction": "You are building a team of expert LLM-based agents a specific purpose.\n\nThese expert agents can only read text and produce text. The experts will work as a team, collaborating, creating, reviewing, critiquing, and iteratively improving the quality of the poems.\n\nPlease identify the necessary job descriptions of these experts.",
        "schema": {
          "type": "object",
          "properties": {
            "descriptions": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "expert's title"
                  },
                  "responsibilities": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "expert's responsibilities"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    {
      "id": "splitJobDescriptions",
      "type": "jsonata",
      "configuration": {
        "expression": "descriptions"
      }
    },
    {
      "id": "workflow",
      "type": "structuredWorker",
      "configuration": {
        "instruction": "Now, describe how these agents interact in the form of a workflow. The workflow is defined as a list of pairs of agents. Each pair represents the flow of work from one agent to another.",
        "schema": {
          "type": "object",
          "properties": {
            "workflow": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "from": {
                    "type": "string",
                    "description": "an expert from whom the work is passed"
                  },
                  "to": {
                    "type": "string",
                    "description": "an expert to whom the work is passed"
                  }
                }
              }
            }
          }
        }
      }
    }
  ]
}