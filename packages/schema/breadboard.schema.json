{
	"$id": "https://raw.githubusercontent.com/breadboard-ai/breadboard/@google-labs/breadboard-schema@1.4.1/packages/schema/breadboard.schema.json",
	"$schema": "http://json-schema.org/draft-07/schema#",
	"$ref": "#/definitions/GraphDescriptor",
	"definitions": {
		"GraphDescriptor": {
			"type": "object",
			"additionalProperties": false,
			"properties": {
				"inputs": {
					"$ref": "#/definitions/InputValues",
					"description": "For internal testing only. Do not use.",
					"deprecated": "For internal testing only. Do not use."
				},
				"outputs": {
					"anyOf": [
						{
							"$ref": "#/definitions/OutputValues"
						},
						{
							"type": "array",
							"items": {
								"$ref": "#/definitions/OutputValues"
							}
						}
					],
					"description": "For internal testing only. Do not use.",
					"deprecated": "For internal testing only. Do not use."
				},
				"sequence": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/NodeIdentifier"
					},
					"description": "For internal testing only. Do not use.",
					"deprecated": "For internal testing only. Do not use."
				},
				"throws": {
					"type": "boolean",
					"description": "For internal testing only. Do not use.",
					"deprecated": "For internal testing only. Do not use."
				},
				"safe": {
					"type": "boolean",
					"description": "For internal testing only. Do not use.",
					"deprecated": "For internal testing only. Do not use."
				},
				"expectedLabels": {
					"type": "array",
					"items": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"description": "For internal testing only. Do not use.",
					"deprecated": "For internal testing only. Do not use."
				},
				"explanation": {
					"type": "string",
					"description": "For internal testing only. Do not use.",
					"deprecated": "For internal testing only. Do not use."
				},
				"metadata": {
					"$ref": "#/definitions/GraphMetadata",
					"description": "Metadata associated with the graph."
				},
				"edges": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Edge"
					},
					"description": "The collection of all edges in the graph."
				},
				"nodes": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/NodeDescriptor"
					},
					"description": "The collection of all nodes in the graph."
				},
				"kits": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/KitDescriptor"
					},
					"description": "All the kits (collections of node handlers) that are used by the graph."
				},
				"graphs": {
					"$ref": "#/definitions/SubGraphs",
					"description": "Sub-graphs that are also described by this graph representation."
				},
				"args": {
					"$ref": "#/definitions/InputValues",
					"description": "Arguments that are passed to the graph, useful to bind values to graphs."
				},
				"$schema": {
					"type": "string",
					"description": "The schema of the graph."
				},
				"url": {
					"type": "string",
					"description": "The URL pointing to the location of the graph. This URL is used to resolve relative paths in the graph. If not specified, the paths are assumed to be relative to the current working directory."
				},
				"title": {
					"type": "string",
					"description": "The title of the graph."
				},
				"description": {
					"type": "string",
					"description": "The description of the graph."
				},
				"version": {
					"type": "string",
					"description": "Version of the graph. [semver](https://semver.org/) format is encouraged."
				}
			},
			"required": [
				"edges",
				"nodes"
			],
			"description": "Represents a graph."
		},
		"InputValues": {
			"type": "object",
			"additionalProperties": {
				"$ref": "#/definitions/NodeValue"
			},
			"propertyNames": {
				"description": "Unique identifier of a node's input."
			},
			"description": "Values that are supplied as inputs to the `NodeHandler`."
		},
		"NodeValue": {
			"anyOf": [
				{
					"type": "string"
				},
				{
					"type": "number"
				},
				{
					"type": "boolean"
				},
				{
					"type": "null"
				},
				{
					"not": {}
				},
				{
					"type": "array",
					"items": {
						"$ref": "#/definitions/NodeValue"
					}
				},
				{
					"$ref": "#/definitions/Capability"
				},
				{
					"type": "object",
					"additionalProperties": {
						"$ref": "#/definitions/NodeValue"
					}
				}
			],
			"description": "A type representing a valid JSON value."
		},
		"Capability": {
			"type": "object",
			"properties": {
				"kind": {
					"type": "string"
				}
			},
			"required": [
				"kind"
			],
			"additionalProperties": false
		},
		"OutputValues": {
			"type": "object",
			"additionalProperties": {
				"$ref": "#/definitions/NodeValue"
			},
			"description": "Values that the `NodeHandler` outputs."
		},
		"NodeIdentifier": {
			"type": "string",
			"description": "Unique identifier of a node in a graph."
		},
		"GraphMetadata": {
			"type": "object",
			"properties": {
				"icon": {
					"type": "string",
					"description": "The icon that identifies the graph. Can be a URL or a Material Design id."
				},
				"comments": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/CommentNode"
					}
				},
				"tags": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/GraphTag"
					},
					"description": "Tags associated with the graph. At this moment, free-form strings."
				}
			},
			"additionalProperties": {
				"$ref": "#/definitions/NodeValue"
			},
			"description": "Represents graph metadata."
		},
		"CommentNode": {
			"type": "object",
			"properties": {
				"id": {
					"$ref": "#/definitions/NodeIdentifier",
					"description": "Unique id of the comment node in graph metadata."
				},
				"text": {
					"type": "string",
					"description": "The text content of the comment."
				},
				"metadata": {
					"$ref": "#/definitions/NodeMetadata",
					"description": "The metadata of the comment node. Use this to provide additional information about the comment node."
				}
			},
			"required": [
				"id",
				"text"
			],
			"additionalProperties": false
		},
		"NodeMetadata": {
			"type": "object",
			"properties": {
				"title": {
					"type": "string",
					"description": "The title of the node."
				},
				"description": {
					"type": "string",
					"description": "A more detailed description of the node."
				},
				"visual": {
					"anyOf": [
						{
							"type": "string"
						},
						{
							"type": "number"
						},
						{
							"type": "boolean"
						},
						{
							"type": "null"
						},
						{
							"type": "array",
							"items": {
								"$ref": "#/definitions/NodeValue"
							}
						},
						{
							"$ref": "#/definitions/Capability"
						},
						{
							"type": "object",
							"additionalProperties": {
								"$ref": "#/definitions/NodeValue"
							}
						}
					],
					"description": "Metadata that conveys visual information about the node. Can be used by visual editors to store information about the node's appearance, current position, etc."
				},
				"logLevel": {
					"type": "string",
					"enum": [
						"debug",
						"info"
					],
					"description": "Logging level."
				}
			},
			"additionalProperties": false,
			"description": "Represents metadata of a node. This is an optional part of the `NodeDescriptor` that can be used to provide additional information about the node."
		},
		"GraphTag": {
			"type": "string",
			"enum": [
				"published",
				"tool"
			],
			"description": "A tag that can be associated with a graph.\n- `published`: The graph is published (as opposed to a draft). It may be    used in production and shared with others.\n- `tool`: The graph is intended to be a tool."
		},
		"Edge": {
			"type": "object",
			"properties": {
				"from": {
					"$ref": "#/definitions/NodeIdentifier",
					"description": "The node that the edge is coming from."
				},
				"to": {
					"$ref": "#/definitions/NodeIdentifier",
					"description": "The node that the edge is going to."
				},
				"in": {
					"$ref": "#/definitions/InputIdentifier",
					"description": "The input of the `to` node. If this value is undefined, then the then no data is passed as output of the `from` node."
				},
				"out": {
					"$ref": "#/definitions/OutputIdentifier",
					"description": "The output of the `from` node. If this value is \"*\", then all outputs of the `from` node are passed to the `to` node. If this value is undefined, then no data is passed to any inputs of the `to` node."
				},
				"optional": {
					"type": "boolean",
					"description": "If true, this edge is optional: the data that passes through it is not considered a required input to the node."
				},
				"constant": {
					"type": "boolean",
					"description": "If true, this edge acts as a constant: the data that passes through it remains available even after the node has consumed it."
				}
			},
			"required": [
				"from",
				"to"
			],
			"additionalProperties": false,
			"description": "Represents an edge in a graph."
		},
		"InputIdentifier": {
			"type": "string",
			"description": "Unique identifier of a node's input."
		},
		"OutputIdentifier": {
			"type": "string",
			"description": "Unique identifier of a node's output."
		},
		"NodeDescriptor": {
			"type": "object",
			"properties": {
				"id": {
					"$ref": "#/definitions/NodeIdentifier",
					"description": "Unique id of the node in graph."
				},
				"type": {
					"$ref": "#/definitions/NodeTypeIdentifier",
					"description": "Type of the node. Used to look up the handler for the node."
				},
				"configuration": {
					"$ref": "#/definitions/NodeConfiguration",
					"description": "Configuration of the node."
				},
				"metadata": {
					"$ref": "#/definitions/NodeMetadata",
					"description": "The metadata of the node. Use this provide additional information about the node."
				}
			},
			"required": [
				"id",
				"type"
			],
			"additionalProperties": false,
			"description": "Represents a node in a graph."
		},
		"NodeTypeIdentifier": {
			"type": "string",
			"description": "Unique identifier of a node's type."
		},
		"NodeConfiguration": {
			"type": "object",
			"additionalProperties": {
				"$ref": "#/definitions/NodeValue"
			},
			"description": "Values that are supplied as part of the graph. These values are merged with the `InputValues` and supplied as inputs to the `NodeHandler`."
		},
		"KitDescriptor": {
			"type": "object",
			"additionalProperties": false,
			"properties": {
				"title": {
					"type": "string",
					"description": "The title of the kit."
				},
				"description": {
					"type": "string",
					"description": "The description of the kit."
				},
				"version": {
					"type": "string",
					"description": "Version of the kit. [semver](https://semver.org/) format is encouraged.",
					"pattern": "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$"
				},
				"url": {
					"type": "string",
					"description": "The URL pointing to the location of the kit."
				}
			},
			"required": [
				"url"
			]
		},
		"SubGraphs": {
			"type": "object",
			"additionalProperties": {
				"$ref": "#/definitions/GraphDescriptor"
			},
			"propertyNames": {
				"description": "Unique identifier of a graph."
			},
			"description": "Represents a collection of sub-graphs. The key is the identifier of the sub-graph. The value is the descriptor of the sub-graph."
		}
	}
}