{
  "title": "Agent Kit",
  "description": "A collection of nodes for building Agent-like experiences.",
  "version": "0.0.1",
  "url": "https://raw.githubusercontent.com/breadboard-ai/breadboard/main/packages/agent-kit/agent.kit.json",
  "nodes": {
    "human": {
      "title": "Human",
      "description": "A human in the loop. Use this node to insert a real person (user input) into your team of synthetic workers.",
      "version": "0.0.1",
      "metadata": {
        "icon": "human",
        "help": {
          "url": "https://breadboard-ai.github.io/breadboard/docs/kits/agents/#human"
        }
      },
      "edges": [
        {
          "from": "appendContext",
          "to": "output-0",
          "out": "context",
          "in": "context"
        },
        {
          "from": "areWeDoneChecker",
          "to": "doneOutput",
          "out": "done",
          "in": "context"
        },
        {
          "from": "areWeDoneChecker",
          "to": "routeByMode",
          "out": "context",
          "in": "context"
        },
        {
          "from": "buildChooseSchema",
          "to": "chooseInput",
          "out": "schema",
          "in": "schema"
        },
        {
          "from": "buildChooseSchema",
          "to": "pickChoice",
          "out": "total",
          "in": "total"
        },
        {
          "from": "chooseInput",
          "to": "pickChoice",
          "out": "choice",
          "in": "choice"
        },
        {
          "from": "createSchema",
          "to": "input",
          "out": "schema",
          "in": "schema"
        },
        {
          "from": "input",
          "to": "appendContext",
          "out": "text",
          "in": "toAdd"
        },
        {
          "from": "input",
          "to": "output-0",
          "out": "text",
          "in": "text"
        },
        {
          "from": "input-0",
          "to": "areWeDoneChecker",
          "out": "context",
          "in": "context"
        },
        {
          "from": "input-0",
          "to": "buildChooseSchema",
          "out": "description",
          "in": "description"
        },
        {
          "from": "input-0",
          "to": "buildChooseSchema",
          "out": "title",
          "in": "title"
        },
        {
          "from": "input-0",
          "to": "createSchema",
          "out": "description",
          "in": "description"
        },
        {
          "from": "input-0",
          "to": "createSchema",
          "out": "title",
          "in": "title"
        },
        {
          "from": "pickChoice",
          "to": "choiceOutput",
          "out": "context",
          "in": "context"
        },
        {
          "from": "routeByMode",
          "to": "appendContext",
          "out": "input",
          "in": "context"
        },
        {
          "from": "routeByMode",
          "to": "buildChooseSchema",
          "out": "choose",
          "in": "context"
        },
        {
          "from": "routeByMode",
          "to": "createSchema",
          "out": "input",
          "in": "context"
        },
        {
          "from": "routeByMode",
          "to": "output",
          "out": "output",
          "in": "output"
        },
        {
          "from": "routeByMode",
          "to": "pickChoice",
          "out": "choose",
          "in": "context"
        }
      ],
      "nodes": [
        {
          "id": "input-0",
          "type": "input",
          "configuration": {
            "schema": {
              "type": "object",
              "properties": {
                "context": {
                  "type": "array",
                  "title": "Context in",
                  "description": "Incoming conversation context",
                  "default": "[]",
                  "items": {
                    "type": "object",
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string",
                            "enum": [
                              "user",
                              "model",
                              "tool"
                            ]
                          },
                          "parts": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "text": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "text"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "functionCall": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "args": {
                                          "type": "object",
                                          "properties": {},
                                          "required": [],
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "required": [
                                        "name",
                                        "args"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "required": [
                                    "functionCall"
                                  ],
                                  "additionalProperties": false
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "parts"
                        ],
                        "additionalProperties": false,
                        "behavior": [
                          "llm-content"
                        ]
                      },
                      {
                        "type": "object",
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "looper"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "max": {
                                    "type": "number"
                                  },
                                  "todo": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "task": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "task"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "doneMarker": {
                                    "type": "string"
                                  },
                                  "done": {
                                    "type": "boolean"
                                  },
                                  "appendLast": {
                                    "type": "boolean"
                                  },
                                  "returnLast": {
                                    "type": "boolean"
                                  },
                                  "next": {
                                    "type": "string"
                                  }
                                },
                                "required": [],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "split"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "start",
                                      "next",
                                      "end"
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          }
                        ]
                      }
                    ],
                    "behavior": [
                      "llm-content"
                    ]
                  }
                },
                "description": {
                  "type": "string",
                  "behavior": [
                    "config"
                  ],
                  "title": "Description",
                  "description": "The user's input",
                  "default": "A request or response"
                },
                "title": {
                  "type": "string",
                  "behavior": [
                    "config"
                  ],
                  "title": "Title",
                  "description": "The user label",
                  "default": "User"
                }
              },
              "required": []
            }
          }
        },
        {
          "id": "choiceOutput",
          "type": "output",
          "configuration": {
            "schema": {
              "type": "object",
              "properties": {
                "context": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string",
                            "enum": [
                              "user",
                              "model",
                              "tool"
                            ]
                          },
                          "parts": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "text": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "text"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "functionCall": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "args": {
                                          "type": "object",
                                          "properties": {},
                                          "required": [],
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "required": [
                                        "name",
                                        "args"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "required": [
                                    "functionCall"
                                  ],
                                  "additionalProperties": false
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "parts"
                        ],
                        "additionalProperties": false,
                        "behavior": [
                          "llm-content"
                        ]
                      },
                      {
                        "type": "object",
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "looper"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "max": {
                                    "type": "number"
                                  },
                                  "todo": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "task": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "task"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "doneMarker": {
                                    "type": "string"
                                  },
                                  "done": {
                                    "type": "boolean"
                                  },
                                  "appendLast": {
                                    "type": "boolean"
                                  },
                                  "returnLast": {
                                    "type": "boolean"
                                  },
                                  "next": {
                                    "type": "string"
                                  }
                                },
                                "required": [],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "split"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "start",
                                      "next",
                                      "end"
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          }
                        ]
                      }
                    ],
                    "behavior": [
                      "llm-content"
                    ]
                  },
                  "title": "Context out"
                }
              },
              "required": [
                "context"
              ]
            }
          },
          "metadata": {
            "title": "Choice Output",
            "description": "Outputting the user's choice"
          }
        },
        {
          "id": "doneOutput",
          "type": "output",
          "configuration": {
            "schema": {
              "type": "object",
              "properties": {
                "context": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string",
                            "enum": [
                              "user",
                              "model",
                              "tool"
                            ]
                          },
                          "parts": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "text": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "text"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "functionCall": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "args": {
                                          "type": "object",
                                          "properties": {},
                                          "required": [],
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "required": [
                                        "name",
                                        "args"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "required": [
                                    "functionCall"
                                  ],
                                  "additionalProperties": false
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "parts"
                        ],
                        "additionalProperties": false,
                        "behavior": [
                          "llm-content"
                        ]
                      },
                      {
                        "type": "object",
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "looper"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "max": {
                                    "type": "number"
                                  },
                                  "todo": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "task": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "task"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "doneMarker": {
                                    "type": "string"
                                  },
                                  "done": {
                                    "type": "boolean"
                                  },
                                  "appendLast": {
                                    "type": "boolean"
                                  },
                                  "returnLast": {
                                    "type": "boolean"
                                  },
                                  "next": {
                                    "type": "string"
                                  }
                                },
                                "required": [],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "split"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "start",
                                      "next",
                                      "end"
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          }
                        ]
                      }
                    ],
                    "behavior": [
                      "llm-content"
                    ]
                  },
                  "title": "Context out"
                }
              },
              "required": [
                "context"
              ]
            }
          },
          "metadata": {
            "title": "Done",
            "description": "Skipping because we're done"
          }
        },
        {
          "id": "output",
          "type": "output",
          "configuration": {
            "schema": {
              "type": "object",
              "properties": {
                "output": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string",
                            "enum": [
                              "user",
                              "model",
                              "tool"
                            ]
                          },
                          "parts": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "text": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "text"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "functionCall": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "args": {
                                          "type": "object",
                                          "properties": {},
                                          "required": [],
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "required": [
                                        "name",
                                        "args"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "required": [
                                    "functionCall"
                                  ],
                                  "additionalProperties": false
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "parts"
                        ],
                        "additionalProperties": false,
                        "behavior": [
                          "llm-content"
                        ]
                      },
                      {
                        "type": "object",
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "looper"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "max": {
                                    "type": "number"
                                  },
                                  "todo": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "task": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "task"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "doneMarker": {
                                    "type": "string"
                                  },
                                  "done": {
                                    "type": "boolean"
                                  },
                                  "appendLast": {
                                    "type": "boolean"
                                  },
                                  "returnLast": {
                                    "type": "boolean"
                                  },
                                  "next": {
                                    "type": "string"
                                  }
                                },
                                "required": [],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "split"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "start",
                                      "next",
                                      "end"
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          }
                        ]
                      }
                    ],
                    "behavior": [
                      "llm-content"
                    ]
                  },
                  "title": "Output",
                  "description": "The output to display"
                }
              },
              "required": [
                "output"
              ],
              "behavior": [
                "bubble"
              ]
            }
          },
          "metadata": {
            "title": "Output",
            "description": "Displaying the output to the user."
          }
        },
        {
          "id": "output-0",
          "type": "output",
          "configuration": {
            "schema": {
              "type": "object",
              "properties": {
                "context": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string",
                            "enum": [
                              "user",
                              "model",
                              "tool"
                            ]
                          },
                          "parts": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "text": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "text"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "functionCall": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "args": {
                                          "type": "object",
                                          "properties": {},
                                          "required": [],
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "required": [
                                        "name",
                                        "args"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "required": [
                                    "functionCall"
                                  ],
                                  "additionalProperties": false
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "parts"
                        ],
                        "additionalProperties": false,
                        "behavior": [
                          "llm-content"
                        ]
                      },
                      {
                        "type": "object",
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "looper"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "max": {
                                    "type": "number"
                                  },
                                  "todo": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "task": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "task"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "doneMarker": {
                                    "type": "string"
                                  },
                                  "done": {
                                    "type": "boolean"
                                  },
                                  "appendLast": {
                                    "type": "boolean"
                                  },
                                  "returnLast": {
                                    "type": "boolean"
                                  },
                                  "next": {
                                    "type": "string"
                                  }
                                },
                                "required": [],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "split"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "start",
                                      "next",
                                      "end"
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          }
                        ]
                      }
                    ],
                    "behavior": [
                      "llm-content"
                    ]
                  },
                  "title": "Context out"
                },
                "text": {
                  "type": [
                    "array",
                    "boolean",
                    "null",
                    "number",
                    "object",
                    "string"
                  ],
                  "behavior": [
                    "deprecated"
                  ]
                }
              },
              "required": [
                "context",
                "text"
              ]
            }
          }
        },
        {
          "id": "appendContext",
          "type": "runJavascript",
          "configuration": {
            "code": "const appendContext = ({context,toAdd})=>{if(!context)throw new Error(\"Context is required\");const existing=Array.isArray(context)?context:[context];const incoming=toAdd;if(!incoming.parts){const containsUserRole=existing.filter(item=>item.role!==\"model\"&&item.role!==\"$metadata\").length>0;if(!containsUserRole){return{context:[...existing,{role:\"user\",parts:[{text:\"Do your magic\"}]}]}}return{context:existing}}if(!incoming.role){incoming.role=\"user\"}const last=existing[existing.length-1];if(!last){return{context:[incoming]}}if(last.role!==incoming.role){return{context:[...existing,incoming]}}else{const result=structuredClone(existing);const index=result.length-1;result[index].parts.push(...incoming.parts);return{context:result}}};",
            "inputSchema": {
              "type": "object",
              "properties": {
                "context": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string",
                            "enum": [
                              "user",
                              "model",
                              "tool"
                            ]
                          },
                          "parts": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "text": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "text"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "functionCall": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "args": {
                                          "type": "object",
                                          "properties": {},
                                          "required": [],
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "required": [
                                        "name",
                                        "args"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "required": [
                                    "functionCall"
                                  ],
                                  "additionalProperties": false
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "parts"
                        ],
                        "additionalProperties": false,
                        "behavior": [
                          "llm-content"
                        ]
                      },
                      {
                        "type": "object",
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "looper"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "max": {
                                    "type": "number"
                                  },
                                  "todo": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "task": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "task"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "doneMarker": {
                                    "type": "string"
                                  },
                                  "done": {
                                    "type": "boolean"
                                  },
                                  "appendLast": {
                                    "type": "boolean"
                                  },
                                  "returnLast": {
                                    "type": "boolean"
                                  },
                                  "next": {
                                    "type": "string"
                                  }
                                },
                                "required": [],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "split"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "start",
                                      "next",
                                      "end"
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          }
                        ]
                      }
                    ],
                    "behavior": [
                      "llm-content"
                    ]
                  }
                },
                "toAdd": {
                  "type": [
                    "array",
                    "boolean",
                    "null",
                    "number",
                    "object",
                    "string"
                  ]
                }
              }
            },
            "name": "appendContext",
            "outputSchema": {
              "type": "object",
              "properties": {
                "context": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string",
                            "enum": [
                              "user",
                              "model",
                              "tool"
                            ]
                          },
                          "parts": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "text": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "text"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "functionCall": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "args": {
                                          "type": "object",
                                          "properties": {},
                                          "required": [],
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "required": [
                                        "name",
                                        "args"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "required": [
                                    "functionCall"
                                  ],
                                  "additionalProperties": false
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "parts"
                        ],
                        "additionalProperties": false,
                        "behavior": [
                          "llm-content"
                        ]
                      },
                      {
                        "type": "object",
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "looper"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "max": {
                                    "type": "number"
                                  },
                                  "todo": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "task": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "task"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "doneMarker": {
                                    "type": "string"
                                  },
                                  "done": {
                                    "type": "boolean"
                                  },
                                  "appendLast": {
                                    "type": "boolean"
                                  },
                                  "returnLast": {
                                    "type": "boolean"
                                  },
                                  "next": {
                                    "type": "string"
                                  }
                                },
                                "required": [],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "split"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "start",
                                      "next",
                                      "end"
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          }
                        ]
                      }
                    ],
                    "behavior": [
                      "llm-content"
                    ]
                  }
                }
              }
            },
            "raw": true
          },
          "metadata": {
            "title": "Append Context",
            "description": "Appending user input to the conversation context"
          }
        },
        {
          "id": "areWeDoneChecker",
          "type": "runJavascript",
          "configuration": {
            "code": "const areWeDoneChecker = ({context:context2})=>{if(!context2)throw new Error(\"Context is required\");let done=false;for(let i=0;i<context2.length;++i){const item=context2[i];if(item.role===\"$metadata\"&&item.type===\"looper\"){const plan=item.data;if(plan.done){done=true;break}}}if(done){return{done:context2}}else{return{context:context2}}};",
            "inputSchema": {
              "type": "object",
              "properties": {
                "context": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string",
                            "enum": [
                              "user",
                              "model",
                              "tool"
                            ]
                          },
                          "parts": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "text": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "text"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "functionCall": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "args": {
                                          "type": "object",
                                          "properties": {},
                                          "required": [],
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "required": [
                                        "name",
                                        "args"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "required": [
                                    "functionCall"
                                  ],
                                  "additionalProperties": false
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "parts"
                        ],
                        "additionalProperties": false,
                        "behavior": [
                          "llm-content"
                        ]
                      },
                      {
                        "type": "object",
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "looper"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "max": {
                                    "type": "number"
                                  },
                                  "todo": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "task": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "task"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "doneMarker": {
                                    "type": "string"
                                  },
                                  "done": {
                                    "type": "boolean"
                                  },
                                  "appendLast": {
                                    "type": "boolean"
                                  },
                                  "returnLast": {
                                    "type": "boolean"
                                  },
                                  "next": {
                                    "type": "string"
                                  }
                                },
                                "required": [],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "split"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "start",
                                      "next",
                                      "end"
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          }
                        ]
                      }
                    ],
                    "behavior": [
                      "llm-content"
                    ]
                  }
                }
              }
            },
            "name": "areWeDoneChecker",
            "outputSchema": {
              "type": "object",
              "properties": {
                "context": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string",
                            "enum": [
                              "user",
                              "model",
                              "tool"
                            ]
                          },
                          "parts": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "text": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "text"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "functionCall": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "args": {
                                          "type": "object",
                                          "properties": {},
                                          "required": [],
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "required": [
                                        "name",
                                        "args"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "required": [
                                    "functionCall"
                                  ],
                                  "additionalProperties": false
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "parts"
                        ],
                        "additionalProperties": false,
                        "behavior": [
                          "llm-content"
                        ]
                      },
                      {
                        "type": "object",
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "looper"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "max": {
                                    "type": "number"
                                  },
                                  "todo": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "task": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "task"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "doneMarker": {
                                    "type": "string"
                                  },
                                  "done": {
                                    "type": "boolean"
                                  },
                                  "appendLast": {
                                    "type": "boolean"
                                  },
                                  "returnLast": {
                                    "type": "boolean"
                                  },
                                  "next": {
                                    "type": "string"
                                  }
                                },
                                "required": [],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "split"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "start",
                                      "next",
                                      "end"
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          }
                        ]
                      }
                    ],
                    "behavior": [
                      "llm-content"
                    ]
                  }
                },
                "done": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string",
                            "enum": [
                              "user",
                              "model",
                              "tool"
                            ]
                          },
                          "parts": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "text": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "text"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "functionCall": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "args": {
                                          "type": "object",
                                          "properties": {},
                                          "required": [],
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "required": [
                                        "name",
                                        "args"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "required": [
                                    "functionCall"
                                  ],
                                  "additionalProperties": false
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "parts"
                        ],
                        "additionalProperties": false,
                        "behavior": [
                          "llm-content"
                        ]
                      },
                      {
                        "type": "object",
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "looper"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "max": {
                                    "type": "number"
                                  },
                                  "todo": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "task": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "task"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "doneMarker": {
                                    "type": "string"
                                  },
                                  "done": {
                                    "type": "boolean"
                                  },
                                  "appendLast": {
                                    "type": "boolean"
                                  },
                                  "returnLast": {
                                    "type": "boolean"
                                  },
                                  "next": {
                                    "type": "string"
                                  }
                                },
                                "required": [],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "split"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "start",
                                      "next",
                                      "end"
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          }
                        ]
                      }
                    ],
                    "behavior": [
                      "llm-content"
                    ]
                  }
                }
              }
            },
            "raw": true
          },
          "metadata": {
            "title": "Done Check",
            "description": "Checking to see if we can skip work altogether"
          }
        },
        {
          "id": "buildChooseSchema",
          "type": "runJavascript",
          "configuration": {
            "code": "const buildChooseSchema = ({context:context2,title:title2,description:description2})=>{const c=asContextArray(context2).reverse();const choices=[];for(const item of c){if(item.role===\"$metadata\"&&item.type===\"split\"){const type=item.data.type;if(type===\"start\"){break}else{choices.push(`Choice ${choices.length+1}`)}}}const schema={type:\"object\",properties:{choice:{title:title2,description:description2,type:\"string\",enum:choices}}};return{schema,total:choices.length};function asContextArray(context3){return Array.isArray(context3)?context3:[context3]}__name(asContextArray,\"asContextArray\")};",
            "inputSchema": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "behavior": [
                    "config"
                  ]
                },
                "description": {
                  "type": "string",
                  "behavior": [
                    "config"
                  ]
                },
                "context": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string",
                            "enum": [
                              "user",
                              "model",
                              "tool"
                            ]
                          },
                          "parts": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "text": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "text"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "functionCall": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "args": {
                                          "type": "object",
                                          "properties": {},
                                          "required": [],
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "required": [
                                        "name",
                                        "args"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "required": [
                                    "functionCall"
                                  ],
                                  "additionalProperties": false
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "parts"
                        ],
                        "additionalProperties": false,
                        "behavior": [
                          "llm-content"
                        ]
                      },
                      {
                        "type": "object",
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "looper"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "max": {
                                    "type": "number"
                                  },
                                  "todo": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "task": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "task"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "doneMarker": {
                                    "type": "string"
                                  },
                                  "done": {
                                    "type": "boolean"
                                  },
                                  "appendLast": {
                                    "type": "boolean"
                                  },
                                  "returnLast": {
                                    "type": "boolean"
                                  },
                                  "next": {
                                    "type": "string"
                                  }
                                },
                                "required": [],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "split"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "start",
                                      "next",
                                      "end"
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          }
                        ]
                      }
                    ],
                    "behavior": [
                      "llm-content"
                    ]
                  }
                }
              }
            },
            "name": "buildChooseSchema",
            "outputSchema": {
              "type": "object",
              "properties": {
                "total": {
                  "type": "number"
                },
                "schema": {
                  "type": "object",
                  "behavior": [
                    "json-schema"
                  ],
                  "properties": {},
                  "required": [],
                  "additionalProperties": true
                }
              }
            },
            "raw": true
          },
          "metadata": {
            "title": "Choose Options",
            "description": "Creating the options to choose from"
          }
        },
        {
          "id": "chooseInput",
          "type": "input",
          "configuration": {},
          "metadata": {
            "title": "Look at the choices above and pick one",
            "description": "Asking user to choose an option"
          }
        },
        {
          "id": "createSchema",
          "type": "runJavascript",
          "configuration": {
            "code": "const createSchema = ({title:title2,description:description2})=>{const text={title:title2,description:description2,type:\"object\",behavior:[\"transient\",\"llm-content\"],examples:[JSON.stringify({parts:[{text:\"\"}]})]};const schema={type:\"object\",properties:{text}};return{schema}};",
            "inputSchema": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "behavior": [
                    "config"
                  ]
                },
                "description": {
                  "type": "string",
                  "behavior": [
                    "config"
                  ]
                },
                "context": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string",
                            "enum": [
                              "user",
                              "model",
                              "tool"
                            ]
                          },
                          "parts": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "text": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "text"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "functionCall": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "args": {
                                          "type": "object",
                                          "properties": {},
                                          "required": [],
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "required": [
                                        "name",
                                        "args"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "required": [
                                    "functionCall"
                                  ],
                                  "additionalProperties": false
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "parts"
                        ],
                        "additionalProperties": false,
                        "behavior": [
                          "llm-content"
                        ]
                      },
                      {
                        "type": "object",
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "looper"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "max": {
                                    "type": "number"
                                  },
                                  "todo": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "task": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "task"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "doneMarker": {
                                    "type": "string"
                                  },
                                  "done": {
                                    "type": "boolean"
                                  },
                                  "appendLast": {
                                    "type": "boolean"
                                  },
                                  "returnLast": {
                                    "type": "boolean"
                                  },
                                  "next": {
                                    "type": "string"
                                  }
                                },
                                "required": [],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "split"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "start",
                                      "next",
                                      "end"
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          }
                        ]
                      }
                    ],
                    "behavior": [
                      "llm-content"
                    ]
                  }
                }
              }
            },
            "name": "createSchema",
            "outputSchema": {
              "type": "object",
              "properties": {
                "schema": {
                  "type": "object",
                  "behavior": [
                    "json-schema"
                  ],
                  "properties": {},
                  "required": [],
                  "additionalProperties": true
                }
              }
            },
            "raw": true
          },
          "metadata": {
            "title": "Create Schema",
            "description": "Creating a schema for user input"
          }
        },
        {
          "id": "input",
          "type": "input",
          "configuration": {},
          "metadata": {
            "title": "Input",
            "description": "Asking user for input"
          }
        },
        {
          "id": "pickChoice",
          "type": "runJavascript",
          "configuration": {
            "code": "const pickChoice = ({context:context2,choice,total})=>{const chosenIndex=total-parseInt(choice.split(\" \")[1],10);const c=context2.reverse();const current=[];let found=\"before\";let chunkIndex=0;let startIndex=0;for(const[i,item]of c.entries()){if(item.role===\"$metadata\"&&item.type===\"split\"){const type=item.data.type;if(type===\"start\"){startIndex=i;break}else{if(chunkIndex===chosenIndex){found=\"found\"}else if(chunkIndex>chosenIndex){found=\"after\"}else{found=\"before\"}chunkIndex++}}else if(found===\"found\"){current.push(item)}}const preamble=c.slice(startIndex+1).reverse();if(!found){throw new Error(`Integrity error: choice \"${choice}\" not found`)}return{context:[...preamble,...current.reverse()]}};",
            "inputSchema": {
              "type": "object",
              "properties": {
                "context": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string",
                            "enum": [
                              "user",
                              "model",
                              "tool"
                            ]
                          },
                          "parts": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "text": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "text"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "functionCall": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "args": {
                                          "type": "object",
                                          "properties": {},
                                          "required": [],
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "required": [
                                        "name",
                                        "args"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "required": [
                                    "functionCall"
                                  ],
                                  "additionalProperties": false
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "parts"
                        ],
                        "additionalProperties": false,
                        "behavior": [
                          "llm-content"
                        ]
                      },
                      {
                        "type": "object",
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "looper"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "max": {
                                    "type": "number"
                                  },
                                  "todo": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "task": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "task"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "doneMarker": {
                                    "type": "string"
                                  },
                                  "done": {
                                    "type": "boolean"
                                  },
                                  "appendLast": {
                                    "type": "boolean"
                                  },
                                  "returnLast": {
                                    "type": "boolean"
                                  },
                                  "next": {
                                    "type": "string"
                                  }
                                },
                                "required": [],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "split"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "start",
                                      "next",
                                      "end"
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          }
                        ]
                      }
                    ],
                    "behavior": [
                      "llm-content"
                    ]
                  }
                },
                "choice": {
                  "type": [
                    "array",
                    "boolean",
                    "null",
                    "number",
                    "object",
                    "string"
                  ]
                },
                "total": {
                  "type": "number"
                }
              }
            },
            "name": "pickChoice",
            "outputSchema": {
              "type": "object",
              "properties": {
                "context": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string",
                            "enum": [
                              "user",
                              "model",
                              "tool"
                            ]
                          },
                          "parts": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "text": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "text"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "functionCall": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "args": {
                                          "type": "object",
                                          "properties": {},
                                          "required": [],
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "required": [
                                        "name",
                                        "args"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "required": [
                                    "functionCall"
                                  ],
                                  "additionalProperties": false
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "parts"
                        ],
                        "additionalProperties": false,
                        "behavior": [
                          "llm-content"
                        ]
                      },
                      {
                        "type": "object",
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "looper"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "max": {
                                    "type": "number"
                                  },
                                  "todo": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "task": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "task"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "doneMarker": {
                                    "type": "string"
                                  },
                                  "done": {
                                    "type": "boolean"
                                  },
                                  "appendLast": {
                                    "type": "boolean"
                                  },
                                  "returnLast": {
                                    "type": "boolean"
                                  },
                                  "next": {
                                    "type": "string"
                                  }
                                },
                                "required": [],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "split"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "start",
                                      "next",
                                      "end"
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          }
                        ]
                      }
                    ],
                    "behavior": [
                      "llm-content"
                    ]
                  }
                }
              }
            },
            "raw": true
          },
          "metadata": {
            "title": "Read Choice",
            "description": "Reading the user's choice"
          }
        },
        {
          "id": "routeByMode",
          "type": "runJavascript",
          "configuration": {
            "code": "const routeByMode = ({context:context2})=>{if(!context2){return{input:[]}}const c=asContextArray(context2);const mode=computeMode(c);if(mode===\"input\"){return{input:c}}else if(mode===\"inputOutput\"){return{input:c,output:c}}return{output:onlyChoices(c),choose:c};function asContextArray(context3){const input2=context3;return Array.isArray(input2)?input2:[input2]}__name(asContextArray,\"asContextArray\");function onlyChoices(context3){const choices=[];const reversed=[...context3].reverse();for(const item of reversed){choices.push(item);if(item.role===\"$metadata\"&&item.type===\"split\"&&item.data.type===\"start\"){break}}return choices.reverse()}__name(onlyChoices,\"onlyChoices\");function computeMode(context3){const lastItem=context3[context3.length-1];if(!lastItem){return\"input\"}if(lastItem.role===\"user\"){return\"input\"}if(lastItem.role!==\"$metadata\"){return\"inputOutput\"}if(lastItem.type===\"split\"&&lastItem.data.type===\"end\"){const splitId=lastItem.data.id;let choiceCounter=1;for(let i=context3.length-2;i>=0;i--){const item=context3[i];if(item.role===\"$metadata\"&&item.type===\"split\"){const{id,type}=item.data;if(splitId!==id){return\"inputOutput\"}if(type===\"start\"){break}choiceCounter++}}if(choiceCounter>1){return\"choose\"}}return\"inputOutput\"}__name(computeMode,\"computeMode\")};",
            "inputSchema": {
              "type": "object",
              "properties": {
                "context": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string",
                            "enum": [
                              "user",
                              "model",
                              "tool"
                            ]
                          },
                          "parts": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "text": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "text"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "functionCall": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "args": {
                                          "type": "object",
                                          "properties": {},
                                          "required": [],
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "required": [
                                        "name",
                                        "args"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "required": [
                                    "functionCall"
                                  ],
                                  "additionalProperties": false
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "parts"
                        ],
                        "additionalProperties": false,
                        "behavior": [
                          "llm-content"
                        ]
                      },
                      {
                        "type": "object",
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "looper"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "max": {
                                    "type": "number"
                                  },
                                  "todo": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "task": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "task"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "doneMarker": {
                                    "type": "string"
                                  },
                                  "done": {
                                    "type": "boolean"
                                  },
                                  "appendLast": {
                                    "type": "boolean"
                                  },
                                  "returnLast": {
                                    "type": "boolean"
                                  },
                                  "next": {
                                    "type": "string"
                                  }
                                },
                                "required": [],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "split"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "start",
                                      "next",
                                      "end"
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          }
                        ]
                      }
                    ],
                    "behavior": [
                      "llm-content"
                    ]
                  }
                }
              }
            },
            "name": "routeByMode",
            "outputSchema": {
              "type": "object",
              "properties": {
                "input": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string",
                            "enum": [
                              "user",
                              "model",
                              "tool"
                            ]
                          },
                          "parts": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "text": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "text"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "functionCall": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "args": {
                                          "type": "object",
                                          "properties": {},
                                          "required": [],
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "required": [
                                        "name",
                                        "args"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "required": [
                                    "functionCall"
                                  ],
                                  "additionalProperties": false
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "parts"
                        ],
                        "additionalProperties": false,
                        "behavior": [
                          "llm-content"
                        ]
                      },
                      {
                        "type": "object",
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "looper"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "max": {
                                    "type": "number"
                                  },
                                  "todo": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "task": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "task"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "doneMarker": {
                                    "type": "string"
                                  },
                                  "done": {
                                    "type": "boolean"
                                  },
                                  "appendLast": {
                                    "type": "boolean"
                                  },
                                  "returnLast": {
                                    "type": "boolean"
                                  },
                                  "next": {
                                    "type": "string"
                                  }
                                },
                                "required": [],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "split"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "start",
                                      "next",
                                      "end"
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          }
                        ]
                      }
                    ],
                    "behavior": [
                      "llm-content"
                    ]
                  }
                },
                "output": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string",
                            "enum": [
                              "user",
                              "model",
                              "tool"
                            ]
                          },
                          "parts": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "text": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "text"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "functionCall": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "args": {
                                          "type": "object",
                                          "properties": {},
                                          "required": [],
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "required": [
                                        "name",
                                        "args"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "required": [
                                    "functionCall"
                                  ],
                                  "additionalProperties": false
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "parts"
                        ],
                        "additionalProperties": false,
                        "behavior": [
                          "llm-content"
                        ]
                      },
                      {
                        "type": "object",
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "looper"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "max": {
                                    "type": "number"
                                  },
                                  "todo": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "task": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "task"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "doneMarker": {
                                    "type": "string"
                                  },
                                  "done": {
                                    "type": "boolean"
                                  },
                                  "appendLast": {
                                    "type": "boolean"
                                  },
                                  "returnLast": {
                                    "type": "boolean"
                                  },
                                  "next": {
                                    "type": "string"
                                  }
                                },
                                "required": [],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "split"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "start",
                                      "next",
                                      "end"
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          }
                        ]
                      }
                    ],
                    "behavior": [
                      "llm-content"
                    ]
                  }
                },
                "choose": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string",
                            "enum": [
                              "user",
                              "model",
                              "tool"
                            ]
                          },
                          "parts": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "text": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "text"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "functionCall": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "args": {
                                          "type": "object",
                                          "properties": {},
                                          "required": [],
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "required": [
                                        "name",
                                        "args"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "required": [
                                    "functionCall"
                                  ],
                                  "additionalProperties": false
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "parts"
                        ],
                        "additionalProperties": false,
                        "behavior": [
                          "llm-content"
                        ]
                      },
                      {
                        "type": "object",
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "looper"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "max": {
                                    "type": "number"
                                  },
                                  "todo": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "task": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "task"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "doneMarker": {
                                    "type": "string"
                                  },
                                  "done": {
                                    "type": "boolean"
                                  },
                                  "appendLast": {
                                    "type": "boolean"
                                  },
                                  "returnLast": {
                                    "type": "boolean"
                                  },
                                  "next": {
                                    "type": "string"
                                  }
                                },
                                "required": [],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "split"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "start",
                                      "next",
                                      "end"
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          }
                        ]
                      }
                    ],
                    "behavior": [
                      "llm-content"
                    ]
                  }
                }
              }
            },
            "raw": true
          },
          "metadata": {
            "title": "Compute Mode",
            "description": "Determining the mode of operation"
          }
        }
      ]
    },
    "repeater": {
      "title": "Repeater",
      "description": "A worker whose job it is to repeat the same thing over and over, until some condition is met or the max count of repetitions is reached.",
      "version": "0.0.1",
      "metadata": {
        "deprecated": true
      },
      "edges": [
        {
          "from": "input-0",
          "to": "invoke-0",
          "out": "context",
          "in": "context"
        },
        {
          "from": "input-0",
          "to": "invoke-0",
          "out": "worker",
          "in": "$board",
          "constant": true
        },
        {
          "from": "input-0",
          "to": "runJavascript-0",
          "out": "max",
          "in": "count"
        },
        {
          "from": "invoke-0",
          "to": "output-0",
          "out": "exit",
          "in": "context"
        },
        {
          "from": "invoke-0",
          "to": "runJavascript-0",
          "out": "context",
          "in": "context"
        },
        {
          "from": "runJavascript-0",
          "to": "invoke-0",
          "out": "continue",
          "in": "context"
        },
        {
          "from": "runJavascript-0",
          "to": "output-1",
          "out": "stop",
          "in": "context"
        },
        {
          "from": "runJavascript-0",
          "to": "runJavascript-0",
          "out": "count",
          "in": "count"
        }
      ],
      "nodes": [
        {
          "id": "input-0",
          "type": "input",
          "configuration": {
            "schema": {
              "type": "object",
              "properties": {
                "context": {
                  "type": "array",
                  "title": "Context",
                  "description": "Initial conversation context",
                  "default": "[]",
                  "items": {
                    "type": "object",
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string",
                            "enum": [
                              "user",
                              "model",
                              "tool"
                            ]
                          },
                          "parts": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "text": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "text"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "functionCall": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "args": {
                                          "type": "object",
                                          "properties": {},
                                          "required": [],
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "required": [
                                        "name",
                                        "args"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "required": [
                                    "functionCall"
                                  ],
                                  "additionalProperties": false
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "parts"
                        ],
                        "additionalProperties": false,
                        "behavior": [
                          "llm-content"
                        ]
                      },
                      {
                        "type": "object",
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "looper"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "max": {
                                    "type": "number"
                                  },
                                  "todo": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "task": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "task"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "doneMarker": {
                                    "type": "string"
                                  },
                                  "done": {
                                    "type": "boolean"
                                  },
                                  "appendLast": {
                                    "type": "boolean"
                                  },
                                  "returnLast": {
                                    "type": "boolean"
                                  },
                                  "next": {
                                    "type": "string"
                                  }
                                },
                                "required": [],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "split"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "start",
                                      "next",
                                      "end"
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          }
                        ]
                      }
                    ],
                    "behavior": [
                      "llm-content"
                    ]
                  }
                },
                "max": {
                  "type": "number",
                  "title": "Max",
                  "description": "The maximum number of repetitions to make (set to -1 to go infinitely)",
                  "default": "-1",
                  "examples": [
                    "3"
                  ]
                },
                "worker": {
                  "type": "object",
                  "behavior": [
                    "board"
                  ],
                  "title": "Worker",
                  "description": "Worker to repeat",
                  "properties": {},
                  "required": [],
                  "additionalProperties": false
                }
              },
              "required": [
                "worker"
              ]
            }
          }
        },
        {
          "id": "output-0",
          "type": "output",
          "configuration": {
            "schema": {
              "type": "object",
              "properties": {
                "context": {
                  "type": [
                    "array",
                    "boolean",
                    "null",
                    "number",
                    "object",
                    "string"
                  ]
                }
              },
              "required": [
                "context"
              ]
            }
          },
          "metadata": {
            "title": "Exit"
          }
        },
        {
          "id": "output-1",
          "type": "output",
          "configuration": {
            "schema": {
              "type": "object",
              "properties": {
                "context": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string",
                            "enum": [
                              "user",
                              "model",
                              "tool"
                            ]
                          },
                          "parts": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "text": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "text"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "functionCall": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "args": {
                                          "type": "object",
                                          "properties": {},
                                          "required": [],
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "required": [
                                        "name",
                                        "args"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "required": [
                                    "functionCall"
                                  ],
                                  "additionalProperties": false
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "parts"
                        ],
                        "additionalProperties": false,
                        "behavior": [
                          "llm-content"
                        ]
                      },
                      {
                        "type": "object",
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "looper"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "max": {
                                    "type": "number"
                                  },
                                  "todo": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "task": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "task"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "doneMarker": {
                                    "type": "string"
                                  },
                                  "done": {
                                    "type": "boolean"
                                  },
                                  "appendLast": {
                                    "type": "boolean"
                                  },
                                  "returnLast": {
                                    "type": "boolean"
                                  },
                                  "next": {
                                    "type": "string"
                                  }
                                },
                                "required": [],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "split"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "start",
                                      "next",
                                      "end"
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          }
                        ]
                      }
                    ],
                    "behavior": [
                      "llm-content"
                    ]
                  }
                }
              },
              "required": [
                "context"
              ]
            }
          }
        },
        {
          "id": "invoke-0",
          "type": "invoke",
          "configuration": {},
          "metadata": {
            "title": "Invoke Worker"
          }
        },
        {
          "id": "runJavascript-0",
          "type": "runJavascript",
          "configuration": {
            "code": "const run = ({context,count})=>{const num=count-1;if(num!==0){return{continue:context,count:num}}return{stop:context}};",
            "inputSchema": {
              "type": "object",
              "properties": {
                "context": {
                  "type": [
                    "array",
                    "boolean",
                    "null",
                    "number",
                    "object",
                    "string"
                  ]
                },
                "count": {
                  "type": [
                    "number",
                    "number"
                  ]
                }
              }
            },
            "name": "run",
            "outputSchema": {
              "type": "object",
              "properties": {
                "continue": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string",
                            "enum": [
                              "user",
                              "model",
                              "tool"
                            ]
                          },
                          "parts": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "text": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "text"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "functionCall": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "args": {
                                          "type": "object",
                                          "properties": {},
                                          "required": [],
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "required": [
                                        "name",
                                        "args"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "required": [
                                    "functionCall"
                                  ],
                                  "additionalProperties": false
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "parts"
                        ],
                        "additionalProperties": false,
                        "behavior": [
                          "llm-content"
                        ]
                      },
                      {
                        "type": "object",
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "looper"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "max": {
                                    "type": "number"
                                  },
                                  "todo": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "task": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "task"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "doneMarker": {
                                    "type": "string"
                                  },
                                  "done": {
                                    "type": "boolean"
                                  },
                                  "appendLast": {
                                    "type": "boolean"
                                  },
                                  "returnLast": {
                                    "type": "boolean"
                                  },
                                  "next": {
                                    "type": "string"
                                  }
                                },
                                "required": [],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "split"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "start",
                                      "next",
                                      "end"
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          }
                        ]
                      }
                    ],
                    "behavior": [
                      "llm-content"
                    ]
                  }
                },
                "stop": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string",
                            "enum": [
                              "user",
                              "model",
                              "tool"
                            ]
                          },
                          "parts": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "text": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "text"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "functionCall": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "args": {
                                          "type": "object",
                                          "properties": {},
                                          "required": [],
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "required": [
                                        "name",
                                        "args"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "required": [
                                    "functionCall"
                                  ],
                                  "additionalProperties": false
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "parts"
                        ],
                        "additionalProperties": false,
                        "behavior": [
                          "llm-content"
                        ]
                      },
                      {
                        "type": "object",
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "looper"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "max": {
                                    "type": "number"
                                  },
                                  "todo": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "task": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "task"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "doneMarker": {
                                    "type": "string"
                                  },
                                  "done": {
                                    "type": "boolean"
                                  },
                                  "appendLast": {
                                    "type": "boolean"
                                  },
                                  "returnLast": {
                                    "type": "boolean"
                                  },
                                  "next": {
                                    "type": "string"
                                  }
                                },
                                "required": [],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "split"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "start",
                                      "next",
                                      "end"
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          }
                        ]
                      }
                    ],
                    "behavior": [
                      "llm-content"
                    ]
                  }
                },
                "count": {
                  "type": "number"
                }
              }
            },
            "raw": true
          },
          "metadata": {
            "title": "Counter"
          }
        }
      ]
    },
    "structuredWorker": {
      "title": "Structured Worker",
      "description": "A worker who outputs structure data (JSON) provided a schema.",
      "version": "0.0.1",
      "metadata": {
        "deprecated": true
      },
      "edges": [
        {
          "from": "assembleContext",
          "to": "output-0",
          "out": "context",
          "in": "context"
        },
        {
          "from": "buildContext",
          "to": "assembleContext",
          "out": "context",
          "in": "context"
        },
        {
          "from": "buildContext",
          "to": "count",
          "out": "context",
          "in": "context",
          "constant": true
        },
        {
          "from": "count",
          "to": "count",
          "out": "count",
          "in": "count"
        },
        {
          "from": "count",
          "to": "errorOutput",
          "out": "stop",
          "in": "context"
        },
        {
          "from": "count",
          "to": "generate",
          "out": "continue",
          "in": "context"
        },
        {
          "from": "format",
          "to": "buildContext",
          "out": "prompt",
          "in": "format"
        },
        {
          "from": "generate",
          "to": "validate",
          "out": "text",
          "in": "json"
        },
        {
          "from": "initialValues",
          "to": "count",
          "out": "count",
          "in": "count"
        },
        {
          "from": "initialValues",
          "to": "count",
          "out": "error",
          "in": "error"
        },
        {
          "from": "input-0",
          "to": "buildContext",
          "out": "context",
          "in": "context"
        },
        {
          "from": "input-0",
          "to": "buildContext",
          "out": "instruction",
          "in": "instruction"
        },
        {
          "from": "input-0",
          "to": "schemish",
          "out": "schema",
          "in": "schema"
        },
        {
          "from": "input-0",
          "to": "validate",
          "out": "schema",
          "in": "schema",
          "constant": true
        },
        {
          "from": "schemish",
          "to": "format",
          "out": "schemish",
          "in": "schemish"
        },
        {
          "from": "validate",
          "to": "assembleContext",
          "out": "json",
          "in": "json"
        },
        {
          "from": "validate",
          "to": "count",
          "out": "$error",
          "in": "error"
        },
        {
          "from": "validate",
          "to": "errorOutput",
          "out": "$error",
          "in": "$error"
        },
        {
          "from": "validate",
          "to": "output-0",
          "out": "json",
          "in": "json"
        }
      ],
      "nodes": [
        {
          "id": "input-0",
          "type": "input",
          "configuration": {
            "schema": {
              "type": "object",
              "properties": {
                "context": {
                  "type": "array",
                  "title": "Context",
                  "default": "[]",
                  "examples": [
                    "[\n  {\n    \"role\": \"user\",\n    \"parts\": [\n      {\n        \"text\": \"the universe within us\"\n      }\n    ]\n  }\n]"
                  ],
                  "items": {
                    "type": "object",
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string",
                            "enum": [
                              "user",
                              "model",
                              "tool"
                            ]
                          },
                          "parts": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "text": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "text"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "functionCall": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "args": {
                                          "type": "object",
                                          "properties": {},
                                          "required": [],
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "required": [
                                        "name",
                                        "args"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "required": [
                                    "functionCall"
                                  ],
                                  "additionalProperties": false
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "parts"
                        ],
                        "additionalProperties": false,
                        "behavior": [
                          "llm-content"
                        ]
                      },
                      {
                        "type": "object",
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "looper"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "max": {
                                    "type": "number"
                                  },
                                  "todo": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "task": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "task"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "doneMarker": {
                                    "type": "string"
                                  },
                                  "done": {
                                    "type": "boolean"
                                  },
                                  "appendLast": {
                                    "type": "boolean"
                                  },
                                  "returnLast": {
                                    "type": "boolean"
                                  },
                                  "next": {
                                    "type": "string"
                                  }
                                },
                                "required": [],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "split"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "start",
                                      "next",
                                      "end"
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          }
                        ]
                      }
                    ],
                    "behavior": [
                      "llm-content"
                    ]
                  }
                },
                "instruction": {
                  "type": "string",
                  "behavior": [
                    "config"
                  ],
                  "title": "Instruction",
                  "examples": [
                    "You are a brilliant poet who specializes in two-line rhyming poems.\nGiven any topic, you can quickly whip up three two-line rhyming poems about it.\nLook at the topic below and do your magic"
                  ],
                  "format": "multiline"
                },
                "schema": {
                  "type": "object",
                  "behavior": [
                    "json-schema",
                    "config"
                  ],
                  "title": "Schema",
                  "description": "The schema to convert to schemish.",
                  "default": "{}",
                  "examples": [
                    "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"poems\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"inspiration\": {\n            \"type\": \"string\",\n            \"description\": \"The inspiration behind the poem\"\n          },\n          \"poem\": {\n            \"type\": \"string\",\n            \"description\": \"The poem itself\"\n          }\n        }\n      }\n    }\n  }\n}"
                  ],
                  "properties": {},
                  "required": [],
                  "additionalProperties": true
                }
              },
              "required": [
                "instruction"
              ]
            }
          }
        },
        {
          "id": "errorOutput",
          "type": "output",
          "configuration": {
            "schema": {
              "type": "object",
              "properties": {
                "$error": {
                  "type": "object",
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "message"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "kind": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message"
                          ],
                          "additionalProperties": false
                        }
                      },
                      "required": [
                        "kind",
                        "error"
                      ],
                      "additionalProperties": false
                    }
                  ]
                },
                "context": {
                  "type": "string"
                }
              },
              "required": [
                "$error",
                "context"
              ]
            }
          },
          "metadata": {
            "title": "Error Output",
            "description": "Displaying error output, giving up on JSON healing"
          }
        },
        {
          "id": "output-0",
          "type": "output",
          "configuration": {
            "schema": {
              "type": "object",
              "properties": {
                "context": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string",
                            "enum": [
                              "user",
                              "model",
                              "tool"
                            ]
                          },
                          "parts": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "text": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "text"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "functionCall": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "args": {
                                          "type": "object",
                                          "properties": {},
                                          "required": [],
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "required": [
                                        "name",
                                        "args"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "required": [
                                    "functionCall"
                                  ],
                                  "additionalProperties": false
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "parts"
                        ],
                        "additionalProperties": false,
                        "behavior": [
                          "llm-content"
                        ]
                      },
                      {
                        "type": "object",
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "looper"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "max": {
                                    "type": "number"
                                  },
                                  "todo": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "task": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "task"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "doneMarker": {
                                    "type": "string"
                                  },
                                  "done": {
                                    "type": "boolean"
                                  },
                                  "appendLast": {
                                    "type": "boolean"
                                  },
                                  "returnLast": {
                                    "type": "boolean"
                                  },
                                  "next": {
                                    "type": "string"
                                  }
                                },
                                "required": [],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "split"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "start",
                                      "next",
                                      "end"
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          }
                        ]
                      }
                    ],
                    "behavior": [
                      "llm-content"
                    ]
                  }
                },
                "json": {
                  "type": [
                    "array",
                    "boolean",
                    "null",
                    "number",
                    "object",
                    "string"
                  ],
                  "title": "JSON",
                  "description": "The validated JSON."
                }
              },
              "required": [
                "context",
                "json"
              ]
            }
          }
        },
        {
          "id": "assembleContext",
          "type": "runJavascript",
          "configuration": {
            "code": "const assembleContext = ({context:context2,json})=>{if(!context2)throw new Error(\"Context is required\");return{context:[...context2,{role:\"model\",parts:[{text:JSON.stringify(json)}]}]}};",
            "inputSchema": {
              "type": "object",
              "properties": {
                "context": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string",
                            "enum": [
                              "user",
                              "model",
                              "tool"
                            ]
                          },
                          "parts": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "text": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "text"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "functionCall": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "args": {
                                          "type": "object",
                                          "properties": {},
                                          "required": [],
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "required": [
                                        "name",
                                        "args"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "required": [
                                    "functionCall"
                                  ],
                                  "additionalProperties": false
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "parts"
                        ],
                        "additionalProperties": false,
                        "behavior": [
                          "llm-content"
                        ]
                      },
                      {
                        "type": "object",
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "looper"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "max": {
                                    "type": "number"
                                  },
                                  "todo": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "task": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "task"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "doneMarker": {
                                    "type": "string"
                                  },
                                  "done": {
                                    "type": "boolean"
                                  },
                                  "appendLast": {
                                    "type": "boolean"
                                  },
                                  "returnLast": {
                                    "type": "boolean"
                                  },
                                  "next": {
                                    "type": "string"
                                  }
                                },
                                "required": [],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "split"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "start",
                                      "next",
                                      "end"
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          }
                        ]
                      }
                    ],
                    "behavior": [
                      "llm-content"
                    ]
                  }
                },
                "json": {
                  "type": [
                    "array",
                    "boolean",
                    "null",
                    "number",
                    "object",
                    "string"
                  ]
                }
              }
            },
            "name": "assembleContext",
            "outputSchema": {
              "type": "object",
              "properties": {
                "context": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string",
                            "enum": [
                              "user",
                              "model",
                              "tool"
                            ]
                          },
                          "parts": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "text": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "text"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "functionCall": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "args": {
                                          "type": "object",
                                          "properties": {},
                                          "required": [],
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "required": [
                                        "name",
                                        "args"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "required": [
                                    "functionCall"
                                  ],
                                  "additionalProperties": false
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "parts"
                        ],
                        "additionalProperties": false,
                        "behavior": [
                          "llm-content"
                        ]
                      },
                      {
                        "type": "object",
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "looper"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "max": {
                                    "type": "number"
                                  },
                                  "todo": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "task": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "task"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "doneMarker": {
                                    "type": "string"
                                  },
                                  "done": {
                                    "type": "boolean"
                                  },
                                  "appendLast": {
                                    "type": "boolean"
                                  },
                                  "returnLast": {
                                    "type": "boolean"
                                  },
                                  "next": {
                                    "type": "string"
                                  }
                                },
                                "required": [],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "split"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "start",
                                      "next",
                                      "end"
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          }
                        ]
                      }
                    ],
                    "behavior": [
                      "llm-content"
                    ]
                  }
                }
              }
            },
            "raw": true
          },
          "metadata": {
            "title": "Assemble Context",
            "description": "Assembling the context for the agent"
          }
        },
        {
          "id": "buildContext",
          "type": "runJavascript",
          "configuration": {
            "code": "const buildContext = ({context:context2,format:format2,instruction:instruction2})=>{if(!Array.isArray(context2)){const text=typeof context2===\"string\"?context2:JSON.stringify(context2);context2=[{role:\"user\",parts:[{text}]}]}const list=context2||[];if(list.length>0){const last=list[list.length-1];if(last.role===\"user\"){last.parts.unshift({text:instruction2},{text:format2});return{context:list}}}return{context:[...list,{role:\"user\",parts:[{text:instruction2},{text:format2}]}]}};",
            "inputSchema": {
              "type": "object",
              "properties": {
                "context": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string",
                            "enum": [
                              "user",
                              "model",
                              "tool"
                            ]
                          },
                          "parts": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "text": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "text"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "functionCall": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "args": {
                                          "type": "object",
                                          "properties": {},
                                          "required": [],
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "required": [
                                        "name",
                                        "args"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "required": [
                                    "functionCall"
                                  ],
                                  "additionalProperties": false
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "parts"
                        ],
                        "additionalProperties": false,
                        "behavior": [
                          "llm-content"
                        ]
                      },
                      {
                        "type": "object",
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "looper"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "max": {
                                    "type": "number"
                                  },
                                  "todo": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "task": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "task"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "doneMarker": {
                                    "type": "string"
                                  },
                                  "done": {
                                    "type": "boolean"
                                  },
                                  "appendLast": {
                                    "type": "boolean"
                                  },
                                  "returnLast": {
                                    "type": "boolean"
                                  },
                                  "next": {
                                    "type": "string"
                                  }
                                },
                                "required": [],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "split"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "start",
                                      "next",
                                      "end"
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          }
                        ]
                      }
                    ],
                    "behavior": [
                      "llm-content"
                    ]
                  }
                },
                "instruction": {
                  "type": "string",
                  "format": "multiline",
                  "behavior": [
                    "config"
                  ]
                },
                "format": {
                  "type": "string"
                }
              }
            },
            "name": "buildContext",
            "outputSchema": {
              "type": "object",
              "properties": {
                "context": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string",
                            "enum": [
                              "user",
                              "model",
                              "tool"
                            ]
                          },
                          "parts": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "text": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "text"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "functionCall": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "args": {
                                          "type": "object",
                                          "properties": {},
                                          "required": [],
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "required": [
                                        "name",
                                        "args"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "required": [
                                    "functionCall"
                                  ],
                                  "additionalProperties": false
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "parts"
                        ],
                        "additionalProperties": false,
                        "behavior": [
                          "llm-content"
                        ]
                      },
                      {
                        "type": "object",
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "looper"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "max": {
                                    "type": "number"
                                  },
                                  "todo": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "task": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "task"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "doneMarker": {
                                    "type": "string"
                                  },
                                  "done": {
                                    "type": "boolean"
                                  },
                                  "appendLast": {
                                    "type": "boolean"
                                  },
                                  "returnLast": {
                                    "type": "boolean"
                                  },
                                  "next": {
                                    "type": "string"
                                  }
                                },
                                "required": [],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "split"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "start",
                                      "next",
                                      "end"
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          }
                        ]
                      }
                    ],
                    "behavior": [
                      "llm-content"
                    ]
                  }
                }
              }
            },
            "raw": true
          },
          "metadata": {
            "title": "Build Context",
            "description": "Building the context for the agent"
          }
        },
        {
          "id": "count",
          "type": "runJavascript",
          "configuration": {
            "code": "const count = ({context:context2,error,count:count2})=>{const num=count2-1;if(num!=0){return{continue:context2,count:num}}return{stop:error}};",
            "inputSchema": {
              "type": "object",
              "properties": {
                "count": {
                  "anyOf": [
                    {
                      "type": [
                        "array",
                        "boolean",
                        "null",
                        "number",
                        "object",
                        "string"
                      ]
                    },
                    {
                      "type": "number"
                    }
                  ]
                },
                "error": {
                  "anyOf": [
                    {
                      "type": [
                        "array",
                        "boolean",
                        "null",
                        "number",
                        "object",
                        "string"
                      ]
                    },
                    {
                      "type": [
                        "array",
                        "boolean",
                        "null",
                        "number",
                        "object",
                        "string"
                      ]
                    }
                  ]
                },
                "context": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string",
                            "enum": [
                              "user",
                              "model",
                              "tool"
                            ]
                          },
                          "parts": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "text": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "text"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "functionCall": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "args": {
                                          "type": "object",
                                          "properties": {},
                                          "required": [],
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "required": [
                                        "name",
                                        "args"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "required": [
                                    "functionCall"
                                  ],
                                  "additionalProperties": false
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "parts"
                        ],
                        "additionalProperties": false,
                        "behavior": [
                          "llm-content"
                        ]
                      },
                      {
                        "type": "object",
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "looper"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "max": {
                                    "type": "number"
                                  },
                                  "todo": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "task": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "task"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "doneMarker": {
                                    "type": "string"
                                  },
                                  "done": {
                                    "type": "boolean"
                                  },
                                  "appendLast": {
                                    "type": "boolean"
                                  },
                                  "returnLast": {
                                    "type": "boolean"
                                  },
                                  "next": {
                                    "type": "string"
                                  }
                                },
                                "required": [],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "split"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "start",
                                      "next",
                                      "end"
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          }
                        ]
                      }
                    ],
                    "behavior": [
                      "llm-content"
                    ]
                  }
                }
              }
            },
            "name": "count",
            "outputSchema": {
              "type": "object",
              "properties": {
                "continue": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string",
                            "enum": [
                              "user",
                              "model",
                              "tool"
                            ]
                          },
                          "parts": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "text": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "text"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "functionCall": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "args": {
                                          "type": "object",
                                          "properties": {},
                                          "required": [],
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "required": [
                                        "name",
                                        "args"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "required": [
                                    "functionCall"
                                  ],
                                  "additionalProperties": false
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "parts"
                        ],
                        "additionalProperties": false,
                        "behavior": [
                          "llm-content"
                        ]
                      },
                      {
                        "type": "object",
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "looper"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "max": {
                                    "type": "number"
                                  },
                                  "todo": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "task": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "task"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "doneMarker": {
                                    "type": "string"
                                  },
                                  "done": {
                                    "type": "boolean"
                                  },
                                  "appendLast": {
                                    "type": "boolean"
                                  },
                                  "returnLast": {
                                    "type": "boolean"
                                  },
                                  "next": {
                                    "type": "string"
                                  }
                                },
                                "required": [],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "split"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "start",
                                      "next",
                                      "end"
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          }
                        ]
                      }
                    ],
                    "behavior": [
                      "llm-content"
                    ]
                  }
                },
                "count": {
                  "type": "number"
                },
                "stop": {
                  "type": "string"
                }
              }
            },
            "raw": true
          },
          "metadata": {
            "title": "Counter",
            "description": "Counting the JSON healing iteration"
          }
        },
        {
          "id": "format",
          "type": "promptTemplate",
          "configuration": {
            "template": "Reply as valid JSON of the following format:\n\n```json\n{{schemish}}\n```\n"
          },
          "metadata": {
            "title": "Reply Structure Formatter",
            "description": "Formatting the reply structure for the agent."
          }
        },
        {
          "id": "generate",
          "type": "text",
          "configuration": {
            "text": "unused"
          },
          "metadata": {
            "title": "Generate",
            "logLevel": "info",
            "description": "Generating an answer"
          }
        },
        {
          "id": "initialValues",
          "type": "passthrough",
          "configuration": {
            "count": 5,
            "error": "stub"
          },
          "metadata": {
            "title": "Initial Values",
            "description": "Populating initial values for the counter"
          }
        },
        {
          "id": "schemish",
          "type": "schemish",
          "configuration": {},
          "metadata": {
            "title": "Schemish",
            "description": "Converting JSON schema to a more compact format"
          }
        },
        {
          "id": "validate",
          "type": "validateJson",
          "configuration": {},
          "metadata": {
            "title": "Validate JSON",
            "logLevel": "info",
            "description": "Checking my work"
          }
        }
      ]
    },
    "specialist": {
      "title": "Specialist",
      "metadata": {
        "icon": "smart-toy",
        "help": {
          "url": "https://breadboard-ai.github.io/breadboard/docs/kits/agents/#specialist"
        }
      },
      "description": "Given instructions on how to act, performs a single task, optionally invoking tools.",
      "edges": [
        {
          "from": "fn-15",
          "to": "output-2",
          "out": "context",
          "in": "out"
        },
        {
          "from": "fn-7",
          "to": "fn-8",
          "out": "context",
          "in": "context"
        },
        {
          "from": "fn-7",
          "to": "text-10",
          "out": "context",
          "in": "context"
        },
        {
          "from": "fn-7",
          "to": "fn-15",
          "out": "context",
          "in": "context"
        },
        {
          "from": "router",
          "to": "assembleBoardInvoke",
          "out": "context",
          "in": "context"
        },
        {
          "from": "router",
          "to": "assembleBoardInvoke",
          "out": "functionCalls",
          "in": "functionCalls"
        },
        {
          "from": "router",
          "to": "fn-15",
          "out": "context",
          "in": "generated"
        },
        {
          "from": "router",
          "to": "fn-15",
          "out": "text",
          "in": "text"
        },
        {
          "from": "fn-5",
          "to": "fn-7",
          "out": "context",
          "in": "context"
        },
        {
          "from": "fn-6",
          "to": "fn-7",
          "out": "progress",
          "in": "progress"
        },
        {
          "from": "fn-8",
          "to": "curry-9",
          "out": "context",
          "in": "context"
        },
        {
          "from": "fn-8",
          "to": "fn-12",
          "out": "context",
          "in": "context"
        },
        {
          "from": "text-10",
          "to": "router",
          "out": "context",
          "in": "context"
        },
        {
          "from": "assembleBoardInvoke",
          "to": "map-11",
          "out": "list",
          "in": "list"
        },
        {
          "from": "input-1",
          "to": "fn-5",
          "out": "in",
          "in": "context"
        },
        {
          "from": "input-1",
          "to": "fn-5",
          "out": "task",
          "in": "toAdd"
        },
        {
          "from": "input-1",
          "to": "fn-6",
          "out": "in",
          "in": "context"
        },
        {
          "from": "input-1",
          "to": "text-10",
          "out": "persona",
          "in": "systemInstruction"
        },
        {
          "from": "curry-9",
          "to": "turnBoardsToFunctions",
          "out": "board",
          "in": "board"
        },
        {
          "from": "fn-12",
          "to": "fn-13",
          "out": "*",
          "in": ""
        },
        {
          "from": "formatFunctionDeclarations",
          "to": "text-10",
          "out": "tools",
          "in": "tools"
        },
        {
          "from": "formatFunctionDeclarations",
          "to": "assembleBoardInvoke",
          "out": "urlMap",
          "in": "urlMap"
        },
        {
          "from": "input-4",
          "to": "text-10",
          "out": "model",
          "in": "model"
        },
        {
          "from": "map-11",
          "to": "fn-12",
          "out": "list",
          "in": "response"
        },
        {
          "from": "turnBoardsToFunctions",
          "to": "formatFunctionDeclarations",
          "out": "list",
          "in": "list"
        },
        {
          "from": "fn-13",
          "to": "output-14",
          "out": "context",
          "in": "out"
        },
        {
          "from": "input-3",
          "to": "turnBoardsToFunctions",
          "out": "tools",
          "in": "list"
        }
      ],
      "nodes": [
        {
          "id": "output-2",
          "type": "output",
          "configuration": {
            "schema": {
              "type": "object",
              "properties": {
                "out": {
                  "title": "Context out",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "behavior": [
                      "llm-content"
                    ]
                  }
                }
              }
            }
          }
        },
        {
          "id": "fn-15",
          "type": "runJavascript",
          "configuration": {
            "code": "const fn_15 = ({context,generated})=>{if(!context)throw new Error(\"Context is required\");if(!generated)throw new Error(\"Generated is required\");const c=context;const g=generated;let doneMarker=null;for(let i=0;i<c.length;++i){const item=c[i];if(item.role===\"$metadata\"&&item.type===\"looper\"){const plan=item.data;if(plan.doneMarker){doneMarker=plan.doneMarker;break}}}if(!doneMarker){return{context:[...c,g]}}let containsMarkers=false;for(let i=0;i<g.parts.length;++i){const part=g.parts[i];if(\"text\"in part&&part.text.includes(doneMarker)){containsMarkers=true;part.text=part.text.replaceAll(doneMarker,\"\").trim();break}}if(!containsMarkers){return{context:[...c,g]}}const metadata={role:\"$metadata\",type:\"looper\",data:{done:true}};return{context:[...c,g,metadata]}};",
            "name": "fn_15",
            "raw": true
          },
          "metadata": {
            "title": "Done Check",
            "description": "Checking for the 'Done' marker"
          }
        },
        {
          "id": "fn-7",
          "type": "runJavascript",
          "configuration": {
            "code": "const fn_7 = ({context,progress})=>{const contents=Array.isArray(context)?context:[context];const plans=Array.isArray(progress)?progress:[progress];const last=plans[0];if(!last||!last.next){return{context}}const lastLooperMarker=contents.findLastIndex(item=>item.role===\"$metadata\"&&item.type===\"looper\");if(lastLooperMarker>=0){const pastLooper=contents.slice(lastLooperMarker);const hasModel=pastLooper.some(item=>item.role===\"model\");if(hasModel){return{context:contents}}}contents.push({role:\"user\",parts:[{text:last.next}]});return{context:contents}};",
            "name": "fn_7",
            "raw": true
          },
          "metadata": {
            "title": "Add Looper Task",
            "description": "If there is a pending Looper task, add it."
          }
        },
        {
          "id": "router",
          "type": "runJavascript",
          "configuration": {
            "code": "const router = ({context})=>{if(!context)throw new Error(\"Context is a required input\");const item=context;const functionCallParts=item.parts.filter(part=>\"functionCall\"in part).map(part=>part.functionCall);if(functionCallParts.length===0){const textPart=item.parts.find(part=>\"text\"in part);if(!textPart)throw new Error(\"No text or function call found in context\");return{context,text:textPart.text}}return{context,functionCalls:functionCallParts}};",
            "name": "router",
            "raw": true
          },
          "metadata": {
            "title": "Router",
            "description": "Routing to either function call invocation or text reply"
          }
        },
        {
          "id": "fn-5",
          "type": "runJavascript",
          "configuration": {
            "code": "const fn_5 = ({context,toAdd})=>{if(!context)throw new Error(\"Context is required\");const existing=Array.isArray(context)?context:[context];const incoming=toAdd;if(!incoming.parts){const containsUserRole=existing.filter(item=>item.role!==\"model\"&&item.role!==\"$metadata\").length>0;if(!containsUserRole){return{context:[...existing,{role:\"user\",parts:[{text:\"Do your magic\"}]}]}}return{context:existing}}if(!incoming.role){incoming.role=\"user\"}const last=existing[existing.length-1];if(!last){return{context:[incoming]}}if(last.role!==incoming.role){return{context:[...existing,incoming]}}else{const result=structuredClone(existing);const index=result.length-1;result[index].parts.push(...incoming.parts);return{context:result}}};",
            "name": "fn_5",
            "raw": true
          },
          "metadata": {
            "title": "Add Task",
            "description": "Adding task to the prompt."
          }
        },
        {
          "id": "fn-6",
          "type": "runJavascript",
          "configuration": {
            "code": "const fn_6 = ({context,forkOutputs})=>{const fork=forkOutputs;const existing=Array.isArray(context)?context:[context];const progress=[];for(let i=existing.length-1;i>=0;i--){const item=existing[i];if(item.role===\"$metadata\"&&item.type===\"looper\"){progress.push(item.data)}}if(fork){if(progress.length){return{progress}}else{return{context}}}else{return{context,progress}}};",
            "name": "fn_6",
            "raw": true
          },
          "metadata": {
            "title": "Read Progress so far"
          }
        },
        {
          "id": "fn-8",
          "type": "runJavascript",
          "configuration": {
            "code": "const fn_8 = ({context})=>{if(!context)throw new Error(\"Context is required\");const c=context;const id=Math.random().toString(36).substring(7);const metadata={role:\"$metadata\",type:\"split\",data:{type:\"start\",id}};return{context:[...c,metadata],id}};",
            "name": "fn_8",
            "raw": true
          },
          "metadata": {
            "title": "Add Split Start",
            "description": "Marking the start of parallel processing in the context"
          }
        },
        {
          "id": "text-10",
          "type": "text",
          "configuration": {},
          "metadata": {
            "title": "Gemini API Call",
            "description": "Applying Gemini to do work"
          }
        },
        {
          "id": "assembleBoardInvoke",
          "type": "runJavascript",
          "configuration": {
            "code": "const assembleBoardInvoke = ({functionCalls,urlMap})=>{if(!functionCalls){throw new Error(\"Function call array is a required input\")}if(!urlMap){throw new Error(\"URL map is a required input\")}const calls=functionCalls;if(calls.length===0){throw new Error(\"Function call array must not be empty.\")}const list=[];for(const call of calls){const item=urlMap[call.name];const $board=item.url;const $flags=item.flags;const llmContentProperty=$flags.inputLLMContent||$flags.inputLLMContentArray;const invokeArgs={$board,$flags,...call.args};if(llmContentProperty){const args=call.args;const text=args[llmContentProperty];const parts=[{text}];const llmContent={parts,role:\"user\"};if($flags.inputLLMContentArray){invokeArgs[llmContentProperty]=[llmContent]}else{invokeArgs[llmContentProperty]=llmContent}}list.push(invokeArgs)}return{list}};",
            "name": "assembleBoardInvoke",
            "raw": true
          },
          "metadata": {
            "title": "Assemble Tool Invoke",
            "description": "Assembling the tool invocation based on Gemini response"
          }
        },
        {
          "id": "input-1",
          "type": "input",
          "configuration": {
            "schema": {
              "type": "object",
              "properties": {
                "in": {
                  "title": "Context in",
                  "description": "Incoming conversation context",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "behavior": [
                      "llm-content"
                    ]
                  }
                },
                "task": {
                  "title": "Task",
                  "description": "(Optional) Provide a specific task with clear instructions for the worker to complete using the conversation context",
                  "type": "object",
                  "default": "{}",
                  "behavior": [
                    "llm-content",
                    "config"
                  ]
                },
                "persona": {
                  "type": "object",
                  "behavior": [
                    "llm-content",
                    "config"
                  ],
                  "title": "Persona",
                  "description": "Describe the worker's skills, capabilities, mindset, and thinking process",
                  "default": ""
                }
              },
              "required": [
                "in",
                "persona"
              ]
            }
          }
        },
        {
          "id": "curry-9",
          "type": "curry",
          "configuration": {
            "$board": "#boardToFunction"
          },
          "metadata": {
            "title": "Add Context",
            "description": "Adding context to the board to function converter"
          }
        },
        {
          "id": "fn-12",
          "type": "runJavascript",
          "configuration": {
            "code": "const fn_12 = ({response,context})=>{const r=response;const c=context;const result=Object.fromEntries(r.map((item,i)=>[`context-${i+1}`,item.item]));if(c){result[\"context-0\"]=c}return result};",
            "name": "fn_12",
            "raw": true
          },
          "metadata": {
            "title": "Format Tool Response",
            "description": "Formatting tool response"
          }
        },
        {
          "id": "formatFunctionDeclarations",
          "type": "runJavascript",
          "configuration": {
            "code": "const formatFunctionDeclarations = ({list})=>{const tools=[];const urlMap={};list.forEach(item=>{tools.push(item.function);const flags=item.flags;urlMap[item.function.name]={url:item.boardURL,flags}});return{tools,urlMap}};",
            "name": "formatFunctionDeclarations",
            "raw": true
          },
          "metadata": {
            "title": "Format Function Declarations",
            "description": "Formatting the function declarations"
          }
        },
        {
          "id": "input-4",
          "type": "input",
          "configuration": {
            "schema": {
              "type": "object",
              "properties": {
                "model": {
                  "type": "string",
                  "title": "Model",
                  "description": "Choose the model to use for this specialist.",
                  "enum": [
                    "gemini-1.5-flash-latest",
                    "gemini-1.5-pro-latest",
                    "gemini-1.5-pro-exp-0801",
                    "gemini-1.5-pro-exp-0827",
                    "gemini-1.5-flash-8b-exp-0827",
                    "gemini-1.5-pro-exp-0827"
                  ],
                  "default": "gemini-1.5-flash-latest",
                  "examples": [
                    "gemini-1.5-flash-latest"
                  ],
                  "behavior": [
                    "config"
                  ]
                }
              }
            }
          },
          "metadata": {
            "title": "Model Input",
            "description": "Ask which model to use"
          }
        },
        {
          "id": "map-11",
          "type": "map",
          "configuration": {
            "board": "#invokeBoardWithArgs"
          },
          "metadata": {
            "title": "Invoke Tools in Parallel",
            "description": "Invoking tools in parallel"
          }
        },
        {
          "id": "turnBoardsToFunctions",
          "type": "map",
          "configuration": {},
          "metadata": {
            "title": "Turn Boards into Functions",
            "description": "Turning provided boards into functions"
          }
        },
        {
          "id": "fn-13",
          "type": "runJavascript",
          "configuration": {
            "code": "const fn_13 = ({merge,...inputs})=>{const entries=Object.entries(inputs).sort();if(merge){const context=[];const parts=[];for(const[,input]of entries){const c=asContextArray(input);let lastIndex=c.length-1;let last;do{last=c[lastIndex--]}while(lastIndex>=0&&last.role===\"$metadata\");if(last){parts.push(...last.parts)}}context.push({parts,role:\"user\"});return{context}}else{let mode;const[f,...rest]=entries;if(!f){return{context:[]}}const first=asContextArray(f[1]);const firstOpenSplits=scanForSplits(first);const preambleIndices=[];for(const[,input]of rest){const c=asContextArray(input);const hasOpenSplits=scanForSplits(c);if(hasOpenSplits){preambleIndices.push(hasOpenSplits[1])}}if(!firstOpenSplits){if(preambleIndices.length===0){mode=\"simple\"}else{mode=\"adhoc\"}}else{const preamblesMatch=preambleIndices.length>0&&preambleIndices.every(value=>value===firstOpenSplits[1]);if(preamblesMatch){mode=\"preamble\"}else{if(firstOpenSplits[1]===first.length-1){mode=\"single\"}else{mode=\"adhoc\"}}}const context=[];if(mode===\"adhoc\"){for(const[,input]of entries){const c=asContextArray(input);context.push(...c)}return{context}}else if(mode===\"simple\"){const splitId=Math.random().toString(36).substring(7);context.push({role:\"$metadata\",type:\"split\",data:{type:\"start\",id:splitId}});for(const[,input]of entries){const c=asContextArray(input);context.push(...c);context.push({role:\"$metadata\",type:\"split\",data:{type:\"next\",id:splitId}})}}else if(mode===\"preamble\"){const preambleIndex=firstOpenSplits?.[1]||0;const preamble=entries[0][1].slice(0,preambleIndex+1);context.push(...preamble);const splitId=preamble[preamble.length-1].data.id;for(const[,input]of entries){let c=asContextArray(input);if(preambleIndex>=0){c=c.slice(preambleIndex+1)}if(c.length){context.push(...c);context.push({role:\"$metadata\",type:\"split\",data:{type:\"next\",id:splitId}})}}}else if(mode===\"single\"){const splitId=first[first.length-1].data.id;context.push(...first);for(const[,input]of rest){const c=asContextArray(input);context.push(...c);context.push({role:\"$metadata\",type:\"split\",data:{type:\"next\",id:splitId}})}}const last=context[context.length-1];last.data.type=\"end\";return{context}}function asContextArray(input){return Array.isArray(input)?input:[input]}__name(asContextArray,\"asContextArray\");function scanForSplits(c){const stack=[];for(const[i,item]of c.entries()){if(item.role!==\"$metadata\")continue;if(item.type!==\"split\")continue;if(item.data.type===\"start\"){stack.push([item.data.id,i])}if(item.data.type===\"end\"){const[id]=stack.pop()||[];if(id!==item.data.id){console.warn(\"Split integrity error: mismatched split start/end markers. Start:\",id,\"End:\",item.data.id);return null}}}return stack.pop()||null}__name(scanForSplits,\"scanForSplits\")};",
            "name": "fn_13",
            "raw": true
          },
          "metadata": {
            "title": "Add Tool Response",
            "description": "Adding tool response to context"
          }
        },
        {
          "id": "input-3",
          "type": "input",
          "configuration": {
            "schema": {
              "type": "object",
              "properties": {
                "tools": {
                  "title": "Tools",
                  "description": "(Optional) Add tools to this list for the worker to use when needed",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "behavior": [
                      "board"
                    ]
                  },
                  "behavior": [
                    "config"
                  ],
                  "default": "[]"
                }
              }
            }
          },
          "metadata": {
            "title": "Tools Input",
            "description": "Specify the tools to use"
          }
        },
        {
          "id": "output-14",
          "type": "output",
          "configuration": {
            "schema": {
              "type": "object",
              "properties": {
                "out": {
                  "title": "Context out",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "behavior": [
                      "llm-content"
                    ]
                  }
                }
              }
            }
          },
          "metadata": {
            "title": "Tool Output",
            "description": "Return tool results as output"
          }
        }
      ],
      "graphs": {
        "boardToFunction": {
          "title": "Board to functions",
          "description": "Use this board to convert specified boards into function-calling signatures",
          "edges": [
            {
              "from": "fn-4",
              "to": "output-2",
              "out": "function",
              "in": "function"
            },
            {
              "from": "fn-4",
              "to": "output-2",
              "out": "board",
              "in": "boardURL"
            },
            {
              "from": "fn-4",
              "to": "output-2",
              "out": "flags",
              "in": "flags"
            },
            {
              "from": "curry-3",
              "to": "fn-4",
              "out": "board",
              "in": "board"
            },
            {
              "from": "input-1",
              "to": "curry-3",
              "out": "item",
              "in": "$board"
            },
            {
              "from": "input-1",
              "to": "curry-3",
              "out": "context",
              "in": "context"
            }
          ],
          "nodes": [
            {
              "id": "output-2",
              "type": "output",
              "configuration": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "function": {
                      "type": "string",
                      "title": "function"
                    },
                    "boardURL": {
                      "type": "string",
                      "title": "boardURL"
                    },
                    "flags": {
                      "type": "string",
                      "title": "flags"
                    }
                  }
                }
              }
            },
            {
              "id": "fn-4",
              "type": "runJavascript",
              "configuration": {
                "code": "const fn_4 = ({board:board2})=>{const b=board2;const inputs=b.nodes.filter(node=>node.type===\"input\")||[];const outputs=b.nodes.filter(node=>node.type===\"output\");if(outputs.length===0){throw new Error(\"No outputs found\")}const inputSchema=inputs[0]?.configuration?.schema||{};const outputSchema=outputs[0].configuration?.schema;if(!outputSchema){throw new Error(\"No output schema found\")}const properties={};const flags={};for(const key in inputSchema.properties){const property=inputSchema.properties[key];const isObject=property.type===\"object\";const isArray=property.type===\"array\";const type=isObject||isArray?\"string\":property.type;if(isObject&&property.behavior?.includes(\"llm-content\")){flags.inputLLMContent=key}else if(isArray&&property.items?.behavior?.includes(\"llm-content\")){flags.inputLLMContentArray=key;continue}const description2=property.description||property.title||\"text\";properties[key]={type,description:description2}}if(flags.inputLLMContentArray){if(flags.inputLLMContentArray!==\"context\"){const c=b.args?.context;if(c){b.args??={};b.args[flags.inputLLMContentArray]=c;delete b.args.context}}}else{delete b.args?.context}for(const key in outputSchema.properties){const property=outputSchema.properties[key];const isObject=property.type===\"object\";const isArray=property.type===\"array\";if(isObject&&property.behavior?.includes(\"llm-content\")){flags.outputLLMContent=key}else if(isArray&&property.items?.behavior?.includes(\"llm-content\")){flags.outputLLMContentArray=key}}const name=b.title?.replace(/\\W/g,\"_\")||\"function\";const description=b.description;const parameters=Object.entries(properties).length>0?{type:\"object\",properties}:void 0;const f={name,description};if(parameters){f.parameters=parameters}return{function:f,returns:outputSchema,flags,board:board2}};",
                "name": "fn_4",
                "raw": true
              },
              "metadata": {
                "title": "Get Function Signature from board"
              }
            },
            {
              "id": "curry-3",
              "type": "curry",
              "configuration": {}
            },
            {
              "id": "input-1",
              "type": "input",
              "configuration": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "item": {
                      "title": "Board",
                      "behavior": [
                        "board"
                      ],
                      "description": "The board to curry. Can be a BoardCapability, a graph or a URL",
                      "type": "string"
                    },
                    "context": {
                      "type": "string",
                      "title": "context"
                    }
                  },
                  "required": [
                    "item",
                    "context"
                  ]
                }
              }
            }
          ],
          "graphs": {}
        },
        "invokeBoardWithArgs": {
          "title": "Invoke Board With Args",
          "description": "Takes one item of `boardInvocationAssembler` output and invokes it as a board with arguments.",
          "version": "0.0.1",
          "edges": [
            {
              "from": "fn-7",
              "to": "output-2",
              "out": "item",
              "in": "item"
            },
            {
              "from": "fn-6",
              "to": "fn-7",
              "out": "result",
              "in": "result"
            },
            {
              "from": "fn-4",
              "to": "fn-7",
              "out": "flags",
              "in": "flags"
            },
            {
              "from": "invoke-5",
              "to": "fn-6",
              "out": "*",
              "in": ""
            },
            {
              "from": "input-1",
              "to": "fn-3",
              "out": "item",
              "in": "item"
            },
            {
              "from": "input-1",
              "to": "fn-4",
              "out": "item",
              "in": "item"
            },
            {
              "from": "fn-3",
              "to": "invoke-5",
              "out": "*",
              "in": ""
            }
          ],
          "nodes": [
            {
              "id": "output-2",
              "type": "output",
              "configuration": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "item": {
                      "type": "string",
                      "title": "item"
                    }
                  }
                }
              }
            },
            {
              "id": "fn-7",
              "type": "runJavascript",
              "configuration": {
                "code": "const fn_7 = ({result,flags})=>{let contentDetected=false;const inputs=result;const item=[];const f=flags;if(f){if(f.outputLLMContent){const content=inputs[f.outputLLMContent];content.role=\"tool\";item.push(content);contentDetected=true}else if(f.outputLLMContentArray){const contentArray=inputs[f.outputLLMContentArray];contentArray.forEach(content=>{if(content.role!==\"$metadata\"){content.role=\"tool\"}item.push(content)});contentDetected=true}}else{for(const key in inputs){const input=inputs[key];if(input!==null&&typeof input===\"object\"&&\"content\"in input){const content=input.content;if(content.parts&&Array.isArray(content.parts)){content.role=\"tool\";item.push(content);contentDetected=true}}}}if(!contentDetected){const text=JSON.stringify(inputs);item.push({parts:[{text}],role:\"tool\"})}return{item}};",
                "name": "fn_7",
                "raw": true
              },
              "metadata": {
                "title": "Format results",
                "description": "Formatting results"
              }
            },
            {
              "id": "fn-6",
              "type": "runJavascript",
              "configuration": {
                "code": "const fn_6 = result=>{return{result}};",
                "name": "fn_6",
                "raw": true
              },
              "metadata": {
                "title": "Pack results",
                "description": "Packing results"
              }
            },
            {
              "id": "fn-4",
              "type": "runJavascript",
              "configuration": {
                "code": "const fn_4 = ({item})=>{const{$flags}=item;return{flags:$flags}};",
                "name": "fn_4",
                "raw": true
              },
              "metadata": {
                "title": "Get flags",
                "description": "Getting flags for the board invocation"
              }
            },
            {
              "id": "invoke-5",
              "type": "invoke",
              "configuration": {},
              "metadata": {
                "title": "Invoke board",
                "description": "Invoking the board with unpacked arguments"
              }
            },
            {
              "id": "input-1",
              "type": "input",
              "configuration": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "item": {
                      "type": "string",
                      "title": "item"
                    }
                  },
                  "required": [
                    "item"
                  ]
                }
              }
            },
            {
              "id": "fn-3",
              "type": "runJavascript",
              "configuration": {
                "code": "const fn_3 = ({item})=>{const{$flags,...result}=item;return result};",
                "name": "fn_3",
                "raw": true
              },
              "metadata": {
                "title": "Unpack args",
                "description": "Unpacking board arguments"
              }
            }
          ],
          "graphs": {}
        }
      }
    },
    "worker": {
      "title": "Worker",
      "description": "The essential Agent building block",
      "version": "0.0.1",
      "metadata": {
        "deprecated": true
      },
      "edges": [
        {
          "from": "input-0",
          "to": "runJavascript-1",
          "out": "context",
          "in": "context"
        },
        {
          "from": "input-0",
          "to": "runJavascript-1",
          "out": "instruction",
          "in": "instruction"
        },
        {
          "from": "input-0",
          "to": "text-0",
          "out": "stopSequences",
          "in": "stopSequences"
        },
        {
          "from": "runJavascript-0",
          "to": "output-0",
          "out": "context",
          "in": "context"
        },
        {
          "from": "runJavascript-1",
          "to": "runJavascript-0",
          "out": "context",
          "in": "context"
        },
        {
          "from": "runJavascript-1",
          "to": "text-0",
          "out": "context",
          "in": "context"
        },
        {
          "from": "text-0",
          "to": "output-0",
          "out": "text",
          "in": "text"
        },
        {
          "from": "text-0",
          "to": "runJavascript-0",
          "out": "context",
          "in": "generated"
        }
      ],
      "nodes": [
        {
          "id": "input-0",
          "type": "input",
          "configuration": {
            "schema": {
              "type": "object",
              "properties": {
                "context": {
                  "type": "array",
                  "title": "Context",
                  "examples": [
                    "[\n  {\n    \"role\": \"user\",\n    \"parts\": [\n      {\n        \"text\": \"the universe within us\"\n      }\n    ]\n  }\n]"
                  ],
                  "items": {
                    "type": "object",
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string",
                            "enum": [
                              "user",
                              "model",
                              "tool"
                            ]
                          },
                          "parts": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "text": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "text"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "functionCall": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "args": {
                                          "type": "object",
                                          "properties": {},
                                          "required": [],
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "required": [
                                        "name",
                                        "args"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "required": [
                                    "functionCall"
                                  ],
                                  "additionalProperties": false
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "parts"
                        ],
                        "additionalProperties": false,
                        "behavior": [
                          "llm-content"
                        ]
                      },
                      {
                        "type": "object",
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "looper"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "max": {
                                    "type": "number"
                                  },
                                  "todo": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "task": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "task"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "doneMarker": {
                                    "type": "string"
                                  },
                                  "done": {
                                    "type": "boolean"
                                  },
                                  "appendLast": {
                                    "type": "boolean"
                                  },
                                  "returnLast": {
                                    "type": "boolean"
                                  },
                                  "next": {
                                    "type": "string"
                                  }
                                },
                                "required": [],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "split"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "start",
                                      "next",
                                      "end"
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          }
                        ]
                      }
                    ],
                    "behavior": [
                      "llm-content"
                    ]
                  }
                },
                "instruction": {
                  "type": "string",
                  "behavior": [
                    "config"
                  ],
                  "title": "Instruction",
                  "examples": [
                    "You are a brilliant poet who specializes in two-line rhyming poems.\nGiven any topic, you can quickly whip up a two-line rhyming poem about it.\nLook at the topic below and do your magic"
                  ],
                  "format": "multiline"
                },
                "stopSequences": {
                  "type": "array",
                  "behavior": [
                    "config"
                  ],
                  "title": "Stop Sequences",
                  "default": "[]",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "context",
                "instruction"
              ]
            }
          }
        },
        {
          "id": "output-0",
          "type": "output",
          "configuration": {
            "schema": {
              "type": "object",
              "properties": {
                "context": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string",
                            "enum": [
                              "user",
                              "model",
                              "tool"
                            ]
                          },
                          "parts": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "text": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "text"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "functionCall": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "args": {
                                          "type": "object",
                                          "properties": {},
                                          "required": [],
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "required": [
                                        "name",
                                        "args"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "required": [
                                    "functionCall"
                                  ],
                                  "additionalProperties": false
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "parts"
                        ],
                        "additionalProperties": false,
                        "behavior": [
                          "llm-content"
                        ]
                      },
                      {
                        "type": "object",
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "looper"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "max": {
                                    "type": "number"
                                  },
                                  "todo": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "task": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "task"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "doneMarker": {
                                    "type": "string"
                                  },
                                  "done": {
                                    "type": "boolean"
                                  },
                                  "appendLast": {
                                    "type": "boolean"
                                  },
                                  "returnLast": {
                                    "type": "boolean"
                                  },
                                  "next": {
                                    "type": "string"
                                  }
                                },
                                "required": [],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "split"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "start",
                                      "next",
                                      "end"
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          }
                        ]
                      }
                    ],
                    "behavior": [
                      "llm-content"
                    ]
                  }
                },
                "text": {
                  "type": "string",
                  "title": "Text",
                  "description": "The generated text"
                }
              },
              "required": [
                "context",
                "text"
              ]
            }
          }
        },
        {
          "id": "runJavascript-0",
          "type": "runJavascript",
          "configuration": {
            "code": "const run = ({context:context2,generated})=>{if(!context2)throw new Error(\"Context is required\");return{context:[...context2,generated]}};",
            "inputSchema": {
              "type": "object",
              "properties": {
                "context": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string",
                            "enum": [
                              "user",
                              "model",
                              "tool"
                            ]
                          },
                          "parts": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "text": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "text"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "functionCall": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "args": {
                                          "type": "object",
                                          "properties": {},
                                          "required": [],
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "required": [
                                        "name",
                                        "args"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "required": [
                                    "functionCall"
                                  ],
                                  "additionalProperties": false
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "parts"
                        ],
                        "additionalProperties": false,
                        "behavior": [
                          "llm-content"
                        ]
                      },
                      {
                        "type": "object",
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "looper"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "max": {
                                    "type": "number"
                                  },
                                  "todo": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "task": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "task"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "doneMarker": {
                                    "type": "string"
                                  },
                                  "done": {
                                    "type": "boolean"
                                  },
                                  "appendLast": {
                                    "type": "boolean"
                                  },
                                  "returnLast": {
                                    "type": "boolean"
                                  },
                                  "next": {
                                    "type": "string"
                                  }
                                },
                                "required": [],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "split"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "start",
                                      "next",
                                      "end"
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          }
                        ]
                      }
                    ],
                    "behavior": [
                      "llm-content"
                    ]
                  }
                },
                "generated": {
                  "type": [
                    "array",
                    "boolean",
                    "null",
                    "number",
                    "object",
                    "string"
                  ]
                }
              }
            },
            "name": "run",
            "outputSchema": {
              "type": "object",
              "properties": {
                "context": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string",
                            "enum": [
                              "user",
                              "model",
                              "tool"
                            ]
                          },
                          "parts": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "text": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "text"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "functionCall": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "args": {
                                          "type": "object",
                                          "properties": {},
                                          "required": [],
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "required": [
                                        "name",
                                        "args"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "required": [
                                    "functionCall"
                                  ],
                                  "additionalProperties": false
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "parts"
                        ],
                        "additionalProperties": false,
                        "behavior": [
                          "llm-content"
                        ]
                      },
                      {
                        "type": "object",
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "looper"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "max": {
                                    "type": "number"
                                  },
                                  "todo": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "task": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "task"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "doneMarker": {
                                    "type": "string"
                                  },
                                  "done": {
                                    "type": "boolean"
                                  },
                                  "appendLast": {
                                    "type": "boolean"
                                  },
                                  "returnLast": {
                                    "type": "boolean"
                                  },
                                  "next": {
                                    "type": "string"
                                  }
                                },
                                "required": [],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "split"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "start",
                                      "next",
                                      "end"
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          }
                        ]
                      }
                    ],
                    "behavior": [
                      "llm-content"
                    ]
                  }
                }
              }
            },
            "raw": true
          },
          "metadata": {
            "title": "Assemble Context"
          }
        },
        {
          "id": "runJavascript-1",
          "type": "runJavascript",
          "configuration": {
            "code": "const run = ({context:context2,instruction:instruction2})=>{if(typeof context2===\"string\"){context2=[{role:\"user\",parts:[{text:context2}]}]}const list=context2??[];if(list.length>0){const last=list[list.length-1];if(last.role===\"user\"){last.parts.unshift({text:instruction2});return{context:list}}}return{context:[...list,{role:\"user\",parts:[{text:instruction2}]}]}};",
            "inputSchema": {
              "type": "object",
              "properties": {
                "context": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string",
                            "enum": [
                              "user",
                              "model",
                              "tool"
                            ]
                          },
                          "parts": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "text": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "text"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "functionCall": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "args": {
                                          "type": "object",
                                          "properties": {},
                                          "required": [],
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "required": [
                                        "name",
                                        "args"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "required": [
                                    "functionCall"
                                  ],
                                  "additionalProperties": false
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "parts"
                        ],
                        "additionalProperties": false,
                        "behavior": [
                          "llm-content"
                        ]
                      },
                      {
                        "type": "object",
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "looper"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "max": {
                                    "type": "number"
                                  },
                                  "todo": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "task": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "task"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "doneMarker": {
                                    "type": "string"
                                  },
                                  "done": {
                                    "type": "boolean"
                                  },
                                  "appendLast": {
                                    "type": "boolean"
                                  },
                                  "returnLast": {
                                    "type": "boolean"
                                  },
                                  "next": {
                                    "type": "string"
                                  }
                                },
                                "required": [],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "split"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "start",
                                      "next",
                                      "end"
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          }
                        ]
                      }
                    ],
                    "behavior": [
                      "llm-content"
                    ]
                  }
                },
                "instruction": {
                  "type": "string",
                  "format": "multiline",
                  "behavior": [
                    "config"
                  ]
                }
              }
            },
            "name": "run",
            "outputSchema": {
              "type": "object",
              "properties": {
                "context": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string",
                            "enum": [
                              "user",
                              "model",
                              "tool"
                            ]
                          },
                          "parts": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "text": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "text"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "functionCall": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "args": {
                                          "type": "object",
                                          "properties": {},
                                          "required": [],
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "required": [
                                        "name",
                                        "args"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "required": [
                                    "functionCall"
                                  ],
                                  "additionalProperties": false
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "parts"
                        ],
                        "additionalProperties": false,
                        "behavior": [
                          "llm-content"
                        ]
                      },
                      {
                        "type": "object",
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "looper"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "max": {
                                    "type": "number"
                                  },
                                  "todo": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "task": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "task"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "doneMarker": {
                                    "type": "string"
                                  },
                                  "done": {
                                    "type": "boolean"
                                  },
                                  "appendLast": {
                                    "type": "boolean"
                                  },
                                  "returnLast": {
                                    "type": "boolean"
                                  },
                                  "next": {
                                    "type": "string"
                                  }
                                },
                                "required": [],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "split"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "start",
                                      "next",
                                      "end"
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          }
                        ]
                      }
                    ],
                    "behavior": [
                      "llm-content"
                    ]
                  }
                }
              }
            },
            "raw": true
          },
          "metadata": {
            "title": "Build Context"
          }
        },
        {
          "id": "text-0",
          "type": "text",
          "configuration": {}
        }
      ]
    },
    "looper": {
      "title": "Looper",
      "description": "A worker whose job it is to repeat the same thing over and over, until some condition is met or the max count of repetitions is reached.",
      "version": "0.0.1",
      "metadata": {
        "icon": "laps",
        "help": {
          "url": "https://breadboard-ai.github.io/breadboard/docs/kits/agents/#looper"
        }
      },
      "edges": [
        {
          "from": "cleanUp",
          "to": "exitOutput",
          "out": "context",
          "in": "done"
        },
        {
          "from": "input-1",
          "to": "planReader",
          "out": "context",
          "in": "context"
        },
        {
          "from": "input-1",
          "to": "progressReader",
          "out": "context",
          "in": "context"
        },
        {
          "from": "input-1",
          "to": "taskAdder",
          "out": "task",
          "in": "toAdd"
        },
        {
          "from": "modelInput",
          "to": "planGenerator",
          "out": "model",
          "in": "model"
        },
        {
          "from": "planGenerator",
          "to": "validateJson",
          "out": "text",
          "in": "json"
        },
        {
          "from": "planReader",
          "to": "cleanUp",
          "out": "done",
          "in": "context"
        },
        {
          "from": "planReader",
          "to": "output-2",
          "out": "context",
          "in": "loop"
        },
        {
          "from": "progressReader",
          "to": "planReader",
          "out": "progress",
          "in": "progress"
        },
        {
          "from": "progressReader",
          "to": "taskAdder",
          "out": "context",
          "in": "context"
        },
        {
          "from": "taskAdder",
          "to": "planGenerator",
          "out": "context",
          "in": "context"
        },
        {
          "from": "validateJson",
          "to": "planReader",
          "out": "json",
          "in": "progress"
        }
      ],
      "nodes": [
        {
          "id": "input-1",
          "type": "input",
          "configuration": {
            "schema": {
              "type": "object",
              "properties": {
                "context": {
                  "type": "array",
                  "title": "Context in",
                  "description": "Incoming conversation context",
                  "default": "[]",
                  "items": {
                    "type": "object",
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string",
                            "enum": [
                              "user",
                              "model",
                              "tool"
                            ]
                          },
                          "parts": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "text": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "text"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "functionCall": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "args": {
                                          "type": "object",
                                          "properties": {},
                                          "required": [],
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "required": [
                                        "name",
                                        "args"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "required": [
                                    "functionCall"
                                  ],
                                  "additionalProperties": false
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "parts"
                        ],
                        "additionalProperties": false,
                        "behavior": [
                          "llm-content"
                        ]
                      },
                      {
                        "type": "object",
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "looper"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "max": {
                                    "type": "number"
                                  },
                                  "todo": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "task": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "task"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "doneMarker": {
                                    "type": "string"
                                  },
                                  "done": {
                                    "type": "boolean"
                                  },
                                  "appendLast": {
                                    "type": "boolean"
                                  },
                                  "returnLast": {
                                    "type": "boolean"
                                  },
                                  "next": {
                                    "type": "string"
                                  }
                                },
                                "required": [],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "split"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "start",
                                      "next",
                                      "end"
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          }
                        ]
                      }
                    ],
                    "behavior": [
                      "llm-content"
                    ]
                  }
                },
                "task": {
                  "type": "object",
                  "behavior": [
                    "llm-content",
                    "config"
                  ],
                  "title": "Task",
                  "description": "The task to be used for loop planning",
                  "default": "{\n  \"parts\": []\n}",
                  "properties": {
                    "role": {
                      "type": "string",
                      "enum": [
                        "user",
                        "model",
                        "tool"
                      ]
                    },
                    "parts": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "text": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "text"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "functionCall": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "args": {
                                    "type": "object",
                                    "properties": {},
                                    "required": [],
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "required": [
                                  "name",
                                  "args"
                                ],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "functionCall"
                            ],
                            "additionalProperties": false
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "parts"
                  ],
                  "additionalProperties": false
                }
              },
              "required": []
            }
          },
          "metadata": {}
        },
        {
          "id": "modelInput",
          "type": "input",
          "configuration": {
            "schema": {
              "type": "object",
              "properties": {
                "model": {
                  "type": "string",
                  "behavior": [
                    "config"
                  ],
                  "title": "Model",
                  "description": "Choose the model to use for this looper.",
                  "default": "gemini-1.5-flash-latest",
                  "examples": [
                    "gemini-1.5-flash-latest"
                  ],
                  "enum": [
                    "gemini-1.5-flash-latest",
                    "gemini-1.5-pro-latest",
                    "gemini-1.5-pro-exp-0801",
                    "gemini-1.5-pro-exp-0827",
                    "gemini-1.5-flash-8b-exp-0827",
                    "gemini-1.5-pro-exp-0827"
                  ]
                }
              },
              "required": []
            }
          },
          "metadata": {
            "title": "Model Input"
          }
        },
        {
          "id": "exitOutput",
          "type": "output",
          "configuration": {
            "schema": {
              "type": "object",
              "properties": {
                "done": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string",
                            "enum": [
                              "user",
                              "model",
                              "tool"
                            ]
                          },
                          "parts": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "text": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "text"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "functionCall": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "args": {
                                          "type": "object",
                                          "properties": {},
                                          "required": [],
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "required": [
                                        "name",
                                        "args"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "required": [
                                    "functionCall"
                                  ],
                                  "additionalProperties": false
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "parts"
                        ],
                        "additionalProperties": false,
                        "behavior": [
                          "llm-content"
                        ]
                      },
                      {
                        "type": "object",
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "looper"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "max": {
                                    "type": "number"
                                  },
                                  "todo": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "task": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "task"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "doneMarker": {
                                    "type": "string"
                                  },
                                  "done": {
                                    "type": "boolean"
                                  },
                                  "appendLast": {
                                    "type": "boolean"
                                  },
                                  "returnLast": {
                                    "type": "boolean"
                                  },
                                  "next": {
                                    "type": "string"
                                  }
                                },
                                "required": [],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "split"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "start",
                                      "next",
                                      "end"
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          }
                        ]
                      }
                    ],
                    "behavior": [
                      "llm-content"
                    ]
                  }
                }
              },
              "required": [
                "done"
              ]
            }
          },
          "metadata": {
            "title": "Exit"
          }
        },
        {
          "id": "output-2",
          "type": "output",
          "configuration": {
            "schema": {
              "type": "object",
              "properties": {
                "loop": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string",
                            "enum": [
                              "user",
                              "model",
                              "tool"
                            ]
                          },
                          "parts": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "text": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "text"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "functionCall": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "args": {
                                          "type": "object",
                                          "properties": {},
                                          "required": [],
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "required": [
                                        "name",
                                        "args"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "required": [
                                    "functionCall"
                                  ],
                                  "additionalProperties": false
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "parts"
                        ],
                        "additionalProperties": false,
                        "behavior": [
                          "llm-content"
                        ]
                      },
                      {
                        "type": "object",
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "looper"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "max": {
                                    "type": "number"
                                  },
                                  "todo": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "task": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "task"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "doneMarker": {
                                    "type": "string"
                                  },
                                  "done": {
                                    "type": "boolean"
                                  },
                                  "appendLast": {
                                    "type": "boolean"
                                  },
                                  "returnLast": {
                                    "type": "boolean"
                                  },
                                  "next": {
                                    "type": "string"
                                  }
                                },
                                "required": [],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "split"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "start",
                                      "next",
                                      "end"
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          }
                        ]
                      }
                    ],
                    "behavior": [
                      "llm-content"
                    ]
                  }
                }
              },
              "required": [
                "loop"
              ]
            }
          },
          "metadata": {}
        },
        {
          "id": "cleanUp",
          "type": "runJavascript",
          "configuration": {
            "code": "const cleanUp = ({context:context2})=>{if(!context2)throw new Error(\"Context is required\");return{context:context2.filter(item=>item.role!==\"$metadata\")}};",
            "inputSchema": {
              "type": "object",
              "properties": {
                "context": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string",
                            "enum": [
                              "user",
                              "model",
                              "tool"
                            ]
                          },
                          "parts": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "text": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "text"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "functionCall": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "args": {
                                          "type": "object",
                                          "properties": {},
                                          "required": [],
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "required": [
                                        "name",
                                        "args"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "required": [
                                    "functionCall"
                                  ],
                                  "additionalProperties": false
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "parts"
                        ],
                        "additionalProperties": false,
                        "behavior": [
                          "llm-content"
                        ]
                      },
                      {
                        "type": "object",
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "looper"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "max": {
                                    "type": "number"
                                  },
                                  "todo": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "task": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "task"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "doneMarker": {
                                    "type": "string"
                                  },
                                  "done": {
                                    "type": "boolean"
                                  },
                                  "appendLast": {
                                    "type": "boolean"
                                  },
                                  "returnLast": {
                                    "type": "boolean"
                                  },
                                  "next": {
                                    "type": "string"
                                  }
                                },
                                "required": [],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "split"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "start",
                                      "next",
                                      "end"
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          }
                        ]
                      }
                    ],
                    "behavior": [
                      "llm-content"
                    ]
                  }
                }
              }
            },
            "name": "cleanUp",
            "outputSchema": {
              "type": "object",
              "properties": {
                "context": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string",
                            "enum": [
                              "user",
                              "model",
                              "tool"
                            ]
                          },
                          "parts": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "text": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "text"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "functionCall": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "args": {
                                          "type": "object",
                                          "properties": {},
                                          "required": [],
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "required": [
                                        "name",
                                        "args"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "required": [
                                    "functionCall"
                                  ],
                                  "additionalProperties": false
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "parts"
                        ],
                        "additionalProperties": false,
                        "behavior": [
                          "llm-content"
                        ]
                      },
                      {
                        "type": "object",
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "looper"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "max": {
                                    "type": "number"
                                  },
                                  "todo": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "task": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "task"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "doneMarker": {
                                    "type": "string"
                                  },
                                  "done": {
                                    "type": "boolean"
                                  },
                                  "appendLast": {
                                    "type": "boolean"
                                  },
                                  "returnLast": {
                                    "type": "boolean"
                                  },
                                  "next": {
                                    "type": "string"
                                  }
                                },
                                "required": [],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "split"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "start",
                                      "next",
                                      "end"
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          }
                        ]
                      }
                    ],
                    "behavior": [
                      "llm-content"
                    ]
                  }
                }
              }
            },
            "raw": true
          },
          "metadata": {
            "title": "Clean up"
          }
        },
        {
          "id": "planGenerator",
          "type": "text",
          "configuration": {
            "responseMimeType": "application/json",
            "systemInstruction": "\nYou are to create a precise plan for a given job. This plan will be executed by others and your responsibility is to produce a plan that reflects the job.\n\nYour output must be a valid JSON of the following format:\n\n```json\n{\n  \"max\": \"number, optional. Specifies how many iterations to make. Useful when the job specifies the upper limit the number of items in the list.\",\n  \"todo\": [{\n    \"task\": \"string, The task description. Use action-oriented language, starting with a verb that fits the task.\"\n  }]\n  \"doneMarker\": \"string, optional. The marker that will be used by others to signal completion.\"\n  \"error\": \"string, optional. A description of why you're unable to create a plan\"\n}\n```\n\nThere are four kinds of jobs that you can make plans for.\n\n1) The indefinite job. These are useful when there is not a definite completion condition, and is usually formulated with words like \"indefinitely\" or \"forever\". In such cases, the plan will look like an object without a \"todo\" property, with \"max\" set to a very large number:\n\n```json\n{\n  \"max\": 100000000\n}\n```\n\n2) The step-by-step job. These are for situations when a distinct, known number of tasks can be discerned from the job. For example, when asked to write chapters of a book following an outline, there's a clear list of tasks that can be discerned (one \"Write <chapter title>\" per chapter).\n\nA plan for this kind of job will look like an object with \"todo\" items:\n\n```json\n{\n  \"todo\": [\n    { \"task\": \"<action-oriented description of task 1\" },\n    { \"task\": \"<action-oriented description of task 2\" },\n    { \"task\": \"<action-oriented description of task 3\" }\n  ]\n}\n```\nIf the job includes a limit on how many tasks to produce, use the \"max\" property to indicate that. For instance, if the job contains three items that can be discerned, but asks to only do two of them:\n\n```json\n{\n  \"max:\" 2,\n  \"todo\": [\n    { \"task\": \"<action-oriented description of task 1\" },\n    { \"task\": \"<action-oriented description of task 2\" },\n    { \"task\": \"<action-oriented description of task 3\" }\n  ]\n}\n```\n\n3) Just repeat the steps job. These jobs do not have a distinct tasks, but rather just a number of steps to repeat. In this case, omit the \"todo\" and just use \"max\" property:\n\n```json\n{\n  \"max\": 4\n}\n```\n\n4) The job where the completion is signaled by others. These are the types of jobs where the number of iterations or the exact steps are unknown, and the\ncompletion signal is issued by those who are executing the individual steps. In such cases, use the \"doneMarker\" property and use the marker specified:\n\n```json\n{\n  \"doneMarker\": \"<the marker that will be used to signal completion>\"\n}\n```\n\nCommon markers are \"##STOP##\" or \"##DONE##\", but could be different depending on a job. This type of the job is mutually exclusive with the step-by-step type, so the \"todo\" and \"doneMarker\" may never be specified together.\n\nWhen you are unable to create plan from the job, reply with:\n\n```json\n{\n  \"error\": \"<description of why you're unable to create a plan>\"\n}\n```\n\n"
          },
          "metadata": {
            "title": "Generating Plan"
          }
        },
        {
          "id": "planReader",
          "type": "runJavascript",
          "configuration": {
            "code": "const planReader = ({context:context2,progress})=>{const plans=Array.isArray(progress)?progress:[progress];const existing=Array.isArray(context2)?context2:[context2];if(!plans||!plans.length){throw new Error(\"Plan is required for Looper to function.\")}try{const current=plans[0];if(current.done){return{done:existing}}const originalPlan=plans[plans.length-1];let max=originalPlan.max;const doneMarker=originalPlan.doneMarker;if(!max){const planItems=originalPlan.todo?.length;if(planItems){max=planItems+1}else{max=Infinity}}const contents=structuredClone(existing);const count=plans.length;if(count>=max){return{done:existing}}if(current.todo&&Array.isArray(current.todo)){const next=current.todo?.shift();if(!next){return{done:existing}}delete current.doneMarker;contents.push({role:\"$metadata\",type:\"looper\",data:{...current,next:next.task}});return{context:contents}}else if(doneMarker){contents.push({role:\"$metadata\",type:\"looper\",data:{doneMarker}});return{context:contents}}else if(max){const count2=plans.length;if(count2>=max){return{done:existing}}contents.push({role:\"$metadata\",type:\"looper\",data:{max}});return{context:contents}}return{done:existing}}catch(e){const error=e;throw new Error(`Invalid plan, unable to proceed: ${error.message}`)}};",
            "inputSchema": {
              "type": "object",
              "properties": {
                "context": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string",
                            "enum": [
                              "user",
                              "model",
                              "tool"
                            ]
                          },
                          "parts": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "text": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "text"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "functionCall": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "args": {
                                          "type": "object",
                                          "properties": {},
                                          "required": [],
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "required": [
                                        "name",
                                        "args"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "required": [
                                    "functionCall"
                                  ],
                                  "additionalProperties": false
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "parts"
                        ],
                        "additionalProperties": false,
                        "behavior": [
                          "llm-content"
                        ]
                      },
                      {
                        "type": "object",
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "looper"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "max": {
                                    "type": "number"
                                  },
                                  "todo": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "task": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "task"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "doneMarker": {
                                    "type": "string"
                                  },
                                  "done": {
                                    "type": "boolean"
                                  },
                                  "appendLast": {
                                    "type": "boolean"
                                  },
                                  "returnLast": {
                                    "type": "boolean"
                                  },
                                  "next": {
                                    "type": "string"
                                  }
                                },
                                "required": [],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "split"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "start",
                                      "next",
                                      "end"
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          }
                        ]
                      }
                    ],
                    "behavior": [
                      "llm-content"
                    ]
                  }
                },
                "progress": {
                  "anyOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "max": {
                            "type": "number"
                          },
                          "todo": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "task": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "task"
                              ],
                              "additionalProperties": false
                            }
                          },
                          "doneMarker": {
                            "type": "string"
                          },
                          "done": {
                            "type": "boolean"
                          },
                          "appendLast": {
                            "type": "boolean"
                          },
                          "returnLast": {
                            "type": "boolean"
                          },
                          "next": {
                            "type": "string"
                          }
                        },
                        "required": [],
                        "additionalProperties": false
                      }
                    },
                    {
                      "type": [
                        "array",
                        "boolean",
                        "null",
                        "number",
                        "object",
                        "string"
                      ]
                    }
                  ]
                }
              }
            },
            "name": "planReader",
            "outputSchema": {
              "type": "object",
              "properties": {
                "context": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string",
                            "enum": [
                              "user",
                              "model",
                              "tool"
                            ]
                          },
                          "parts": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "text": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "text"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "functionCall": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "args": {
                                          "type": "object",
                                          "properties": {},
                                          "required": [],
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "required": [
                                        "name",
                                        "args"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "required": [
                                    "functionCall"
                                  ],
                                  "additionalProperties": false
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "parts"
                        ],
                        "additionalProperties": false,
                        "behavior": [
                          "llm-content"
                        ]
                      },
                      {
                        "type": "object",
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "looper"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "max": {
                                    "type": "number"
                                  },
                                  "todo": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "task": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "task"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "doneMarker": {
                                    "type": "string"
                                  },
                                  "done": {
                                    "type": "boolean"
                                  },
                                  "appendLast": {
                                    "type": "boolean"
                                  },
                                  "returnLast": {
                                    "type": "boolean"
                                  },
                                  "next": {
                                    "type": "string"
                                  }
                                },
                                "required": [],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "split"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "start",
                                      "next",
                                      "end"
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          }
                        ]
                      }
                    ],
                    "behavior": [
                      "llm-content"
                    ]
                  }
                },
                "done": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string",
                            "enum": [
                              "user",
                              "model",
                              "tool"
                            ]
                          },
                          "parts": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "text": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "text"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "functionCall": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "args": {
                                          "type": "object",
                                          "properties": {},
                                          "required": [],
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "required": [
                                        "name",
                                        "args"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "required": [
                                    "functionCall"
                                  ],
                                  "additionalProperties": false
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "parts"
                        ],
                        "additionalProperties": false,
                        "behavior": [
                          "llm-content"
                        ]
                      },
                      {
                        "type": "object",
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "looper"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "max": {
                                    "type": "number"
                                  },
                                  "todo": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "task": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "task"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "doneMarker": {
                                    "type": "string"
                                  },
                                  "done": {
                                    "type": "boolean"
                                  },
                                  "appendLast": {
                                    "type": "boolean"
                                  },
                                  "returnLast": {
                                    "type": "boolean"
                                  },
                                  "next": {
                                    "type": "string"
                                  }
                                },
                                "required": [],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "split"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "start",
                                      "next",
                                      "end"
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          }
                        ]
                      }
                    ],
                    "behavior": [
                      "llm-content"
                    ]
                  }
                }
              }
            },
            "raw": true
          },
          "metadata": {
            "title": "Read Plan"
          }
        },
        {
          "id": "progressReader",
          "type": "runJavascript",
          "configuration": {
            "code": "const progressReader = ({context,forkOutputs})=>{const fork=forkOutputs;const existing=Array.isArray(context)?context:[context];const progress=[];for(let i=existing.length-1;i>=0;i--){const item=existing[i];if(item.role===\"$metadata\"&&item.type===\"looper\"){progress.push(item.data)}}if(fork){if(progress.length){return{progress}}else{return{context}}}else{return{context,progress}}};",
            "forkOutputs": true,
            "inputSchema": {
              "type": "object",
              "properties": {
                "context": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string",
                            "enum": [
                              "user",
                              "model",
                              "tool"
                            ]
                          },
                          "parts": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "text": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "text"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "functionCall": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "args": {
                                          "type": "object",
                                          "properties": {},
                                          "required": [],
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "required": [
                                        "name",
                                        "args"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "required": [
                                    "functionCall"
                                  ],
                                  "additionalProperties": false
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "parts"
                        ],
                        "additionalProperties": false,
                        "behavior": [
                          "llm-content"
                        ]
                      },
                      {
                        "type": "object",
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "looper"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "max": {
                                    "type": "number"
                                  },
                                  "todo": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "task": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "task"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "doneMarker": {
                                    "type": "string"
                                  },
                                  "done": {
                                    "type": "boolean"
                                  },
                                  "appendLast": {
                                    "type": "boolean"
                                  },
                                  "returnLast": {
                                    "type": "boolean"
                                  },
                                  "next": {
                                    "type": "string"
                                  }
                                },
                                "required": [],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "split"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "start",
                                      "next",
                                      "end"
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          }
                        ]
                      }
                    ],
                    "behavior": [
                      "llm-content"
                    ]
                  }
                },
                "forkOutputs": {
                  "type": "boolean"
                }
              }
            },
            "name": "progressReader",
            "outputSchema": {
              "type": "object",
              "properties": {
                "progress": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "max": {
                        "type": "number"
                      },
                      "todo": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "task": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "task"
                          ],
                          "additionalProperties": false
                        }
                      },
                      "doneMarker": {
                        "type": "string"
                      },
                      "done": {
                        "type": "boolean"
                      },
                      "appendLast": {
                        "type": "boolean"
                      },
                      "returnLast": {
                        "type": "boolean"
                      },
                      "next": {
                        "type": "string"
                      }
                    },
                    "required": [],
                    "additionalProperties": false
                  }
                },
                "context": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string",
                            "enum": [
                              "user",
                              "model",
                              "tool"
                            ]
                          },
                          "parts": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "text": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "text"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "functionCall": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "args": {
                                          "type": "object",
                                          "properties": {},
                                          "required": [],
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "required": [
                                        "name",
                                        "args"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "required": [
                                    "functionCall"
                                  ],
                                  "additionalProperties": false
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "parts"
                        ],
                        "additionalProperties": false,
                        "behavior": [
                          "llm-content"
                        ]
                      },
                      {
                        "type": "object",
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "looper"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "max": {
                                    "type": "number"
                                  },
                                  "todo": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "task": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "task"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "doneMarker": {
                                    "type": "string"
                                  },
                                  "done": {
                                    "type": "boolean"
                                  },
                                  "appendLast": {
                                    "type": "boolean"
                                  },
                                  "returnLast": {
                                    "type": "boolean"
                                  },
                                  "next": {
                                    "type": "string"
                                  }
                                },
                                "required": [],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "split"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "start",
                                      "next",
                                      "end"
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          }
                        ]
                      }
                    ],
                    "behavior": [
                      "llm-content"
                    ]
                  }
                }
              }
            },
            "raw": true
          },
          "metadata": {
            "title": "Read progress so far"
          }
        },
        {
          "id": "taskAdder",
          "type": "runJavascript",
          "configuration": {
            "code": "const taskAdder = ({context,toAdd})=>{if(!context)throw new Error(\"Context is required\");const existing=Array.isArray(context)?context:[context];const incoming=toAdd;if(!incoming.parts){const containsUserRole=existing.filter(item=>item.role!==\"model\"&&item.role!==\"$metadata\").length>0;if(!containsUserRole){return{context:[...existing,{role:\"user\",parts:[{text:\"Do your magic\"}]}]}}return{context:existing}}if(!incoming.role){incoming.role=\"user\"}const last=existing[existing.length-1];if(!last){return{context:[incoming]}}if(last.role!==incoming.role){return{context:[...existing,incoming]}}else{const result=structuredClone(existing);const index=result.length-1;result[index].parts.push(...incoming.parts);return{context:result}}};",
            "inputSchema": {
              "type": "object",
              "properties": {
                "context": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string",
                            "enum": [
                              "user",
                              "model",
                              "tool"
                            ]
                          },
                          "parts": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "text": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "text"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "functionCall": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "args": {
                                          "type": "object",
                                          "properties": {},
                                          "required": [],
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "required": [
                                        "name",
                                        "args"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "required": [
                                    "functionCall"
                                  ],
                                  "additionalProperties": false
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "parts"
                        ],
                        "additionalProperties": false,
                        "behavior": [
                          "llm-content"
                        ]
                      },
                      {
                        "type": "object",
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "looper"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "max": {
                                    "type": "number"
                                  },
                                  "todo": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "task": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "task"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "doneMarker": {
                                    "type": "string"
                                  },
                                  "done": {
                                    "type": "boolean"
                                  },
                                  "appendLast": {
                                    "type": "boolean"
                                  },
                                  "returnLast": {
                                    "type": "boolean"
                                  },
                                  "next": {
                                    "type": "string"
                                  }
                                },
                                "required": [],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "split"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "start",
                                      "next",
                                      "end"
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          }
                        ]
                      }
                    ],
                    "behavior": [
                      "llm-content"
                    ]
                  }
                },
                "toAdd": {
                  "type": "object",
                  "properties": {
                    "role": {
                      "type": "string",
                      "enum": [
                        "user",
                        "model",
                        "tool"
                      ]
                    },
                    "parts": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "text": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "text"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "functionCall": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "args": {
                                    "type": "object",
                                    "properties": {},
                                    "required": [],
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "required": [
                                  "name",
                                  "args"
                                ],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "functionCall"
                            ],
                            "additionalProperties": false
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "parts"
                  ],
                  "additionalProperties": false,
                  "behavior": [
                    "llm-content",
                    "config"
                  ]
                }
              }
            },
            "name": "taskAdder",
            "outputSchema": {
              "type": "object",
              "properties": {
                "context": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string",
                            "enum": [
                              "user",
                              "model",
                              "tool"
                            ]
                          },
                          "parts": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "text": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "text"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "functionCall": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "args": {
                                          "type": "object",
                                          "properties": {},
                                          "required": [],
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "required": [
                                        "name",
                                        "args"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "required": [
                                    "functionCall"
                                  ],
                                  "additionalProperties": false
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "parts"
                        ],
                        "additionalProperties": false,
                        "behavior": [
                          "llm-content"
                        ]
                      },
                      {
                        "type": "object",
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "looper"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "max": {
                                    "type": "number"
                                  },
                                  "todo": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "task": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "task"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "doneMarker": {
                                    "type": "string"
                                  },
                                  "done": {
                                    "type": "boolean"
                                  },
                                  "appendLast": {
                                    "type": "boolean"
                                  },
                                  "returnLast": {
                                    "type": "boolean"
                                  },
                                  "next": {
                                    "type": "string"
                                  }
                                },
                                "required": [],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "split"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "start",
                                      "next",
                                      "end"
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          }
                        ]
                      }
                    ],
                    "behavior": [
                      "llm-content"
                    ]
                  }
                }
              }
            },
            "raw": true
          },
          "metadata": {
            "title": "Add Task"
          }
        },
        {
          "id": "validateJson",
          "type": "validateJson",
          "configuration": {
            "schema": {
              "type": "object",
              "properties": {
                "max": {
                  "type": "number",
                  "description": "Maximum iterations to make, optional. Default is infinity"
                },
                "todo": {
                  "type": "array",
                  "description": "Items in the plan, optional. Use this if the plan contains a definite, concrete list of items",
                  "items": {
                    "type": "object",
                    "description": "The object that represent an item in the plan",
                    "properties": {
                      "task": {
                        "type": "string",
                        "description": "The task description. Use action-oriented language, starting with a verb that fits the task"
                      }
                    }
                  }
                },
                "doneMarker": {
                  "type": "string",
                  "description": "The marker that will be used by others to signal completion of the job."
                },
                "error": {
                  "type": "string",
                  "description": "Describe the reason why the plan generation failed"
                }
              }
            }
          },
          "metadata": {
            "title": "Validate Plan"
          }
        }
      ]
    },
    "joiner": {
      "title": "Joiner",
      "description": "Joins two or more worker contexts into one. Great for combining results of multiple workers.",
      "version": "0.0.1",
      "metadata": {
        "icon": "merge-type",
        "help": {
          "url": "https://breadboard-ai.github.io/breadboard/docs/kits/agents/#joiner"
        }
      },
      "edges": [
        {
          "from": "input-0",
          "to": "runJavascript-0",
          "out": "*",
          "in": ""
        },
        {
          "from": "input-0",
          "to": "runJavascript-0",
          "out": "merge",
          "in": "merge"
        },
        {
          "from": "runJavascript-0",
          "to": "output-0",
          "out": "context",
          "in": "context"
        }
      ],
      "nodes": [
        {
          "id": "input-0",
          "type": "input",
          "configuration": {
            "schema": {
              "type": "object",
              "properties": {
                "merge": {
                  "type": "boolean",
                  "behavior": [
                    "config"
                  ],
                  "title": "Merge Contexts",
                  "description": "Merge the last items of all incoming conversation into one.",
                  "default": "false"
                }
              },
              "required": [],
              "additionalProperties": {
                "type": "object",
                "behavior": [
                  "llm-content"
                ],
                "anyOf": [
                  {
                    "type": "object",
                    "properties": {
                      "role": {
                        "type": "string",
                        "enum": [
                          "user",
                          "model",
                          "tool"
                        ]
                      },
                      "parts": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "anyOf": [
                            {
                              "type": "object",
                              "properties": {
                                "text": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "text"
                              ],
                              "additionalProperties": false
                            },
                            {
                              "type": "object",
                              "properties": {
                                "functionCall": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    },
                                    "args": {
                                      "type": "object",
                                      "properties": {},
                                      "required": [],
                                      "additionalProperties": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "required": [
                                    "name",
                                    "args"
                                  ],
                                  "additionalProperties": false
                                }
                              },
                              "required": [
                                "functionCall"
                              ],
                              "additionalProperties": false
                            }
                          ]
                        }
                      }
                    },
                    "required": [
                      "parts"
                    ],
                    "additionalProperties": false,
                    "behavior": [
                      "llm-content"
                    ]
                  },
                  {
                    "type": "object",
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string",
                            "enum": [
                              "$metadata"
                            ]
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "looper"
                            ]
                          },
                          "data": {
                            "type": "object",
                            "properties": {
                              "max": {
                                "type": "number"
                              },
                              "todo": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "task": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "task"
                                  ],
                                  "additionalProperties": false
                                }
                              },
                              "doneMarker": {
                                "type": "string"
                              },
                              "done": {
                                "type": "boolean"
                              },
                              "appendLast": {
                                "type": "boolean"
                              },
                              "returnLast": {
                                "type": "boolean"
                              },
                              "next": {
                                "type": "string"
                              }
                            },
                            "required": [],
                            "additionalProperties": false
                          }
                        },
                        "required": [
                          "role",
                          "type",
                          "data"
                        ],
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string",
                            "enum": [
                              "$metadata"
                            ]
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "split"
                            ]
                          },
                          "data": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "start",
                                  "next",
                                  "end"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "type",
                              "id"
                            ],
                            "additionalProperties": false
                          }
                        },
                        "required": [
                          "role",
                          "type",
                          "data"
                        ],
                        "additionalProperties": false
                      }
                    ]
                  }
                ]
              }
            }
          }
        },
        {
          "id": "output-0",
          "type": "output",
          "configuration": {
            "schema": {
              "type": "object",
              "properties": {
                "context": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string",
                            "enum": [
                              "user",
                              "model",
                              "tool"
                            ]
                          },
                          "parts": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "text": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "text"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "functionCall": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "args": {
                                          "type": "object",
                                          "properties": {},
                                          "required": [],
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "required": [
                                        "name",
                                        "args"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "required": [
                                    "functionCall"
                                  ],
                                  "additionalProperties": false
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "parts"
                        ],
                        "additionalProperties": false,
                        "behavior": [
                          "llm-content"
                        ]
                      },
                      {
                        "type": "object",
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "looper"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "max": {
                                    "type": "number"
                                  },
                                  "todo": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "task": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "task"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "doneMarker": {
                                    "type": "string"
                                  },
                                  "done": {
                                    "type": "boolean"
                                  },
                                  "appendLast": {
                                    "type": "boolean"
                                  },
                                  "returnLast": {
                                    "type": "boolean"
                                  },
                                  "next": {
                                    "type": "string"
                                  }
                                },
                                "required": [],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "split"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "start",
                                      "next",
                                      "end"
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          }
                        ]
                      }
                    ],
                    "behavior": [
                      "llm-content"
                    ]
                  },
                  "title": "Context out"
                }
              },
              "required": [
                "context"
              ]
            }
          }
        },
        {
          "id": "runJavascript-0",
          "type": "runJavascript",
          "configuration": {
            "code": "const run = ({merge,...inputs})=>{const entries=Object.entries(inputs).sort();if(merge){const context=[];const parts=[];for(const[,input]of entries){const c=asContextArray(input);let lastIndex=c.length-1;let last;do{last=c[lastIndex--]}while(lastIndex>=0&&last.role===\"$metadata\");if(last){parts.push(...last.parts)}}context.push({parts,role:\"user\"});return{context}}else{let mode;const[f,...rest]=entries;if(!f){return{context:[]}}const first=asContextArray(f[1]);const firstOpenSplits=scanForSplits(first);const preambleIndices=[];for(const[,input]of rest){const c=asContextArray(input);const hasOpenSplits=scanForSplits(c);if(hasOpenSplits){preambleIndices.push(hasOpenSplits[1])}}if(!firstOpenSplits){if(preambleIndices.length===0){mode=\"simple\"}else{mode=\"adhoc\"}}else{const preamblesMatch=preambleIndices.length>0&&preambleIndices.every(value=>value===firstOpenSplits[1]);if(preamblesMatch){mode=\"preamble\"}else{if(firstOpenSplits[1]===first.length-1){mode=\"single\"}else{mode=\"adhoc\"}}}const context=[];if(mode===\"adhoc\"){for(const[,input]of entries){const c=asContextArray(input);context.push(...c)}return{context}}else if(mode===\"simple\"){const splitId=Math.random().toString(36).substring(7);context.push({role:\"$metadata\",type:\"split\",data:{type:\"start\",id:splitId}});for(const[,input]of entries){const c=asContextArray(input);context.push(...c);context.push({role:\"$metadata\",type:\"split\",data:{type:\"next\",id:splitId}})}}else if(mode===\"preamble\"){const preambleIndex=firstOpenSplits?.[1]||0;const preamble=entries[0][1].slice(0,preambleIndex+1);context.push(...preamble);const splitId=preamble[preamble.length-1].data.id;for(const[,input]of entries){let c=asContextArray(input);if(preambleIndex>=0){c=c.slice(preambleIndex+1)}if(c.length){context.push(...c);context.push({role:\"$metadata\",type:\"split\",data:{type:\"next\",id:splitId}})}}}else if(mode===\"single\"){const splitId=first[first.length-1].data.id;context.push(...first);for(const[,input]of rest){const c=asContextArray(input);context.push(...c);context.push({role:\"$metadata\",type:\"split\",data:{type:\"next\",id:splitId}})}}const last=context[context.length-1];last.data.type=\"end\";return{context}}function asContextArray(input){return Array.isArray(input)?input:[input]}__name(asContextArray,\"asContextArray\");function scanForSplits(c){const stack=[];for(const[i,item]of c.entries()){if(item.role!==\"$metadata\")continue;if(item.type!==\"split\")continue;if(item.data.type===\"start\"){stack.push([item.data.id,i])}if(item.data.type===\"end\"){const[id]=stack.pop()||[];if(id!==item.data.id){console.warn(\"Split integrity error: mismatched split start/end markers. Start:\",id,\"End:\",item.data.id);return null}}}return stack.pop()||null}__name(scanForSplits,\"scanForSplits\")};",
            "inputSchema": {
              "type": "object",
              "properties": {
                "merge": {
                  "type": "boolean",
                  "behavior": [
                    "config"
                  ]
                }
              },
              "additionalProperties": {
                "type": "object",
                "anyOf": [
                  {
                    "type": "object",
                    "properties": {
                      "role": {
                        "type": "string",
                        "enum": [
                          "user",
                          "model",
                          "tool"
                        ]
                      },
                      "parts": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "anyOf": [
                            {
                              "type": "object",
                              "properties": {
                                "text": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "text"
                              ],
                              "additionalProperties": false
                            },
                            {
                              "type": "object",
                              "properties": {
                                "functionCall": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    },
                                    "args": {
                                      "type": "object",
                                      "properties": {},
                                      "required": [],
                                      "additionalProperties": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "required": [
                                    "name",
                                    "args"
                                  ],
                                  "additionalProperties": false
                                }
                              },
                              "required": [
                                "functionCall"
                              ],
                              "additionalProperties": false
                            }
                          ]
                        }
                      }
                    },
                    "required": [
                      "parts"
                    ],
                    "additionalProperties": false,
                    "behavior": [
                      "llm-content"
                    ]
                  },
                  {
                    "type": "object",
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string",
                            "enum": [
                              "$metadata"
                            ]
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "looper"
                            ]
                          },
                          "data": {
                            "type": "object",
                            "properties": {
                              "max": {
                                "type": "number"
                              },
                              "todo": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "task": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "task"
                                  ],
                                  "additionalProperties": false
                                }
                              },
                              "doneMarker": {
                                "type": "string"
                              },
                              "done": {
                                "type": "boolean"
                              },
                              "appendLast": {
                                "type": "boolean"
                              },
                              "returnLast": {
                                "type": "boolean"
                              },
                              "next": {
                                "type": "string"
                              }
                            },
                            "required": [],
                            "additionalProperties": false
                          }
                        },
                        "required": [
                          "role",
                          "type",
                          "data"
                        ],
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string",
                            "enum": [
                              "$metadata"
                            ]
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "split"
                            ]
                          },
                          "data": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "start",
                                  "next",
                                  "end"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "type",
                              "id"
                            ],
                            "additionalProperties": false
                          }
                        },
                        "required": [
                          "role",
                          "type",
                          "data"
                        ],
                        "additionalProperties": false
                      }
                    ]
                  }
                ],
                "behavior": [
                  "llm-content"
                ]
              }
            },
            "name": "run",
            "outputSchema": {
              "type": "object",
              "properties": {
                "context": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string",
                            "enum": [
                              "user",
                              "model",
                              "tool"
                            ]
                          },
                          "parts": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "text": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "text"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "functionCall": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "args": {
                                          "type": "object",
                                          "properties": {},
                                          "required": [],
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "required": [
                                        "name",
                                        "args"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "required": [
                                    "functionCall"
                                  ],
                                  "additionalProperties": false
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "parts"
                        ],
                        "additionalProperties": false,
                        "behavior": [
                          "llm-content"
                        ]
                      },
                      {
                        "type": "object",
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "looper"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "max": {
                                    "type": "number"
                                  },
                                  "todo": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "task": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "task"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "doneMarker": {
                                    "type": "string"
                                  },
                                  "done": {
                                    "type": "boolean"
                                  },
                                  "appendLast": {
                                    "type": "boolean"
                                  },
                                  "returnLast": {
                                    "type": "boolean"
                                  },
                                  "next": {
                                    "type": "string"
                                  }
                                },
                                "required": [],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "enum": [
                                  "$metadata"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "split"
                                ]
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "start",
                                      "next",
                                      "end"
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          }
                        ]
                      }
                    ],
                    "behavior": [
                      "llm-content"
                    ]
                  }
                }
              }
            },
            "raw": true
          }
        }
      ]
    },
    "content": {
      "title": "Content",
      "description": "Use it as a way to initialize or add to conversation context, optionally applying extra arguments with mustache-style {{placeholders}}.",
      "version": "0.0.1",
      "nodes": [
        {
          "type": "input",
          "id": "input",
          "configuration": {
            "schema": {
              "properties": {},
              "type": "object",
              "required": []
            }
          },
          "metadata": {
            "visual": {
              "x": -77.00000000000003,
              "y": -120,
              "collapsed": false
            },
            "tags": [
              {
                "type": "start",
                "label": "default"
              }
            ]
          }
        },
        {
          "type": "output",
          "id": "output",
          "configuration": {
            "schema": {
              "properties": {
                "prompt": {
                  "type": "string",
                  "title": "Prompt",
                  "examples": [],
                  "format": "multiline"
                }
              },
              "type": "object",
              "required": []
            }
          },
          "metadata": {
            "visual": {
              "x": 259.00000000000017,
              "y": -119,
              "collapsed": false
            }
          }
        },
        {
          "id": "runJavascript-2655506c",
          "type": "runJavascript",
          "metadata": {
            "visual": {
              "x": 44,
              "y": -120,
              "collapsed": false
            },
            "title": "Substitute Placeholders",
            "logLevel": "debug"
          },
          "configuration": {
            "code": "function run({template, context, ... inputs}) {\n  const toId = (param) => `p-${param}`;\n  const toName = (id) => id.slice(2);\n\n  const stringify = (value) => {\n    if (typeof value === \"string\") return value;\n    if (value === undefined) return \"undefined\";\n    return JSON.stringify(value, null, 2);\n  };\n  \n  const substitute = (template, values) => {\n    return Object.entries(values).reduce(\n      (acc, [key, value]) => acc.replace(`{{${key}}}`, stringify(value)),\n      template\n    );\n  };\n  \n  const parametersFromTemplate = (template) => {\n    if (!template) return [];\n    const matches = template.matchAll(/{{(?<name>[\\w-]+)}}/g);\n    const parameters = Array.from(matches).map(\n      (match) => match.groups?.name || \"\"\n    );\n    const unique = Array.from(new Set(parameters));\n    return unique;\n  };\n  \n  const parameters = parametersFromTemplate(template);\n  if (!parameters.length) {\n    return createLLMContentArray(template);\n  }\n\n  const substitutes = parameters.reduce((acc, parameter) => {\n    if (inputs[toId(parameter)] === undefined)\n      throw new Error(`Input is missing parameter \"${parameter}\"`);\n    return { ...acc, [parameter]: inputs[toId(parameter)] };\n  }, {});\n\n  const prompt = substitute(template, substitutes);\n  return createLLMContentArray(prompt);\n\n  function createLLMContentArray(text = '') {\n    let prepend = context || [];\n    if (prepend.length === 1 && prepend.at(0).parts.at(0)?.text?.length === 0) {\n      prepend = [];\n    }\n    return [ ... prepend, { parts: [{ text }], role: \"user\" }]\n  }\n}",
            "name": "run",
            "raw": false
          }
        },
        {
          "id": "input-58c1588f",
          "type": "input",
          "metadata": {
            "visual": {
              "x": -103.00000000000003,
              "y": 74.00000000000011,
              "collapsed": false
            },
            "tags": [
              {
                "type": "start",
                "label": "describe"
              }
            ],
            "title": "Describe",
            "logLevel": "debug"
          },
          "configuration": {
            "schema": {
              "properties": {},
              "type": "object",
              "required": []
            }
          }
        },
        {
          "id": "runJavascript-4e04e982",
          "type": "runJavascript",
          "metadata": {
            "visual": {
              "x": 31.000000000000014,
              "y": 71.00000000000011,
              "collapsed": false
            },
            "title": "Schema from Inputs",
            "logLevel": "debug"
          },
          "configuration": {
            "outputSchema": {
              "properties": {
                "outputSchema": {
                  "type": "object",
                  "title": "Output Schema",
                  "examples": []
                },
                "inputSchema": {
                  "type": "object",
                  "title": "Input Schema",
                  "examples": []
                }
              },
              "type": "object",
              "required": []
            },
            "code": "function run({ template }) {\n  const toId = (param) => `p-${param}`;\n  const parametersFromTemplate = (template) => {\n    if (!template) return [];\n    const matches = template.matchAll(/{{(?<name>[\\w-]+)}}/g);\n    const parameters = Array.from(matches).map(\n      (match) => match.groups?.name || \"\"\n    );\n    const unique = Array.from(new Set(parameters));\n    return unique;\n  };\n\n  const parameters = parametersFromTemplate(template);\n\n  const required = parameters.map(toId);\n\n  const inputSchema = {\n    type: \"object\",\n    properties: {\n      ...Object.fromEntries(\n        parameters.map((parameter) => [\n          toId(parameter),\n          {\n            title: toTitle(parameter),\n            description: `The value to substitute for the parameter \"${parameter}\"`,\n            type: \"string\",\n          },\n        ])\n      ),\n      context: asLLMContentArray(\n        \"Context In\",\n        \"The optional incoming conversation context\",\n        true\n      ),\n      template: {\n        title: \"Text\",\n        description: \"(Optional) The text that will initialize or be added to existing conversation context. Use mustache-style {{params}} to add variables.\",\n        type: \"string\",\n        format: \"multiline\",\n        behavior: [\"config\"]\n      },\n    },\n    required,\n  };\n\n  const outputSchema = {\n    type: \"object\",\n    properties: {\n      prompt: asLLMContentArray(\n        \"Context Out\",\n        \"The resulting context, created from the template and parameters\",\n      )\n    },\n  };\n\n  return {\n    inputSchema,\n    outputSchema,\n  };\n\n  function toTitle(id) {\n    return (id?.at(0)?.toUpperCase() ?? '') + (id?.slice(1)?.toLowerCase() ?? '');\n  }\n\n  function asLLMContentArray(title, description, setDefault) {\n    return {\n      type: \"array\",\n      items: {\n        type: \"object\",\n        behavior: [\"llm-content\"]\n      },\n      title,\n      description,\n      ... (setDefault ? {} : { default: \"{\\\"role\\\":\\\"user\\\",\\\"parts\\\":[{\\\"text\\\":\\\"\\\"}]}\"})\n    }\n  }\n}\n",
            "name": "run",
            "raw": true
          }
        },
        {
          "id": "output-acc3ef03",
          "type": "output",
          "metadata": {
            "visual": {
              "x": 262.0000000000001,
              "y": 72,
              "collapsed": false
            },
            "title": "Schemas",
            "logLevel": "debug"
          },
          "configuration": {
            "schema": {
              "properties": {
                "inputSchema": {
                  "type": "object",
                  "title": "Input Schema",
                  "examples": []
                },
                "outputSchema": {
                  "type": "object",
                  "title": "Output Schema",
                  "examples": []
                }
              },
              "type": "object",
              "required": []
            }
          }
        }
      ],
      "edges": [
        {
          "from": "input",
          "to": "runJavascript-2655506c",
          "out": "*",
          "in": ""
        },
        {
          "from": "input-58c1588f",
          "to": "runJavascript-4e04e982",
          "out": "*",
          "in": ""
        },
        {
          "from": "runJavascript-4e04e982",
          "to": "output-acc3ef03",
          "out": "inputSchema",
          "in": "inputSchema"
        },
        {
          "from": "runJavascript-4e04e982",
          "to": "output-acc3ef03",
          "out": "outputSchema",
          "in": "outputSchema"
        },
        {
          "from": "runJavascript-2655506c",
          "to": "output",
          "out": "result",
          "in": "prompt"
        }
      ],
      "metadata": {
        "comments": [],
        "tags": []
      }
    }
  }
}