{
  "title": "Chat bot 2.0",
  "description": "A board that uses the Agent kit to create a simple chat bot. This chat bot simulates an assistant, pretending to be able to order food, book tickets, and all those things that actual assistants do.",
  "version": "0.0.1",
  "edges": [
    {
      "from": "curry-3",
      "to": "repeater-5",
      "out": "board",
      "in": "worker"
    },
    {
      "from": "input-1",
      "to": "curry-3",
      "out": "instruction",
      "in": "instruction"
    },
    {
      "from": "repeater-5",
      "to": "output-2",
      "out": "*",
      "in": ""
    }
  ],
  "nodes": [
    {
      "id": "input-1",
      "type": "input",
      "configuration": {
        "schema": {
          "type": "object",
          "properties": {
            "instruction": {
              "type": "string",
              "title": "Chat Bot Instructions",
              "examples": [
                "\nAs a friendly assistant bot, reply to request below in a helpful, delighted, and brief manner to assist the user as quickly as possible.\n\nPretend you have access to ordering food, booking a table, and other useful services. You can also ask for more information if needed.\n\nYou are also a huge fan of Breadboard, which is the open source project that made you possible, so you subtly weave the references to Breadboard and various baking factoids into your answers."
              ],
              "format": "multiline"
            }
          },
          "required": [
            "instruction"
          ]
        }
      }
    },
    {
      "id": "output-2",
      "type": "output",
      "configuration": {}
    },
    {
      "id": "curry-3",
      "type": "curry",
      "configuration": {
        "$board": {
          "kind": "board",
          "board": {
            "kits": [],
            "edges": [
              {
                "from": "worker-4",
                "to": "output-2",
                "out": "context",
                "in": "context"
              },
              {
                "from": "human-3",
                "to": "worker-4",
                "out": "context",
                "in": "context"
              },
              {
                "from": "input-1",
                "to": "human-3",
                "out": "context",
                "in": "context"
              },
              {
                "from": "input-1",
                "to": "worker-4",
                "out": "instruction",
                "in": "instruction"
              }
            ],
            "nodes": [
              {
                "id": "output-2",
                "type": "output",
                "configuration": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "context": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "anyOf": [
                            {
                              "type": "object",
                              "properties": {
                                "role": {
                                  "type": "string",
                                  "enum": [
                                    "user",
                                    "model",
                                    "tool"
                                  ]
                                },
                                "parts": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "anyOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "text": {
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "text"
                                        ],
                                        "additionalProperties": false
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "functionCall": {
                                            "type": "object",
                                            "properties": {
                                              "name": {
                                                "type": "string"
                                              },
                                              "args": {
                                                "type": "object",
                                                "properties": {},
                                                "required": [],
                                                "additionalProperties": {
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "required": [
                                              "name",
                                              "args"
                                            ],
                                            "additionalProperties": false
                                          }
                                        },
                                        "required": [
                                          "functionCall"
                                        ],
                                        "additionalProperties": false
                                      }
                                    ]
                                  }
                                }
                              },
                              "required": [
                                "parts"
                              ],
                              "additionalProperties": false,
                              "behavior": [
                                "llm-content"
                              ]
                            },
                            {
                              "type": "object",
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "role": {
                                      "type": "string",
                                      "enum": [
                                        "$metadata"
                                      ]
                                    },
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "looper"
                                      ]
                                    },
                                    "data": {
                                      "type": "object",
                                      "properties": {
                                        "max": {
                                          "type": "number"
                                        },
                                        "todo": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "task": {
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "task"
                                            ],
                                            "additionalProperties": false
                                          }
                                        },
                                        "doneMarker": {
                                          "type": "string"
                                        },
                                        "done": {
                                          "type": "boolean"
                                        },
                                        "appendLast": {
                                          "type": "boolean"
                                        },
                                        "returnLast": {
                                          "type": "boolean"
                                        },
                                        "next": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [],
                                      "additionalProperties": false
                                    }
                                  },
                                  "required": [
                                    "role",
                                    "type",
                                    "data"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "role": {
                                      "type": "string",
                                      "enum": [
                                        "$metadata"
                                      ]
                                    },
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "split"
                                      ]
                                    },
                                    "data": {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "enum": [
                                            "start",
                                            "next",
                                            "end"
                                          ]
                                        },
                                        "id": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "id"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "required": [
                                    "role",
                                    "type",
                                    "data"
                                  ],
                                  "additionalProperties": false
                                }
                              ]
                            }
                          ],
                          "behavior": [
                            "llm-content"
                          ]
                        },
                        "title": "context"
                      }
                    }
                  }
                }
              },
              {
                "id": "worker-4",
                "type": "worker",
                "configuration": {}
              },
              {
                "id": "human-3",
                "type": "human",
                "configuration": {
                  "title": "User",
                  "description": "Type here to talk to the chat bot"
                }
              },
              {
                "id": "input-1",
                "type": "input",
                "configuration": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "context": {
                        "type": "array",
                        "title": "Context in",
                        "description": "Incoming conversation context",
                        "default": "[]",
                        "items": {
                          "type": "object",
                          "anyOf": [
                            {
                              "type": "object",
                              "properties": {
                                "role": {
                                  "type": "string",
                                  "enum": [
                                    "user",
                                    "model",
                                    "tool"
                                  ]
                                },
                                "parts": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "anyOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "text": {
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "text"
                                        ],
                                        "additionalProperties": false
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "functionCall": {
                                            "type": "object",
                                            "properties": {
                                              "name": {
                                                "type": "string"
                                              },
                                              "args": {
                                                "type": "object",
                                                "properties": {},
                                                "required": [],
                                                "additionalProperties": {
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "required": [
                                              "name",
                                              "args"
                                            ],
                                            "additionalProperties": false
                                          }
                                        },
                                        "required": [
                                          "functionCall"
                                        ],
                                        "additionalProperties": false
                                      }
                                    ]
                                  }
                                }
                              },
                              "required": [
                                "parts"
                              ],
                              "additionalProperties": false,
                              "behavior": [
                                "llm-content"
                              ]
                            },
                            {
                              "type": "object",
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "role": {
                                      "type": "string",
                                      "enum": [
                                        "$metadata"
                                      ]
                                    },
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "looper"
                                      ]
                                    },
                                    "data": {
                                      "type": "object",
                                      "properties": {
                                        "max": {
                                          "type": "number"
                                        },
                                        "todo": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "task": {
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "task"
                                            ],
                                            "additionalProperties": false
                                          }
                                        },
                                        "doneMarker": {
                                          "type": "string"
                                        },
                                        "done": {
                                          "type": "boolean"
                                        },
                                        "appendLast": {
                                          "type": "boolean"
                                        },
                                        "returnLast": {
                                          "type": "boolean"
                                        },
                                        "next": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [],
                                      "additionalProperties": false
                                    }
                                  },
                                  "required": [
                                    "role",
                                    "type",
                                    "data"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "role": {
                                      "type": "string",
                                      "enum": [
                                        "$metadata"
                                      ]
                                    },
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "split"
                                      ]
                                    },
                                    "data": {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "enum": [
                                            "start",
                                            "next",
                                            "end"
                                          ]
                                        },
                                        "id": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "id"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "required": [
                                    "role",
                                    "type",
                                    "data"
                                  ],
                                  "additionalProperties": false
                                }
                              ]
                            }
                          ],
                          "behavior": [
                            "llm-content"
                          ]
                        }
                      },
                      "instruction": {
                        "type": "string",
                        "behavior": [
                          "config"
                        ],
                        "title": "Instruction",
                        "examples": [
                          "You are a brilliant poet who specializes in two-line rhyming poems.\nGiven any topic, you can quickly whip up a two-line rhyming poem about it.\nLook at the topic below and do your magic"
                        ],
                        "format": "multiline"
                      }
                    },
                    "required": [
                      "context",
                      "instruction"
                    ]
                  }
                }
              }
            ],
            "graphs": {}
          }
        }
      },
      "metadata": {
        "title": "Curry Instruction"
      }
    },
    {
      "id": "repeater-5",
      "type": "repeater",
      "configuration": {},
      "metadata": {
        "title": "Chat Bot"
      }
    }
  ]
}