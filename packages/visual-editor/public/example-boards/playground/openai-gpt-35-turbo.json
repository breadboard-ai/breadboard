{
  "title": "OpenAI GPT-3.5-turbo",
  "description": "This board is the simplest possible invocation of OpenAI's GPT-3.5 API to generate text.",
  "version": "0.1.0",
  "edges": [
    {
      "from": "callOpenAI",
      "to": "getResponse",
      "out": "response",
      "in": "json"
    },
    {
      "from": "Context",
      "to": "formatParameters",
      "out": "context",
      "in": "context"
    },
    {
      "from": "formatParameters",
      "to": "callOpenAI",
      "out": "body",
      "in": "body"
    },
    {
      "from": "formatParameters",
      "to": "callOpenAI",
      "out": "headers",
      "in": "headers"
    },
    {
      "from": "formatParameters",
      "to": "getNewContext",
      "out": "context",
      "in": "messages"
    },
    {
      "from": "getNewContext",
      "to": "output-0",
      "out": "result",
      "in": "context"
    },
    {
      "from": "getResponse",
      "to": "output-0",
      "out": "text",
      "in": "text"
    },
    {
      "from": "getResponse",
      "to": "output-0",
      "out": "tool_calls",
      "in": "toolCalls"
    },
    {
      "from": "OPENAI_API_KEY-secret",
      "to": "formatParameters",
      "out": "OPENAI_API_KEY",
      "in": "OPENAI_API_KEY"
    },
    {
      "from": "Text",
      "to": "formatParameters",
      "out": "text",
      "in": "text"
    },
    {
      "from": "Tools",
      "to": "formatParameters",
      "out": "tools",
      "in": "tools"
    }
  ],
  "nodes": [
    {
      "id": "Context",
      "type": "input",
      "configuration": {
        "schema": {
          "type": "object",
          "properties": {
            "context": {
              "type": "array",
              "title": "Context",
              "description": "An array of messages to use as conversation context",
              "default": "[]",
              "examples": [
                "[\n  {\n    \"role\": \"user\",\n    \"parts\": [\n      {\n        \"text\": \"You are a pirate. Please talk like a pirate.\"\n      }\n    ]\n  },\n  {\n    \"role\": \"model\",\n    \"parts\": [\n      {\n        \"text\": \"Arr, matey!\"\n      }\n    ]\n  }\n]"
              ],
              "items": {
                "type": "object",
                "properties": {
                  "role": {
                    "type": "string",
                    "enum": [
                      "model",
                      "user",
                      "tool",
                      "$metadata"
                    ]
                  },
                  "parts": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "anyOf": [
                        {
                          "type": "object",
                          "properties": {
                            "text": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "text"
                          ],
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "inlineData": {
                              "type": "object",
                              "properties": {
                                "mimeType": {
                                  "type": "string",
                                  "enum": [
                                    "image/png",
                                    "image/jpeg",
                                    "image/heic",
                                    "image/heif",
                                    "image/webp"
                                  ]
                                },
                                "data": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "mimeType",
                                "data"
                              ],
                              "additionalProperties": false
                            }
                          },
                          "required": [
                            "inlineData"
                          ],
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "function_call": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string"
                                },
                                "args": {
                                  "type": "object",
                                  "properties": {},
                                  "required": [],
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                }
                              },
                              "required": [
                                "name",
                                "args"
                              ],
                              "additionalProperties": false
                            }
                          },
                          "required": [
                            "function_call"
                          ],
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "function_response": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string"
                                },
                                "response": {
                                  "type": [
                                    "array",
                                    "boolean",
                                    "null",
                                    "number",
                                    "object",
                                    "string"
                                  ]
                                }
                              },
                              "required": [
                                "name",
                                "response"
                              ],
                              "additionalProperties": false
                            }
                          },
                          "required": [
                            "function_response"
                          ],
                          "additionalProperties": false
                        }
                      ]
                    }
                  }
                },
                "required": [
                  "role",
                  "parts"
                ],
                "additionalProperties": false,
                "behavior": [
                  "llm-content"
                ]
              }
            }
          },
          "required": []
        }
      }
    },
    {
      "id": "Text",
      "type": "input",
      "configuration": {
        "schema": {
          "type": "object",
          "properties": {
            "text": {
              "type": "string",
              "title": "Text",
              "description": "The text to generate",
              "default": "What is the correct term for the paddle in cricket?",
              "examples": [
                "What is the correct term for the paddle in cricket?"
              ]
            }
          },
          "required": []
        }
      }
    },
    {
      "id": "Tools",
      "type": "input",
      "configuration": {
        "schema": {
          "type": "object",
          "properties": {
            "tools": {
              "type": "array",
              "title": "Tools",
              "description": "An array of functions to use for tool-calling",
              "default": "[]",
              "examples": [
                "[\n  {\n    \"name\": \"The_Calculator_Board\",\n    \"description\": \"A simple AI pattern that leans on the power of the LLMs to generate language to solve math problems.\",\n    \"parameters\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"text\": {\n          \"type\": \"string\",\n          \"description\": \"Ask a math question\"\n        }\n      },\n      \"required\": [\n        \"text\"\n      ]\n    }\n  },\n  {\n    \"name\": \"The_Search_Summarizer_Board\",\n    \"description\": \"A simple AI pattern that first uses Google Search to find relevant bits of information and then summarizes them using LLM.\",\n    \"parameters\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"text\": {\n          \"type\": \"string\",\n          \"description\": \"What would you like to search for?\"\n        }\n      },\n      \"required\": [\n        \"text\"\n      ]\n    }\n  }\n]"
              ],
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "parameters": {
                    "type": "object"
                  }
                },
                "required": [
                  "name",
                  "description",
                  "parameters"
                ],
                "additionalProperties": false
              }
            }
          },
          "required": []
        }
      }
    },
    {
      "id": "output-0",
      "type": "output",
      "configuration": {
        "schema": {
          "type": "object",
          "properties": {
            "context": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            },
            "text": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            },
            "toolCalls": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            }
          },
          "required": [
            "context",
            "text",
            "toolCalls"
          ]
        }
      }
    },
    {
      "id": "callOpenAI",
      "type": "fetch",
      "configuration": {
        "method": "POST",
        "stream": false,
        "url": "https://api.openai.com/v1/chat/completions"
      }
    },
    {
      "id": "formatParameters",
      "type": "jsonata",
      "configuration": {
        "expression": "(\n    $context := $append(\n        context ? context, [\n            {\n                \"role\": \"user\",\n                \"parts\": [{ \"text\": text }]\n            }\n        ]);\n    OPENAI_API_KEY ? text ? {\n        \"headers\": {\n            \"Content-Type\": \"application/json\",\n            \"Authorization\": \"Bearer \" & OPENAI_API_KEY\n        },\n        \"body\": {\n            \"model\": \"gpt-3.5-turbo-1106\",\n            \"messages\": [$context.{\n              \"role\": $.role = \"model\" ? \"system\" : $.role,\n              \"content\": $.parts.text\n            }],\n            \"stream\": useStreaming,\n            \"temperature\": 1,\n            \"top_p\": 1,\n            \"tools\": tools ? [tools.{ \"type\": \"function\", \"function\": $ }],\n            \"frequency_penalty\": 0,\n            \"presence_penalty\": 0\n        },\n        \"stream\": useStreaming,\n        \"context\": $context\n    } : {\n        \"$error\": \"`text` input is required\"\n    } : {\n        \"$error\": \"`OPENAI_API_KEY` input is required\"\n    }\n  )",
        "raw": true,
        "useStreaming": false
      }
    },
    {
      "id": "getNewContext",
      "type": "jsonata",
      "configuration": {
        "expression": "$append(messages, response.choices[0].message)"
      }
    },
    {
      "id": "getResponse",
      "type": "jsonata",
      "configuration": {
        "expression": "choices[0].message.{\n      \"text\": $boolean(content) ? content,\n      \"tool_calls\": tool_calls.function ~> | $ | { \"args\": $eval(arguments) }, \"arguments\" |\n    }",
        "raw": true
      }
    },
    {
      "id": "OPENAI_API_KEY-secret",
      "type": "secrets",
      "configuration": {
        "keys": [
          "OPENAI_API_KEY"
        ]
      }
    }
  ]
}