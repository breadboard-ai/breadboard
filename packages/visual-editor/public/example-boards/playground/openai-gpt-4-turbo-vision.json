{
  "title": "OpenAI GPT-4 Turbo Vision",
  "description": "This board is the simplest possible invocation of OpenAI's GPT 4 Turbo API, using its vision capabilities to generate text from multipart inputs.",
  "version": "0.1.0",
  "edges": [
    {
      "from": "Content",
      "to": "makeBody",
      "out": "content",
      "in": "content"
    },
    {
      "from": "getResponse",
      "to": "output-0",
      "out": "result",
      "in": "text"
    },
    {
      "from": "makeBody",
      "to": "openai",
      "out": "result",
      "in": "body"
    },
    {
      "from": "makeHeaders",
      "to": "openai",
      "out": "result",
      "in": "headers"
    },
    {
      "from": "openai",
      "to": "getResponse",
      "out": "response",
      "in": "json"
    },
    {
      "from": "OPENAI_API_KEY-secret",
      "to": "makeHeaders",
      "out": "OPENAI_API_KEY",
      "in": "OPENAI_API_KEY"
    }
  ],
  "nodes": [
    {
      "id": "Content",
      "type": "input",
      "configuration": {
        "schema": {
          "type": "object",
          "properties": {
            "content": {
              "type": "array",
              "title": "Context",
              "description": "An array of messages to use as conversation context",
              "items": {
                "type": "object",
                "properties": {
                  "role": {
                    "type": "string"
                  },
                  "parts": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "anyOf": [
                        {
                          "type": "object",
                          "properties": {
                            "text": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "text"
                          ],
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "inlineData": {
                              "type": "object",
                              "properties": {
                                "mimeType": {
                                  "type": "string",
                                  "enum": [
                                    "image/png",
                                    "image/jpeg",
                                    "image/heic",
                                    "image/heif",
                                    "image/webp"
                                  ]
                                },
                                "data": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "mimeType",
                                "data"
                              ],
                              "additionalProperties": false
                            }
                          },
                          "required": [
                            "inlineData"
                          ],
                          "additionalProperties": false
                        }
                      ]
                    }
                  }
                },
                "required": [
                  "role",
                  "parts"
                ],
                "additionalProperties": false,
                "behavior": [
                  "llm-content"
                ]
              }
            }
          },
          "required": [
            "content"
          ]
        }
      }
    },
    {
      "id": "output-0",
      "type": "output",
      "configuration": {
        "schema": {
          "type": "object",
          "properties": {
            "text": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            }
          },
          "required": [
            "text"
          ]
        }
      }
    },
    {
      "id": "getResponse",
      "type": "jsonata",
      "configuration": {
        "expression": "choices[0].message.content"
      }
    },
    {
      "id": "makeBody",
      "type": "jsonata",
      "configuration": {
        "expression": "{\n      \"model\": \"gpt-4-turbo\",\n      \"messages\": [\n        {\n            \"role\": \"user\",\n            \"content\": $.content.parts.({\n              \"type\": $exists($.text) ? \"text\" : \"image_url\",\n              \"text\": $exists($.text) ? $.text : undefined,\n              \"image_url\": $exists($.inlineData) ? {\n                  \"url\": \"data:\" & $.inlineData.mimeType & \";base64,\" & $.inlineData.data\n              } : undefined\n            })\n        }\n      ],\n      \"stream\": $.useStreaming,\n      \"temperature\": 1,\n      \"max_tokens\": 256,\n      \"top_p\": 1,\n      \"frequency_penalty\": 0,\n      \"presence_penalty\": 0\n    }",
        "useStreaming": false
      }
    },
    {
      "id": "makeHeaders",
      "type": "jsonata",
      "configuration": {
        "expression": "{\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": \"Bearer \" & $.OPENAI_API_KEY\n    }"
      }
    },
    {
      "id": "openai",
      "type": "fetch",
      "configuration": {
        "method": "POST",
        "stream": false,
        "url": "https://api.openai.com/v1/chat/completions"
      }
    },
    {
      "id": "OPENAI_API_KEY-secret",
      "type": "secrets",
      "configuration": {
        "keys": [
          "OPENAI_API_KEY"
        ]
      }
    }
  ]
}