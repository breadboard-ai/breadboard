{
  "title": "Ad Writer (variant 2)",
  "description": "An example of chain of agents working on writing an ad",
  "version": "0.0.2",
  "edges": [
    {
      "from": "fn-5",
      "to": "structuredWorker-6",
      "out": "prompt",
      "in": "instruction"
    },
    {
      "from": "fn-9",
      "to": "output-2",
      "out": "json",
      "in": "json"
    },
    {
      "from": "input-1",
      "to": "structuredWorker-3",
      "out": "context",
      "in": "context"
    },
    {
      "from": "input-1",
      "to": "structuredWorker-4",
      "out": "context",
      "in": "context"
    },
    {
      "from": "repeater-8",
      "to": "fn-9",
      "out": "context",
      "in": "context"
    },
    {
      "from": "repeater-8",
      "to": "output-2",
      "out": "context",
      "in": "context"
    },
    {
      "from": "structuredWorker-3",
      "to": "fn-5",
      "out": "json",
      "in": "json"
    },
    {
      "from": "structuredWorker-4",
      "to": "structuredWorker-6",
      "out": "context",
      "in": "context"
    },
    {
      "from": "structuredWorker-6",
      "to": "structuredWorker-7",
      "out": "context",
      "in": "context"
    },
    {
      "from": "structuredWorker-7",
      "to": "repeater-8",
      "out": "context",
      "in": "context"
    }
  ],
  "nodes": [
    {
      "id": "input-1",
      "type": "input",
      "configuration": {
        "schema": {
          "type": "object",
          "properties": {
            "context": {
              "type": "array",
              "title": "Ad specs",
              "default": "[]",
              "examples": [
                "{\"role\":\"user\",\"parts\":[{\"text\":\"Write an ad for Breadboard. The ad must incorporate the following key messages: \\n- Breadboard for Developers\\n- Play and experiment with AI Patterns\\n- Prototype quickly\\n- Use with Gemini APIs \\n- Integrate AI Into Your Project\\n- Create graphs with prompts\\n- Accessible AI for Developers\"}]}"
              ],
              "items": {
                "type": "object",
                "behavior": [
                  "llm-content"
                ]
              }
            }
          },
          "required": [
            "context"
          ]
        }
      }
    },
    {
      "id": "output-2",
      "type": "output",
      "configuration": {
        "schema": {
          "type": "object",
          "properties": {
            "context": {
              "type": "string",
              "title": "context"
            },
            "json": {
              "type": "string",
              "title": "json"
            }
          }
        }
      }
    },
    {
      "id": "fn-5",
      "type": "runJavascript",
      "configuration": {
        "code": "const fn_5 = ({json})=>{const{prompt}=json;return{prompt}};",
        "name": "fn_5",
        "raw": true
      },
      "metadata": {
        "title": "Prompt Extractor"
      }
    },
    {
      "id": "fn-9",
      "type": "runJavascript",
      "configuration": {
        "code": "const fn_9 = ({context})=>{const list=context||[];const last=list[list.length-1];const json=JSON.parse(last.parts.text);return{json}};",
        "name": "fn_9",
        "raw": true
      },
      "metadata": {
        "title": "JSON Extractor"
      }
    },
    {
      "id": "repeater-8",
      "type": "repeater",
      "configuration": {
        "max": 4,
        "worker": {
          "kind": "board",
          "board": {
            "kits": [],
            "edges": [
              {
                "from": "structuredWorker-4",
                "to": "output-2",
                "out": "context",
                "in": "context"
              },
              {
                "from": "fn-3",
                "to": "structuredWorker-4",
                "out": "warning",
                "in": "instruction"
              },
              {
                "from": "fn-3",
                "to": "output-5",
                "out": "context",
                "in": "exit"
              },
              {
                "from": "input-1",
                "to": "fn-3",
                "out": "context",
                "in": "context"
              },
              {
                "from": "input-1",
                "to": "structuredWorker-4",
                "out": "context",
                "in": "context"
              }
            ],
            "nodes": [
              {
                "id": "output-2",
                "type": "output",
                "configuration": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "context": {
                        "type": "string",
                        "title": "context"
                      }
                    }
                  }
                }
              },
              {
                "id": "structuredWorker-4",
                "type": "structuredWorker",
                "configuration": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "adCampaign": {
                        "type": "object",
                        "description": "the ad campaign",
                        "properties": {
                          "headlines": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "description": "an ad headline (30 character limit, up to 15 headlines)"
                            }
                          },
                          "descriptions": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "description": "the  description (90 character limit, up to 4 descriptions)"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "metadata": {
                  "title": "Ad Shortener"
                }
              },
              {
                "id": "fn-3",
                "type": "runJavascript",
                "configuration": {
                  "code": "const fn_3 = ({context})=>{const list=context||[];const last=list[list.length-1];const json=JSON.parse(last.parts.text);const{adCampaign}=json;const warning=[`You are a brilliant copy editor who is famous brevity, making ads in the ad campaign fit into the character limits while retaining their meaning and impact. Given the ad, follow instructions below:`];for(const headline of adCampaign.headlines){if(headline.length>30){warning.push(`The headline \"${headline}\" is ${headline.length} characters long, but needs to be 30 characters. Shorten it.`)}}for(const description of adCampaign.descriptions){if(description.length>90){warning.push(`The description \"${description}\" is ${description.length} characters long, but needs to be 90 characters. Shorten it.`)}}if(warning.length>1){return{warning:warning.join(\"\\n\\n\")}}return{context}};",
                  "name": "fn_3",
                  "raw": true
                },
                "metadata": {
                  "title": "Character Limit Checker"
                }
              },
              {
                "id": "input-1",
                "type": "input",
                "configuration": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "context": {
                        "title": "Context",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "behavior": [
                            "llm-content"
                          ]
                        },
                        "default": "[]",
                        "examples": [
                          "the universe within us"
                        ]
                      }
                    },
                    "required": [
                      "context"
                    ]
                  }
                }
              },
              {
                "id": "output-5",
                "type": "output",
                "configuration": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "exit": {
                        "type": "string",
                        "title": "exit"
                      }
                    }
                  }
                },
                "metadata": {
                  "title": "Successful exit"
                }
              }
            ],
            "graphs": {}
          }
        }
      },
      "metadata": {
        "title": "Ad refinery"
      }
    },
    {
      "id": "structuredWorker-3",
      "type": "structuredWorker",
      "configuration": {
        "instruction": "Using the audience information in the search engine marketing overview, create a prompt for a bot who will pretend to be the target audience for the ad. The prompt needs to incorporate the sense of skepticism and weariness of ads, yet willingness to provide constructive feedback. The prompt needs to be in the form of:\n    \n    \"You are [persona]. You are [list of traits].\"",
        "schema": {
          "type": "object",
          "properties": {
            "prompt": {
              "type": "string",
              "description": "the prompt for the bot"
            }
          }
        }
      },
      "metadata": {
        "title": "Customer Prompt Maker",
        "description": "Conjuring up a persona to represent a customer",
        "logLevel": "info"
      }
    },
    {
      "id": "structuredWorker-4",
      "type": "structuredWorker",
      "configuration": {
        "instruction": "Write an ad campaign (up to 15 headlines and and 4 descriptions) and that transforms the search engine marketing overview into a compelling, engaging ad.",
        "schema": {
          "type": "object",
          "properties": {
            "adCampaign": {
              "type": "object",
              "description": "the ad campaign",
              "properties": {
                "headlines": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "an ad headline (30 character limit, up to 15 headlines)"
                  }
                },
                "descriptions": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "the  description (90 character limit, up to 4 descriptions)"
                  }
                }
              }
            }
          }
        }
      },
      "metadata": {
        "title": "Ad Writer"
      }
    },
    {
      "id": "structuredWorker-6",
      "type": "structuredWorker",
      "configuration": {
        "schema": {
          "type": "object",
          "properties": {
            "requirements": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "requirement": {
                    "type": "string",
                    "description": "the requirement"
                  },
                  "justification": {
                    "type": "string",
                    "description": "reasoning behind including this requirement"
                  }
                }
              }
            }
          }
        }
      },
      "metadata": {
        "title": "Customer"
      }
    },
    {
      "id": "structuredWorker-7",
      "type": "structuredWorker",
      "configuration": {
        "instruction": "Given the customer critique, update the ad campaign. Make sure to conform to the requirements in the Search Engine Marketing document. Remove any uses of the word \"free\".",
        "schema": {
          "type": "object",
          "properties": {
            "adCampaign": {
              "type": "object",
              "description": "the ad campaign",
              "properties": {
                "headlines": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "an ad headline (30 character limit, up to 15 headlines)"
                  }
                },
                "descriptions": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "the  description (90 character limit, up to 4 descriptions)"
                  }
                }
              }
            }
          }
        }
      },
      "metadata": {
        "title": "Ad Editor"
      }
    }
  ]
}