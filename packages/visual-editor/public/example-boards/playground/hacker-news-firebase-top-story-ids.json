{
  "title": "Hacker News Firebase Top Story IDs",
  "description": "Board which returns Top Story IDs of Hacker News Story Posts using the Firebase API",
  "version": "0.1.0",
  "edges": [
    {
      "from": "fetch",
      "to": "passThrough",
      "out": "response",
      "in": "object"
    },
    {
      "from": "input-0",
      "to": "sliceOutput",
      "out": "limitInput",
      "in": "limit"
    },
    {
      "from": "passThrough",
      "to": "sliceOutput",
      "out": "object",
      "in": "list"
    },
    {
      "from": "sliceOutput",
      "to": "output-0",
      "out": "sliced",
      "in": "storyIDs"
    }
  ],
  "nodes": [
    {
      "id": "input-0",
      "type": "input",
      "configuration": {
        "schema": {
          "type": "object",
          "properties": {
            "limitInput": {
              "type": "number",
              "title": "Number of story IDs to return",
              "description": "The number of Hacker News Top story IDs to return",
              "examples": [
                "5"
              ]
            }
          },
          "required": [
            "limitInput"
          ]
        }
      }
    },
    {
      "id": "output-0",
      "type": "output",
      "configuration": {
        "schema": {
          "type": "object",
          "properties": {
            "storyIDs": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            }
          },
          "required": [
            "storyIDs"
          ]
        }
      }
    },
    {
      "id": "fetch",
      "type": "fetch",
      "configuration": {
        "method": "GET",
        "url": "https://hacker-news.firebaseio.com/v0/topstories.json"
      }
    },
    {
      "id": "passThrough",
      "type": "runJavascript",
      "configuration": {
        "code": "const passThrough = ({object})=>{return{object}};",
        "inputSchema": {
          "type": "object",
          "properties": {
            "object": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            }
          }
        },
        "name": "passThrough",
        "outputSchema": {
          "type": "object",
          "properties": {
            "object": {
              "type": "array",
              "items": {
                "type": "number"
              }
            }
          }
        },
        "raw": true
      }
    },
    {
      "id": "sliceOutput",
      "type": "runJavascript",
      "configuration": {
        "code": "const sliceOutput = ({limit,list})=>{return{sliced:list?.slice(0,limit)}};",
        "inputSchema": {
          "type": "object",
          "properties": {
            "limit": {
              "type": "number"
            },
            "list": {
              "type": "array",
              "items": {
                "type": "number"
              }
            }
          }
        },
        "name": "sliceOutput",
        "outputSchema": {
          "type": "object",
          "properties": {
            "sliced": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            }
          }
        },
        "raw": true
      }
    }
  ]
}