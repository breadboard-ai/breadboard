{
  "title": "Board for Each",
  "description": "Iterate over an array and run a subgraph for each item in the array.",
  "edges": [
    {
      "from": "fn-21",
      "to": "fn-21",
      "out": "array",
      "in": "array"
    },
    {
      "from": "fn-21",
      "to": "fn-23",
      "out": "array",
      "in": "a"
    },
    {
      "from": "fn-21",
      "to": "passthrough-18",
      "out": "item",
      "in": "item"
    },
    {
      "from": "fn-22",
      "to": "fn-22",
      "out": "*",
      "in": ""
    },
    {
      "from": "fn-22",
      "to": "fn-23",
      "out": "array",
      "in": "b"
    },
    {
      "from": "fn-23",
      "to": "output-20",
      "out": "emit",
      "in": "outputs"
    },
    {
      "from": "input-17",
      "to": "fn-21",
      "out": "array",
      "in": "array"
    },
    {
      "from": "input-17",
      "to": "passthrough-18",
      "out": "board",
      "in": "board"
    },
    {
      "from": "invoke-19",
      "to": "fn-22",
      "out": "object",
      "in": "item"
    },
    {
      "from": "passthrough-18",
      "to": "invoke-19",
      "out": "board",
      "in": "$board"
    },
    {
      "from": "passthrough-18",
      "to": "invoke-19",
      "out": "item",
      "in": "object"
    },
    {
      "from": "passthrough-18",
      "to": "passthrough-18",
      "out": "board",
      "in": "board"
    }
  ],
  "nodes": [
    {
      "id": "input-17",
      "type": "input",
      "configuration": {
        "schema": {
          "type": "object",
          "properties": {
            "array": {
              "type": "array",
              "examples": [
                "[\"The\",\"quick\",\"brown\",\"fox\"]"
              ]
            },
            "board": {
              "examples": [
                "{\"edges\":[{\"from\":\"fn-4\",\"to\":\"output-5\",\"out\":\"*\",\"in\":\"\"},{\"from\":\"input-3\",\"to\":\"fn-4\",\"out\":\"object\",\"in\":\"object\"}],\"nodes\":[{\"id\":\"output-5\",\"type\":\"output\",\"configuration\":{},\"metadata\":{\"title\":\"Output\"}},{\"id\":\"fn-4\",\"type\":\"runJavascript\",\"configuration\":{\"code\":\"const fn_4 = inputs=>{const{object}=inputs;return{object:object.split(\\\"\\\").map(c=>c===c.toUpperCase()?c.toLowerCase():c.toUpperCase()).join(\\\"\\\")}};\",\"name\":\"fn_4\",\"raw\":true}},{\"id\":\"input-3\",\"type\":\"input\",\"configuration\":{\"schema\":{\"type\":\"object\",\"properties\":{\"object\":{\"type\":\"string\",\"title\":\"object\"}},\"required\":[\"object\"]}},\"metadata\":{\"title\":\"Input\"}}],\"graphs\":{}}"
              ]
            }
          }
        }
      },
      "metadata": {
        "title": "Input"
      }
    },
    {
      "id": "output-20",
      "type": "output",
      "configuration": {
        "schema": {
          "type": "object",
          "properties": {
            "outputs": {
              "type": "string",
              "title": "outputs"
            }
          }
        }
      },
      "metadata": {
        "title": "Output"
      }
    },
    {
      "id": "fn-21",
      "type": "runJavascript",
      "configuration": {
        "code": "const fn_21 = inputs=>{const{array}=inputs;const[item,...rest]=array;if(item){return{array:rest,item}}return{}};",
        "name": "fn_21",
        "raw": true
      },
      "metadata": {
        "title": "Pop item"
      }
    },
    {
      "id": "fn-22",
      "type": "runJavascript",
      "configuration": {
        "code": "const fn_22 = inputs2=>{const{item,array=[]}=inputs2;return{array:[...array,item]}};",
        "name": "fn_22",
        "raw": true
      },
      "metadata": {
        "title": "Accumulate"
      }
    },
    {
      "id": "fn-23",
      "type": "runJavascript",
      "configuration": {
        "code": "const fn_23 = inputs=>{let emit=void 0;if(!inputs.a||inputs.a.length===0){emit=inputs.b}return{emit,a:inputs.a,b:inputs.b}};",
        "name": "fn_23",
        "raw": true
      },
      "metadata": {
        "title": "Emitter"
      }
    },
    {
      "id": "invoke-19",
      "type": "invoke",
      "configuration": {},
      "metadata": {
        "title": "Invoke"
      }
    },
    {
      "id": "passthrough-18",
      "type": "passthrough",
      "configuration": {},
      "metadata": {
        "title": "Passthrough"
      }
    }
  ]
}