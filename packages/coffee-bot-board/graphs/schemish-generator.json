{
  "title": "Schemish Generator",
  "description": "A wrapper for PaLM API `generateText` to ensure that its output conforms to a given schema. The wrapper utilizes [Schemish](https://glazkov.com/2023/05/06/schemish/), which is a compact JSON dialect that is used express JSON Schemas.",
  "version": "0.0.1",
  "edges": [
    {
      "from": "input",
      "to": "prologue",
      "constant": true,
      "out": "prologue",
      "in": "prologue"
    },
    {
      "from": "input",
      "to": "epilogue",
      "constant": true,
      "out": "epilogue",
      "in": "epilogue"
    },
    {
      "from": "input",
      "to": "schema",
      "constant": true,
      "out": "schema",
      "in": "schema"
    },
    {
      "from": "input",
      "to": "shouldRecover",
      "constant": true,
      "out": "recover",
      "in": "allow"
    },
    {
      "from": "shouldRecover",
      "to": "willRecover",
      "out": "value",
      "in": "value"
    },
    {
      "from": "shouldRecover",
      "to": "error",
      "out": "$error",
      "in": "$error"
    },
    {
      "from": "willRecover",
      "to": "prologue"
    },
    {
      "from": "willRecover",
      "to": "epilogue"
    },
    {
      "from": "willRecover",
      "to": "schema"
    },
    {
      "from": "schema",
      "to": "schemish",
      "out": "schema",
      "in": "schema"
    },
    {
      "from": "schema",
      "to": "validate-json",
      "out": "schema",
      "in": "schema"
    },
    {
      "from": "validate-json",
      "to": "completion",
      "out": "json",
      "in": "completion"
    },
    {
      "from": "validate-json",
      "to": "shouldRecover",
      "out": "$error",
      "in": "value"
    },
    {
      "from": "secrets-1",
      "to": "generator",
      "constant": true,
      "out": "PALM_KEY",
      "in": "PALM_KEY"
    },
    {
      "from": "generator",
      "to": "validate-json",
      "out": "completion",
      "in": "json"
    },
    {
      "from": "generator",
      "to": "shouldRecover",
      "out": "filters",
      "in": "value"
    },
    {
      "from": "prologue",
      "to": "schemishGenerator",
      "out": "prologue",
      "in": "prologue"
    },
    {
      "from": "epilogue",
      "to": "schemishGenerator",
      "out": "epilogue",
      "in": "epilogue"
    },
    {
      "from": "schemish",
      "to": "schemishGenerator",
      "out": "schemish",
      "in": "schemish"
    },
    {
      "from": "schemishGenerator",
      "to": "generator",
      "out": "prompt",
      "in": "text"
    }
  ],
  "nodes": [
    {
      "id": "prologue",
      "type": "passthrough"
    },
    {
      "id": "epilogue",
      "type": "passthrough"
    },
    {
      "id": "schema",
      "type": "passthrough"
    },
    {
      "id": "shouldRecover",
      "type": "runJavascript",
      "configuration": {
        "name": "gate",
        "code": "function gate({ allow, value }) {\n    if (allow)\n        return { value };\n    return { $error: value };\n}",
        "raw": true
      }
    },
    {
      "id": "willRecover",
      "type": "passthrough"
    },
    {
      "id": "error",
      "type": "output",
      "configuration": {
        "schema": {
          "type": "object",
          "properties": {
            "$error": {
              "type": "object",
              "title": "Error",
              "description": "The error reported during generation"
            }
          }
        }
      }
    },
    {
      "id": "completion",
      "type": "output",
      "configuration": {
        "schema": {
          "type": "object",
          "properties": {
            "completion": {
              "type": "string",
              "title": "Completion",
              "description": "Generated text that conforms to the specified output schema"
            }
          }
        }
      }
    },
    {
      "id": "input",
      "type": "input",
      "configuration": {
        "schema": {
          "type": "object",
          "properties": {
            "prologue": {
              "type": "string",
              "title": "Template prologue",
              "description": "The part of the template that preceeds the place where output schema is mentioned"
            },
            "epilogue": {
              "type": "string",
              "title": "Template epilogue",
              "description": "The part of the template that follows the place where output schema is mentioned"
            },
            "schema": {
              "type": "object",
              "title": "Output schema",
              "description": "The JSON schema object that describes desired output"
            },
            "recover": {
              "type": "boolean",
              "title": "Error recovery",
              "description": "Whether to try to recover from errors or just report failure"
            }
          },
          "required": [
            "prologue",
            "epilogue",
            "schema",
            "recover"
          ],
          "additionalProperties": false
        }
      }
    },
    {
      "id": "schemish",
      "type": "schemish"
    },
    {
      "id": "validate-json",
      "type": "validateJson"
    },
    {
      "id": "generator",
      "type": "generateText",
      "configuration": {
        "stopSequences": [
          "Tool:",
          "Customer:",
          "\n\n"
        ],
        "safetySettings": [
          {
            "category": "HARM_CATEGORY_DEROGATORY",
            "threshold": "BLOCK_MEDIUM_AND_ABOVE"
          }
        ]
      }
    },
    {
      "id": "secrets-1",
      "type": "secrets",
      "configuration": {
        "keys": [
          "PALM_KEY"
        ]
      }
    },
    {
      "id": "schemishGenerator",
      "type": "promptTemplate",
      "configuration": {
        "template": "{{prologue}}\n\nYour response must be a valid JSON of the following format:\n{{schemish}}\n\n{{epilogue}}"
      }
    }
  ],
  "kits": [
    {
      "title": "LLM Starter Kit",
      "description": "A kit that provides a few necessary components for wiring boards that use PaLM API.",
      "version": "0.0.1",
      "url": "npm:@google-labs/llm-starter"
    },
    {
      "url": "npm:@google-labs/node-nursery"
    }
  ]
}