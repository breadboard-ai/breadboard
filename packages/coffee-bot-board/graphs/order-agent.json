{
  "edges": [
    {
      "from": "tools",
      "to": "orderAgentPrologue",
      "constant": true,
      "out": "tools",
      "in": "tools"
    },
    {
      "from": "passthrough-1",
      "to": "customerMemory",
      "out": "accumulator",
      "in": "accumulator"
    },
    {
      "from": "customerMemory",
      "to": "agentMemory",
      "out": "accumulator",
      "in": "accumulator"
    },
    {
      "from": "agentMemory",
      "to": "toolMemory",
      "out": "accumulator",
      "in": "accumulator"
    },
    {
      "from": "agentMemory",
      "to": "customerMemory",
      "out": "accumulator",
      "in": "accumulator"
    },
    {
      "from": "toolMemory",
      "to": "agentMemory",
      "out": "accumulator",
      "in": "accumulator"
    },
    {
      "from": "customerMemory",
      "to": "orderAgentEpilogue",
      "out": "accumulator",
      "in": "memory"
    },
    {
      "from": "toolMemory",
      "to": "orderAgentEpilogue",
      "out": "accumulator",
      "in": "memory"
    },
    {
      "from": "slot-4",
      "to": "toolMemory",
      "out": "bot",
      "in": "Tool"
    },
    {
      "from": "slot-4",
      "to": "checkMenu-tool-output",
      "out": "bot",
      "in": "bot"
    },
    {
      "from": "slot-4",
      "to": "error",
      "out": "error",
      "in": "error"
    },
    {
      "from": "jsonata-3",
      "to": "slot-4",
      "out": "result",
      "in": "customer"
    },
    {
      "from": "passthrough-2",
      "to": "jsonata-3",
      "out": "checkMenu",
      "in": "json"
    },
    {
      "from": "slot-7",
      "to": "toolMemory",
      "out": "bot",
      "in": "Tool"
    },
    {
      "from": "slot-7",
      "to": "summarizeMenu-tool-output",
      "out": "bot",
      "in": "bot"
    },
    {
      "from": "slot-7",
      "to": "error",
      "out": "error",
      "in": "error"
    },
    {
      "from": "jsonata-6",
      "to": "slot-7",
      "out": "result",
      "in": "customer"
    },
    {
      "from": "passthrough-5",
      "to": "jsonata-6",
      "out": "summarizeMenu",
      "in": "json"
    },
    {
      "from": "ask-customer-tool",
      "to": "customerMemory",
      "out": "customer",
      "in": "Customer"
    },
    {
      "from": "jsonata-9",
      "to": "ask-customer-tool",
      "out": "result",
      "in": "message"
    },
    {
      "from": "passthrough-8",
      "to": "jsonata-9",
      "out": "customer",
      "in": "json"
    },
    {
      "from": "passthrough-10",
      "to": "finalizeOrder",
      "out": "finalizeOrder",
      "in": "bot"
    },
    {
      "from": "toolRouter",
      "to": "selected-tool",
      "out": "tool",
      "in": "bot"
    },
    {
      "from": "toolRouter",
      "to": "passthrough-8",
      "out": "customer",
      "in": "customer"
    },
    {
      "from": "toolRouter",
      "to": "passthrough-2",
      "out": "checkMenu",
      "in": "checkMenu"
    },
    {
      "from": "toolRouter",
      "to": "passthrough-5",
      "out": "summarizeMenu",
      "in": "summarizeMenu"
    },
    {
      "from": "toolRouter",
      "to": "passthrough-10",
      "out": "finalizeOrder",
      "in": "finalizeOrder"
    },
    {
      "from": "first-ask-customer",
      "to": "customerMemory",
      "out": "customer",
      "in": "Customer"
    },
    {
      "from": "orderAgentPrologue",
      "to": "generator",
      "constant": true,
      "out": "prompt",
      "in": "prologue"
    },
    {
      "from": "orderAgentEpilogue",
      "to": "generator",
      "constant": true,
      "out": "prompt",
      "in": "epilogue"
    },
    {
      "from": "order-schema",
      "to": "generator",
      "constant": true,
      "out": "order-schema",
      "in": "schema"
    },
    {
      "from": "passthrough-11",
      "to": "generator",
      "constant": true,
      "out": "recover",
      "in": "recover"
    },
    {
      "from": "generator",
      "to": "toolRouter",
      "out": "completion",
      "in": "completion"
    },
    {
      "from": "generator",
      "to": "agentMemory",
      "out": "completion",
      "in": "Agent"
    },
    {
      "from": "generator",
      "to": "error",
      "out": "error",
      "in": "error"
    }
  ],
  "nodes": [
    {
      "id": "orderAgentPrologue",
      "type": "promptTemplate",
      "configuration": {
        "template": "You are the ordering agent and your job is to assist customers with ordering items on the menu.\n\nYou have access to the following tools:\n{{tools}}\n\nIt is your responsibility to manage the state of the currentOrder. Add, remove, and change items as you use tools and interact with the customer.\n\nYour conversation with the customer will follow the pattern of \"Customer\", \"Agent\" and \"Tool\" interleaving, like this:\n\nCustomer: the customer request with which you must assist \nAgent: your response\nTool: response from the tool that was invoked\nAgent: your next action\nCustomer: possible reply for the customer\n... and so on ...\n\nThis pattern may repeat several times until the customer's order is finalized.\n"
      }
    },
    {
      "id": "tools",
      "type": "passthrough",
      "configuration": {
        "tools": "[\n  {\n    \"name\": \"checkMenu\",\n    \"description\": \"Check to see if the item, option, or extra requested match items on the menu\",\n    \"input\": \"Name of the item, option, or extra that the customer requested\"\n  },\n  {\n    \"name\": \"summarizeMenu\",\n    \"description\": \"Get a summary of what is on the menu\",\n    \"input\": \"Any sort of additional hint that might help with the summary\"\n  },\n  {\n    \"name\": \"finalizeOrder\",\n    \"description\": \"Finalize the order and send it for fulfillment\",\n    \"input\": \"none\"\n  },\n  {\n    \"name\": \"customer\",\n    \"description\": \"Interact with the customer to continue assisting with the order\",\n    \"input\": \"the message to send to the customer\"\n  }\n]\n"
      }
    },
    {
      "id": "order-schema",
      "type": "passthrough",
      "configuration": {
        "order-schema": {
          "$schema": "https://json-schema.org/draft-07/schema",
          "title": "Menu Order Schema",
          "type": "object",
          "default": {},
          "required": [
            "thought",
            "action",
            "actionInput",
            "orderType",
            "currentOrder"
          ],
          "properties": {
            "thought": {
              "description": "Starting with a summary of order state (what's been done), describe how you decide on the next action, given the previous customer replies.",
              "type": "string"
            },
            "action": {
              "description": "The name of the tool to be used for this action. Must be one of the tools listed above.",
              "type": "string",
              "enum": [
                "checkMenu",
                "summarizeMenu",
                "finalizeOrder",
                "customer"
              ]
            },
            "actionInput": {
              "description": "the input for the tool to help fulfill the action",
              "type": "string"
            },
            "orderType": {
              "description": "Either \"here\" or \"to go\"",
              "type": "string",
              "default": "here"
            },
            "currentOrder": {
              "description": "The current order",
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "item",
                  "extras"
                ],
                "properties": {
                  "item": {
                    "description": "name of the item in the order",
                    "type": "string"
                  },
                  "extras": {
                    "description": "array of extras and options for the item",
                    "type": "array",
                    "default": [],
                    "items": {
                      "type": "string",
                      "description": "The name of the extra or option"
                    }
                  },
                  "quantity": {
                    "description": "The number of items",
                    "type": "number",
                    "default": 1
                  }
                }
              }
            }
          }
        }
      }
    },
    {
      "id": "orderAgentEpilogue",
      "type": "promptTemplate",
      "configuration": {
        "template": "Begin!\n{{memory}}\nAgent: "
      }
    },
    {
      "id": "customerMemory",
      "type": "append"
    },
    {
      "id": "agentMemory",
      "type": "append"
    },
    {
      "id": "toolMemory",
      "type": "append"
    },
    {
      "id": "passthrough-1",
      "type": "passthrough",
      "configuration": {
        "accumulator": "\n"
      }
    },
    {
      "id": "passthrough-2",
      "type": "passthrough"
    },
    {
      "id": "jsonata-3",
      "type": "jsonata",
      "configuration": {
        "expression": "actionInput"
      }
    },
    {
      "id": "slot-4",
      "type": "slot",
      "configuration": {
        "slot": "checkMenu"
      }
    },
    {
      "id": "checkMenu-tool-output",
      "type": "output"
    },
    {
      "id": "error",
      "type": "output"
    },
    {
      "id": "passthrough-5",
      "type": "passthrough"
    },
    {
      "id": "jsonata-6",
      "type": "jsonata",
      "configuration": {
        "expression": "actionInput"
      }
    },
    {
      "id": "slot-7",
      "type": "slot",
      "configuration": {
        "slot": "summarizeMenu"
      }
    },
    {
      "id": "summarizeMenu-tool-output",
      "type": "output"
    },
    {
      "id": "error",
      "type": "output"
    },
    {
      "id": "passthrough-8",
      "type": "passthrough"
    },
    {
      "id": "jsonata-9",
      "type": "jsonata",
      "configuration": {
        "expression": "actionInput"
      }
    },
    {
      "id": "ask-customer-tool",
      "type": "input"
    },
    {
      "id": "passthrough-10",
      "type": "passthrough"
    },
    {
      "id": "finalizeOrder",
      "type": "output"
    },
    {
      "id": "toolRouter",
      "type": "runJavascript",
      "configuration": {
        "name": "route",
        "code": "function route({ completion }) {\n    const data = completion;\n    return { [data.action]: data, tool: data.action };\n}",
        "raw": true
      }
    },
    {
      "id": "selected-tool",
      "type": "output"
    },
    {
      "id": "first-ask-customer",
      "type": "input"
    },
    {
      "id": "generator",
      "type": "include",
      "configuration": {
        "graph": {
          "title": "Schemish Generator",
          "description": "A wrapper for PaLM API `generateText` to ensure that its output conforms to a given schema. The wrapper utilizes [Schemish](https://glazkov.com/2023/05/06/schemish/), which is a compact JSON dialect that is used express JSON Schemas.",
          "version": "0.0.1",
          "edges": [
            {
              "from": "input",
              "to": "prologue",
              "constant": true,
              "out": "prologue",
              "in": "prologue"
            },
            {
              "from": "input",
              "to": "epilogue",
              "constant": true,
              "out": "epilogue",
              "in": "epilogue"
            },
            {
              "from": "input",
              "to": "schema",
              "constant": true,
              "out": "schema",
              "in": "schema"
            },
            {
              "from": "input",
              "to": "shouldRecover",
              "constant": true,
              "out": "recover",
              "in": "allow"
            },
            {
              "from": "shouldRecover",
              "to": "willRecover",
              "out": "value",
              "in": "value"
            },
            {
              "from": "shouldRecover",
              "to": "error",
              "out": "$error",
              "in": "$error"
            },
            {
              "from": "willRecover",
              "to": "prologue"
            },
            {
              "from": "willRecover",
              "to": "epilogue"
            },
            {
              "from": "willRecover",
              "to": "schema"
            },
            {
              "from": "schema",
              "to": "schemish",
              "out": "schema",
              "in": "schema"
            },
            {
              "from": "schema",
              "to": "validate-json",
              "out": "schema",
              "in": "schema"
            },
            {
              "from": "validate-json",
              "to": "completion",
              "out": "json",
              "in": "completion"
            },
            {
              "from": "validate-json",
              "to": "shouldRecover",
              "out": "$error",
              "in": "value"
            },
            {
              "from": "secrets-1",
              "to": "generator",
              "constant": true,
              "out": "PALM_KEY",
              "in": "PALM_KEY"
            },
            {
              "from": "generator",
              "to": "validate-json",
              "out": "completion",
              "in": "json"
            },
            {
              "from": "generator",
              "to": "shouldRecover",
              "out": "filters",
              "in": "value"
            },
            {
              "from": "prologue",
              "to": "schemishGenerator",
              "out": "prologue",
              "in": "prologue"
            },
            {
              "from": "epilogue",
              "to": "schemishGenerator",
              "out": "epilogue",
              "in": "epilogue"
            },
            {
              "from": "schemish",
              "to": "schemishGenerator",
              "out": "schemish",
              "in": "schemish"
            },
            {
              "from": "schemishGenerator",
              "to": "generator",
              "out": "prompt",
              "in": "text"
            }
          ],
          "nodes": [
            {
              "id": "prologue",
              "type": "passthrough"
            },
            {
              "id": "epilogue",
              "type": "passthrough"
            },
            {
              "id": "schema",
              "type": "passthrough"
            },
            {
              "id": "shouldRecover",
              "type": "runJavascript",
              "configuration": {
                "name": "gate",
                "code": "function gate({ allow, value }) {\n    if (allow)\n        return { value };\n    return { $error: value };\n}",
                "raw": true
              }
            },
            {
              "id": "willRecover",
              "type": "passthrough"
            },
            {
              "id": "error",
              "type": "output",
              "configuration": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "$error": {
                      "type": "object",
                      "title": "Error",
                      "description": "The error reported during generation"
                    }
                  }
                }
              }
            },
            {
              "id": "completion",
              "type": "output",
              "configuration": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "completion": {
                      "type": "string",
                      "title": "Completion",
                      "description": "Generated text that conforms to the specified output schema"
                    }
                  }
                }
              }
            },
            {
              "id": "input",
              "type": "input",
              "configuration": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "prologue": {
                      "type": "string",
                      "title": "Template prologue",
                      "description": "The part of the template that preceeds the place where output schema is mentioned"
                    },
                    "epilogue": {
                      "type": "string",
                      "title": "Template epilogue",
                      "description": "The part of the template that follows the place where output schema is mentioned"
                    },
                    "schema": {
                      "type": "object",
                      "title": "Output schema",
                      "description": "The JSON schema object that describes desired output"
                    },
                    "recover": {
                      "type": "boolean",
                      "title": "Error recovery",
                      "description": "Whether to try to recover from errors or just report failure"
                    }
                  },
                  "required": [
                    "prologue",
                    "epilogue",
                    "schema",
                    "recover"
                  ],
                  "additionalProperties": false
                }
              }
            },
            {
              "id": "schemish",
              "type": "schemish"
            },
            {
              "id": "validate-json",
              "type": "validateJson"
            },
            {
              "id": "generator",
              "type": "generateText",
              "configuration": {
                "stopSequences": [
                  "Tool:",
                  "Customer:",
                  "\n\n"
                ],
                "safetySettings": [
                  {
                    "category": "HARM_CATEGORY_DEROGATORY",
                    "threshold": "BLOCK_MEDIUM_AND_ABOVE"
                  }
                ]
              }
            },
            {
              "id": "secrets-1",
              "type": "secrets",
              "configuration": {
                "keys": [
                  "PALM_KEY"
                ]
              }
            },
            {
              "id": "schemishGenerator",
              "type": "promptTemplate",
              "configuration": {
                "template": "{{prologue}}\n\nYour response must be a valid JSON of the following format:\n{{schemish}}\n\n{{epilogue}}"
              }
            }
          ],
          "kits": [
            {
              "title": "LLM Starter Kit",
              "description": "A kit that provides a few necessary components for wiring boards that use PaLM API.",
              "version": "0.0.1",
              "url": "npm:@google-labs/llm-starter"
            },
            {
              "url": "npm:@google-labs/node-nursery"
            }
          ]
        }
      }
    },
    {
      "id": "passthrough-11",
      "type": "passthrough",
      "configuration": {
        "recover": true
      }
    },
    {
      "id": "error",
      "type": "output"
    }
  ],
  "kits": [
    {
      "title": "LLM Starter Kit",
      "description": "A kit that provides a few necessary components for wiring boards that use PaLM API.",
      "version": "0.0.1",
      "url": "npm:@google-labs/llm-starter"
    }
  ]
}