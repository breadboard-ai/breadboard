{
  "edges": [
    {
      "from": "menu",
      "to": "menuAgent",
      "constant": true,
      "out": "menu",
      "in": "menu"
    },
    {
      "from": "menu-format",
      "to": "menuAgent",
      "constant": true,
      "out": "menu-format",
      "in": "menu-format"
    },
    {
      "from": "menu-not-found",
      "to": "menuAgent",
      "constant": true,
      "out": "menu-not-found",
      "in": "menu-not-found"
    },
    {
      "from": "generateText-2",
      "to": "error",
      "out": "filters",
      "in": "error"
    },
    {
      "from": "secrets-3",
      "to": "generateText-2",
      "out": "PALM_KEY",
      "in": "PALM_KEY"
    },
    {
      "from": "parseResponse",
      "to": "bot",
      "out": "bot",
      "in": "bot"
    },
    {
      "from": "generateText-2",
      "to": "parseResponse",
      "out": "completion",
      "in": "completion"
    },
    {
      "from": "menuAgent",
      "to": "generateText-2",
      "out": "prompt",
      "in": "text"
    },
    {
      "from": "input-1",
      "to": "menuAgent",
      "out": "customer",
      "in": "customer"
    }
  ],
  "nodes": [
    {
      "id": "menuAgent",
      "type": "promptTemplate",
      "configuration": {
        "template": "You are the menu-checking agent and your job is to verify that the item requested by the customer is on the menu. The request may be vague and incomplete. It is your job to make a best guess of the item that the customer is asking for. More than one item may match a request. Provide all of the choices.\n\nThe menu contains the following items:\n\n{{menu}}\n\nYour response must be a valid JSON of the following format:\n{{menu-format}}\n\nWhhen you can't find the item the customer requested, provide this response as valid JSON:\n{{menu-not-found}}\n\nCustomer: {{customer}}\nAgent: \n"
      }
    },
    {
      "id": "menu",
      "type": "passthrough",
      "configuration": {
        "menu": "# Coffee Drinks:\nEspresso\nAmericano\nCold Brew\n\n# Coffee Drinks with Milk:\nLatte\nCappuccino\nCortado\nMacchiato\nMocha\nFlat White\n\n# Tea Drinks with Milk:\nChai Latte\nMatcha Latte\n\n# Herbal Teas:\nPeppermint Rose herbal tea\nTangerine Rooibos herbal tea\n\n# Green Teas:\nCloud and Mist green tea\nWild Strawberry green tea\nGinger Green Cold Steep Tea\n\n# Black Teas:\nThree Cultivar Red black tea\nLavender Earl Grey black tea\nEnglish Breakfast black tea\n\n# Oolong Tea:\nJin Xuan oolong tea\n\n# Other Drinks:\nSteamer\nHot Chocolate\n\n# Extras and options:\nMilk options: Whole (default), 2%, Oat, Almond, 2% Lactose Free\nEspresso shots: Single, Double (default), Triple, Quadruple\nCaffeine: Decaf, Regular (default)\nHot or Iced: Hot (default), Iced\nSweeteners (option to add one or more): vanilla sweetener, hazelnut sweetener, caramel sauce, chocolate sauce, sugar free vanilla sweetener\n\n# Special requests:\nAnything the user asks for that's not listed above, for example: 'extra hot', 'one pump', 'half caff', 'extra foam', etc.\n\"dirty\" means add a shot of espresso to a drink that doesn't usually have it, like \"Dirty Chai Latte\".\n\n\"Regular milk\" is the same as 'whole milk'.\n\"sweetened\" means add some regular sugar, not sweetener.\nCustomer cannot order soy.\n"
      }
    },
    {
      "id": "menu-format",
      "type": "passthrough",
      "configuration": {
        "menu-format": "{\n  \"name\": \"checkMenu\",\n  \"result\": [\n    {\n      \"item\": \"name of the item on the menu\",\n      \"extras\": \"array extras and options that were specified in customer's request\",\n      \"availableExtras\": \"array of all available extras and options for this item\"\n    },\n    {\n      \"item\": \"name of another item on the menu\",\n      \"extras\": \"array extras and options that were specified in customer's request\",\n      \"availableExtras\": \"array of all available extras and options for this item\"\n    }\n  ]\n}\n"
      }
    },
    {
      "id": "menu-not-found",
      "type": "passthrough",
      "configuration": {
        "menu-not-found": "{\n  \"name\": \"checkMenu\",\n  \"error\": \"Item is not on the menu\",\n  \"suggestion\": {\n    \"item\": \"name of the item that is on the menu that could work for the customer instead\",\n    \"extras\": \"array extras and options to make the item on the menu work for the customer\",\n    \"availableExtras\": \"array of all available extras and options for this item\"\n  }\n}\n"
      }
    },
    {
      "id": "input-1",
      "type": "input"
    },
    {
      "id": "generateText-2",
      "type": "generateText",
      "configuration": {
        "stopSequences": [
          "Customer:"
        ]
      }
    },
    {
      "id": "error",
      "type": "output"
    },
    {
      "id": "secrets-3",
      "type": "secrets",
      "configuration": {
        "keys": [
          "PALM_KEY"
        ]
      }
    },
    {
      "id": "parseResponse",
      "type": "runJavascript",
      "configuration": {
        "name": "parseResponse",
        "code": "function parseResponse({ completion }) {\n    return { bot: JSON.parse(completion) };\n}",
        "raw": true
      }
    },
    {
      "id": "bot",
      "type": "output"
    }
  ],
  "kits": [
    {
      "title": "LLM Starter Kit",
      "description": "A kit that provides a few necessary components for wiring boards that use PaLM API.",
      "version": "0.0.1",
      "url": "npm:@google-labs/llm-starter"
    }
  ]
}