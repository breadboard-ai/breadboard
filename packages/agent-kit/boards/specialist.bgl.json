{
  "title": "Specialist",
  "description": "Given instructions on how to act, performs a single task, optionally invoking tools.",
  "metadata": {
    "icon": "smart-toy",
    "help": {
      "url": "https://breadboard-ai.github.io/breadboard/docs/kits/agents/#specialist"
    }
  },
  "edges": [
    {
      "from": "assembleBoardInvoke",
      "to": "map-0",
      "out": "list",
      "in": "list"
    },
    {
      "from": "curry-0",
      "to": "turnBoardsToFunctions",
      "out": "board",
      "in": "board"
    },
    {
      "from": "formatFunctionDeclarations",
      "to": "assembleBoardInvoke",
      "out": "urlMap",
      "in": "urlMap"
    },
    {
      "from": "formatFunctionDeclarations",
      "to": "text-0",
      "out": "tools",
      "in": "tools"
    },
    {
      "from": "input-0",
      "to": "runJavascript-4",
      "out": "in",
      "in": "context"
    },
    {
      "from": "input-0",
      "to": "runJavascript-4",
      "out": "task",
      "in": "toAdd"
    },
    {
      "from": "input-0",
      "to": "runJavascript-5",
      "out": "in",
      "in": "context"
    },
    {
      "from": "input-0",
      "to": "text-0",
      "out": "persona",
      "in": "systemInstruction"
    },
    {
      "from": "input-1",
      "to": "turnBoardsToFunctions",
      "out": "tools",
      "in": "list"
    },
    {
      "from": "input-2",
      "to": "text-0",
      "out": "model",
      "in": "model"
    },
    {
      "from": "map-0",
      "to": "runJavascript-1",
      "out": "list",
      "in": "response"
    },
    {
      "from": "router",
      "to": "assembleBoardInvoke",
      "out": "context",
      "in": "context"
    },
    {
      "from": "router",
      "to": "assembleBoardInvoke",
      "out": "functionCalls",
      "in": "functionCalls"
    },
    {
      "from": "router",
      "to": "runJavascript-6",
      "out": "context",
      "in": "generated"
    },
    {
      "from": "router",
      "to": "runJavascript-6",
      "out": "text",
      "in": "text"
    },
    {
      "from": "runJavascript-0",
      "to": "output-0",
      "out": "context",
      "in": "out"
    },
    {
      "from": "runJavascript-1",
      "to": "runJavascript-0",
      "out": "*",
      "in": ""
    },
    {
      "from": "runJavascript-2",
      "to": "curry-0",
      "out": "context",
      "in": "context"
    },
    {
      "from": "runJavascript-2",
      "to": "runJavascript-1",
      "out": "context",
      "in": "context"
    },
    {
      "from": "runJavascript-3",
      "to": "runJavascript-2",
      "out": "context",
      "in": "context"
    },
    {
      "from": "runJavascript-3",
      "to": "runJavascript-6",
      "out": "context",
      "in": "context"
    },
    {
      "from": "runJavascript-3",
      "to": "text-0",
      "out": "context",
      "in": "context"
    },
    {
      "from": "runJavascript-4",
      "to": "runJavascript-3",
      "out": "context",
      "in": "context"
    },
    {
      "from": "runJavascript-5",
      "to": "runJavascript-3",
      "out": "progress",
      "in": "progress"
    },
    {
      "from": "runJavascript-6",
      "to": "output-1",
      "out": "context",
      "in": "out"
    },
    {
      "from": "text-0",
      "to": "router",
      "out": "context",
      "in": "context"
    },
    {
      "from": "turnBoardsToFunctions",
      "to": "formatFunctionDeclarations",
      "out": "list",
      "in": "list"
    }
  ],
  "nodes": [
    {
      "id": "input-0",
      "type": "input",
      "configuration": {
        "schema": {
          "type": "object",
          "properties": {
            "in": {
              "type": "array",
              "title": "Context in",
              "description": "Incoming conversation context",
              "items": {
                "type": "object",
                "anyOf": [
                  {
                    "type": "object",
                    "properties": {
                      "role": {
                        "type": "string",
                        "enum": [
                          "user",
                          "model",
                          "tool"
                        ]
                      },
                      "parts": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "anyOf": [
                            {
                              "type": "object",
                              "properties": {
                                "text": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "text"
                              ],
                              "additionalProperties": false
                            },
                            {
                              "type": "object",
                              "properties": {
                                "functionCall": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    },
                                    "args": {
                                      "type": "object",
                                      "properties": {},
                                      "required": [],
                                      "additionalProperties": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "required": [
                                    "name",
                                    "args"
                                  ],
                                  "additionalProperties": false
                                }
                              },
                              "required": [
                                "functionCall"
                              ],
                              "additionalProperties": false
                            }
                          ]
                        }
                      }
                    },
                    "required": [
                      "parts"
                    ],
                    "additionalProperties": false,
                    "behavior": [
                      "llm-content"
                    ]
                  },
                  {
                    "type": "object",
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string",
                            "enum": [
                              "$metadata"
                            ]
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "looper"
                            ]
                          },
                          "data": {
                            "type": "object",
                            "properties": {
                              "max": {
                                "type": "number"
                              },
                              "todo": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "task": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "task"
                                  ],
                                  "additionalProperties": false
                                }
                              },
                              "doneMarker": {
                                "type": "string"
                              },
                              "done": {
                                "type": "boolean"
                              },
                              "appendLast": {
                                "type": "boolean"
                              },
                              "returnLast": {
                                "type": "boolean"
                              },
                              "next": {
                                "type": "string"
                              }
                            },
                            "required": [],
                            "additionalProperties": false
                          }
                        },
                        "required": [
                          "role",
                          "type",
                          "data"
                        ],
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string",
                            "enum": [
                              "$metadata"
                            ]
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "split"
                            ]
                          },
                          "data": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "start",
                                  "next",
                                  "end"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "type",
                              "id"
                            ],
                            "additionalProperties": false
                          }
                        },
                        "required": [
                          "role",
                          "type",
                          "data"
                        ],
                        "additionalProperties": false
                      }
                    ]
                  }
                ],
                "behavior": [
                  "llm-content"
                ]
              }
            },
            "persona": {
              "type": "object",
              "behavior": [
                "llm-content",
                "config"
              ],
              "title": "Persona",
              "description": "Describe the worker's skills, capabilities, mindset, and thinking process",
              "properties": {
                "parts": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "text": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "text"
                    ],
                    "additionalProperties": false
                  }
                }
              },
              "required": [
                "parts"
              ],
              "additionalProperties": false
            },
            "task": {
              "type": "object",
              "behavior": [
                "llm-content",
                "config"
              ],
              "title": "Task",
              "description": "(Optional) Provide a specific task with clear instructions for the worker to complete using the conversation context",
              "default": "{}",
              "properties": {
                "role": {
                  "type": "string",
                  "enum": [
                    "user",
                    "model",
                    "tool"
                  ]
                },
                "parts": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "text": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "text"
                        ],
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {
                          "functionCall": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "args": {
                                "type": "object",
                                "properties": {},
                                "required": [],
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            },
                            "required": [
                              "name",
                              "args"
                            ],
                            "additionalProperties": false
                          }
                        },
                        "required": [
                          "functionCall"
                        ],
                        "additionalProperties": false
                      }
                    ]
                  }
                }
              },
              "required": [
                "parts"
              ],
              "additionalProperties": false
            }
          },
          "required": [
            "in",
            "persona"
          ]
        }
      }
    },
    {
      "id": "input-1",
      "type": "input",
      "configuration": {
        "schema": {
          "type": "object",
          "properties": {
            "tools": {
              "type": "array",
              "behavior": [
                "config"
              ],
              "title": "Tools",
              "description": "(Optional) Add tools to this list for the worker to use when needed",
              "default": "[]",
              "items": {
                "type": "object",
                "properties": {},
                "required": [],
                "additionalProperties": true,
                "behavior": [
                  "board"
                ]
              }
            }
          },
          "required": []
        }
      },
      "metadata": {
        "title": "Tools Input",
        "description": "Specify the tools to use"
      }
    },
    {
      "id": "input-2",
      "type": "input",
      "configuration": {
        "schema": {
          "type": "object",
          "properties": {
            "model": {
              "type": "string",
              "behavior": [
                "config"
              ],
              "title": "Model",
              "description": "Choose the model to use for this specialist.",
              "default": "gemini-1.5-flash-latest",
              "examples": [
                "gemini-1.5-flash-latest"
              ],
              "enum": [
                "gemini-1.5-flash-latest",
                "gemini-1.5-pro-latest",
                "gemini-1.5-pro-exp-0801",
                "gemini-1.5-pro-exp-0827",
                "gemini-1.5-flash-8b-exp-0827",
                "gemini-1.5-flash-exp-0827"
              ]
            }
          },
          "required": []
        }
      },
      "metadata": {
        "title": "Model Input",
        "description": "Ask which model to use"
      }
    },
    {
      "id": "output-0",
      "type": "output",
      "configuration": {
        "schema": {
          "type": "object",
          "properties": {
            "out": {
              "type": "array",
              "items": {
                "type": "object",
                "anyOf": [
                  {
                    "type": "object",
                    "properties": {
                      "role": {
                        "type": "string",
                        "enum": [
                          "user",
                          "model",
                          "tool"
                        ]
                      },
                      "parts": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "anyOf": [
                            {
                              "type": "object",
                              "properties": {
                                "text": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "text"
                              ],
                              "additionalProperties": false
                            },
                            {
                              "type": "object",
                              "properties": {
                                "functionCall": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    },
                                    "args": {
                                      "type": "object",
                                      "properties": {},
                                      "required": [],
                                      "additionalProperties": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "required": [
                                    "name",
                                    "args"
                                  ],
                                  "additionalProperties": false
                                }
                              },
                              "required": [
                                "functionCall"
                              ],
                              "additionalProperties": false
                            }
                          ]
                        }
                      }
                    },
                    "required": [
                      "parts"
                    ],
                    "additionalProperties": false,
                    "behavior": [
                      "llm-content"
                    ]
                  },
                  {
                    "type": "object",
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string",
                            "enum": [
                              "$metadata"
                            ]
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "looper"
                            ]
                          },
                          "data": {
                            "type": "object",
                            "properties": {
                              "max": {
                                "type": "number"
                              },
                              "todo": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "task": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "task"
                                  ],
                                  "additionalProperties": false
                                }
                              },
                              "doneMarker": {
                                "type": "string"
                              },
                              "done": {
                                "type": "boolean"
                              },
                              "appendLast": {
                                "type": "boolean"
                              },
                              "returnLast": {
                                "type": "boolean"
                              },
                              "next": {
                                "type": "string"
                              }
                            },
                            "required": [],
                            "additionalProperties": false
                          }
                        },
                        "required": [
                          "role",
                          "type",
                          "data"
                        ],
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string",
                            "enum": [
                              "$metadata"
                            ]
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "split"
                            ]
                          },
                          "data": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "start",
                                  "next",
                                  "end"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "type",
                              "id"
                            ],
                            "additionalProperties": false
                          }
                        },
                        "required": [
                          "role",
                          "type",
                          "data"
                        ],
                        "additionalProperties": false
                      }
                    ]
                  }
                ],
                "behavior": [
                  "llm-content"
                ]
              },
              "title": "Context out"
            }
          },
          "required": [
            "out"
          ]
        }
      },
      "metadata": {
        "title": "Tool Output",
        "description": "Return tool results as output"
      }
    },
    {
      "id": "output-1",
      "type": "output",
      "configuration": {
        "schema": {
          "type": "object",
          "properties": {
            "out": {
              "type": "array",
              "items": {
                "type": "object",
                "anyOf": [
                  {
                    "type": "object",
                    "properties": {
                      "role": {
                        "type": "string",
                        "enum": [
                          "user",
                          "model",
                          "tool"
                        ]
                      },
                      "parts": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "anyOf": [
                            {
                              "type": "object",
                              "properties": {
                                "text": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "text"
                              ],
                              "additionalProperties": false
                            },
                            {
                              "type": "object",
                              "properties": {
                                "functionCall": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    },
                                    "args": {
                                      "type": "object",
                                      "properties": {},
                                      "required": [],
                                      "additionalProperties": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "required": [
                                    "name",
                                    "args"
                                  ],
                                  "additionalProperties": false
                                }
                              },
                              "required": [
                                "functionCall"
                              ],
                              "additionalProperties": false
                            }
                          ]
                        }
                      }
                    },
                    "required": [
                      "parts"
                    ],
                    "additionalProperties": false,
                    "behavior": [
                      "llm-content"
                    ]
                  },
                  {
                    "type": "object",
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string",
                            "enum": [
                              "$metadata"
                            ]
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "looper"
                            ]
                          },
                          "data": {
                            "type": "object",
                            "properties": {
                              "max": {
                                "type": "number"
                              },
                              "todo": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "task": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "task"
                                  ],
                                  "additionalProperties": false
                                }
                              },
                              "doneMarker": {
                                "type": "string"
                              },
                              "done": {
                                "type": "boolean"
                              },
                              "appendLast": {
                                "type": "boolean"
                              },
                              "returnLast": {
                                "type": "boolean"
                              },
                              "next": {
                                "type": "string"
                              }
                            },
                            "required": [],
                            "additionalProperties": false
                          }
                        },
                        "required": [
                          "role",
                          "type",
                          "data"
                        ],
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string",
                            "enum": [
                              "$metadata"
                            ]
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "split"
                            ]
                          },
                          "data": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "start",
                                  "next",
                                  "end"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "type",
                              "id"
                            ],
                            "additionalProperties": false
                          }
                        },
                        "required": [
                          "role",
                          "type",
                          "data"
                        ],
                        "additionalProperties": false
                      }
                    ]
                  }
                ],
                "behavior": [
                  "llm-content"
                ]
              },
              "title": "Context out"
            }
          },
          "required": [
            "out"
          ]
        }
      }
    },
    {
      "id": "assembleBoardInvoke",
      "type": "runJavascript",
      "configuration": {
        "code": "const assembleBoardInvoke = ({functionCalls,urlMap})=>{if(!functionCalls){throw new Error(\"Function call array is a required input\")}if(!urlMap){throw new Error(\"URL map is a required input\")}const calls=functionCalls;if(calls.length===0){throw new Error(\"Function call array must not be empty.\")}const list=[];for(const call of calls){const item=urlMap[call.name];const $board=item.url;const $flags=item.flags;const llmContentProperty=$flags.inputLLMContent||$flags.inputLLMContentArray;const invokeArgs={$board,$flags,...call.args};if(llmContentProperty){const args=call.args;const text=args[llmContentProperty];const parts=[{text}];const llmContent={parts,role:\"user\"};if($flags.inputLLMContentArray){invokeArgs[llmContentProperty]=[llmContent]}else{invokeArgs[llmContentProperty]=llmContent}}list.push(invokeArgs)}return{list}};",
        "inputSchema": {
          "type": "object",
          "properties": {
            "urlMap": {
              "type": "object",
              "properties": {},
              "required": [],
              "additionalProperties": {
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string"
                  },
                  "flags": {
                    "type": "object",
                    "properties": {
                      "inputLLMContent": {
                        "type": "string"
                      },
                      "inputLLMContentArray": {
                        "type": "string"
                      },
                      "outputLLMContent": {
                        "type": "string"
                      },
                      "outputLLMContentArray": {
                        "type": "string"
                      }
                    },
                    "required": [],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "url",
                  "flags"
                ],
                "additionalProperties": false
              }
            },
            "context": {
              "type": "object",
              "properties": {
                "role": {
                  "type": "string",
                  "enum": [
                    "user",
                    "model",
                    "tool"
                  ]
                },
                "parts": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "text": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "text"
                        ],
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {
                          "functionCall": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "args": {
                                "type": "object",
                                "properties": {},
                                "required": [],
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            },
                            "required": [
                              "name",
                              "args"
                            ],
                            "additionalProperties": false
                          }
                        },
                        "required": [
                          "functionCall"
                        ],
                        "additionalProperties": false
                      }
                    ]
                  }
                }
              },
              "required": [
                "parts"
              ],
              "additionalProperties": false,
              "behavior": [
                "llm-content"
              ]
            },
            "functionCalls": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "args": {
                    "type": "object",
                    "properties": {},
                    "required": [],
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "name",
                  "args"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "name": "assembleBoardInvoke",
        "outputSchema": {
          "type": "object",
          "properties": {
            "list": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "$board": {
                    "type": "string"
                  },
                  "$flags": {
                    "type": "object",
                    "properties": {
                      "inputLLMContent": {
                        "type": "string"
                      },
                      "inputLLMContentArray": {
                        "type": "string"
                      },
                      "outputLLMContent": {
                        "type": "string"
                      },
                      "outputLLMContentArray": {
                        "type": "string"
                      }
                    },
                    "required": [],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "$board",
                  "$flags"
                ],
                "additionalProperties": true
              }
            }
          }
        },
        "raw": true
      },
      "metadata": {
        "title": "Assemble Tool Invoke",
        "description": "Assembling the tool invocation based on Gemini response"
      }
    },
    {
      "id": "curry-0",
      "type": "curry",
      "configuration": {
        "$board": {
          "kind": "board",
          "path": "#subgraph-0"
        }
      },
      "metadata": {
        "title": "Add Context",
        "description": "Adding context to the board to function converter"
      }
    },
    {
      "id": "formatFunctionDeclarations",
      "type": "runJavascript",
      "configuration": {
        "code": "const formatFunctionDeclarations = ({list})=>{const tools=[];const urlMap={};list.forEach(item=>{tools.push(item.function);const flags=item.flags;urlMap[item.function.name]={url:item.boardURL,flags}});return{tools,urlMap}};",
        "inputSchema": {
          "type": "object",
          "properties": {
            "list": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {},
                "required": [],
                "additionalProperties": true
              }
            }
          }
        },
        "name": "formatFunctionDeclarations",
        "outputSchema": {
          "type": "object",
          "properties": {
            "tools": {
              "type": "array",
              "items": {
                "type": [
                  "array",
                  "boolean",
                  "null",
                  "number",
                  "object",
                  "string"
                ]
              }
            },
            "urlMap": {
              "type": "object",
              "properties": {},
              "required": [],
              "additionalProperties": {
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string"
                  },
                  "flags": {
                    "type": "object",
                    "properties": {
                      "inputLLMContent": {
                        "type": "string"
                      },
                      "inputLLMContentArray": {
                        "type": "string"
                      },
                      "outputLLMContent": {
                        "type": "string"
                      },
                      "outputLLMContentArray": {
                        "type": "string"
                      }
                    },
                    "required": [],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "url",
                  "flags"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "raw": true
      },
      "metadata": {
        "title": "Format Function Declarations",
        "description": "Formatting the function declarations"
      }
    },
    {
      "id": "map-0",
      "type": "map",
      "configuration": {
        "board": {
          "kind": "board",
          "path": "#subgraph-1"
        }
      },
      "metadata": {
        "title": "Invoke Tools in Parallel",
        "description": "Invoking tools in parallel"
      }
    },
    {
      "id": "router",
      "type": "runJavascript",
      "configuration": {
        "code": "const router = ({context})=>{if(!context)throw new Error(\"Context is a required input\");const item=context;const functionCallParts=item.parts.filter(part=>\"functionCall\"in part).map(part=>part.functionCall);if(functionCallParts.length===0){const textPart=item.parts.find(part=>\"text\"in part);if(!textPart)throw new Error(\"No text or function call found in context\");return{context,text:textPart.text}}return{context,functionCalls:functionCallParts}};",
        "inputSchema": {
          "type": "object",
          "properties": {
            "context": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            }
          }
        },
        "name": "router",
        "outputSchema": {
          "type": "object",
          "properties": {
            "context": {
              "type": "object",
              "properties": {
                "role": {
                  "type": "string",
                  "enum": [
                    "user",
                    "model",
                    "tool"
                  ]
                },
                "parts": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "text": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "text"
                        ],
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {
                          "functionCall": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "args": {
                                "type": "object",
                                "properties": {},
                                "required": [],
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            },
                            "required": [
                              "name",
                              "args"
                            ],
                            "additionalProperties": false
                          }
                        },
                        "required": [
                          "functionCall"
                        ],
                        "additionalProperties": false
                      }
                    ]
                  }
                }
              },
              "required": [
                "parts"
              ],
              "additionalProperties": false,
              "behavior": [
                "llm-content"
              ]
            },
            "text": {
              "type": "string"
            },
            "functionCalls": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "args": {
                    "type": "object",
                    "properties": {},
                    "required": [],
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "name",
                  "args"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "raw": true
      },
      "metadata": {
        "title": "Router",
        "description": "Routing to either function call invocation or text reply"
      }
    },
    {
      "id": "runJavascript-0",
      "type": "runJavascript",
      "configuration": {
        "code": "const run = ({merge,...inputs})=>{const entries=Object.entries(inputs).sort();if(merge){const context=[];const parts=[];for(const[,input]of entries){const c=asContextArray(input);let lastIndex=c.length-1;let last;do{last=c[lastIndex--]}while(lastIndex>=0&&last.role===\"$metadata\");if(last){parts.push(...last.parts)}}context.push({parts,role:\"user\"});return{context}}else{let mode;const[f,...rest]=entries;if(!f){return{context:[]}}const first=asContextArray(f[1]);const firstOpenSplits=scanForSplits(first);const preambleIndices=[];for(const[,input]of rest){const c=asContextArray(input);const hasOpenSplits=scanForSplits(c);if(hasOpenSplits){preambleIndices.push(hasOpenSplits[1])}}if(!firstOpenSplits){if(preambleIndices.length===0){mode=\"simple\"}else{mode=\"adhoc\"}}else{const preamblesMatch=preambleIndices.length>0&&preambleIndices.every(value=>value===firstOpenSplits[1]);if(preamblesMatch){mode=\"preamble\"}else{if(firstOpenSplits[1]===first.length-1){mode=\"single\"}else{mode=\"adhoc\"}}}const context=[];if(mode===\"adhoc\"){for(const[,input]of entries){const c=asContextArray(input);context.push(...c)}return{context}}else if(mode===\"simple\"){const splitId=Math.random().toString(36).substring(7);context.push({role:\"$metadata\",type:\"split\",data:{type:\"start\",id:splitId}});for(const[,input]of entries){const c=asContextArray(input);context.push(...c);context.push({role:\"$metadata\",type:\"split\",data:{type:\"next\",id:splitId}})}}else if(mode===\"preamble\"){const preambleIndex=firstOpenSplits?.[1]||0;const preamble=entries[0][1].slice(0,preambleIndex+1);context.push(...preamble);const splitId=preamble[preamble.length-1].data.id;for(const[,input]of entries){let c=asContextArray(input);if(preambleIndex>=0){c=c.slice(preambleIndex+1)}if(c.length){context.push(...c);context.push({role:\"$metadata\",type:\"split\",data:{type:\"next\",id:splitId}})}}}else if(mode===\"single\"){const splitId=first[first.length-1].data.id;context.push(...first);for(const[,input]of rest){const c=asContextArray(input);context.push(...c);context.push({role:\"$metadata\",type:\"split\",data:{type:\"next\",id:splitId}})}}const last=context[context.length-1];last.data.type=\"end\";return{context}}function asContextArray(input){return Array.isArray(input)?input:[input]}__name(asContextArray,\"asContextArray\");function scanForSplits(c){const stack=[];for(const[i,item]of c.entries()){if(item.role!==\"$metadata\")continue;if(item.type!==\"split\")continue;if(item.data.type===\"start\"){stack.push([item.data.id,i])}if(item.data.type===\"end\"){const[id]=stack.pop()||[];if(id!==item.data.id){console.warn(\"Split integrity error: mismatched split start/end markers. Start:\",id,\"End:\",item.data.id);return null}}}return stack.pop()||null}__name(scanForSplits,\"scanForSplits\")};",
        "inputSchema": {
          "type": "object",
          "properties": {
            "": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            }
          }
        },
        "name": "run",
        "outputSchema": {
          "type": "object",
          "properties": {
            "context": {
              "type": "array",
              "items": {
                "type": "object",
                "anyOf": [
                  {
                    "type": "object",
                    "properties": {
                      "role": {
                        "type": "string",
                        "enum": [
                          "user",
                          "model",
                          "tool"
                        ]
                      },
                      "parts": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "anyOf": [
                            {
                              "type": "object",
                              "properties": {
                                "text": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "text"
                              ],
                              "additionalProperties": false
                            },
                            {
                              "type": "object",
                              "properties": {
                                "functionCall": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    },
                                    "args": {
                                      "type": "object",
                                      "properties": {},
                                      "required": [],
                                      "additionalProperties": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "required": [
                                    "name",
                                    "args"
                                  ],
                                  "additionalProperties": false
                                }
                              },
                              "required": [
                                "functionCall"
                              ],
                              "additionalProperties": false
                            }
                          ]
                        }
                      }
                    },
                    "required": [
                      "parts"
                    ],
                    "additionalProperties": false,
                    "behavior": [
                      "llm-content"
                    ]
                  },
                  {
                    "type": "object",
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string",
                            "enum": [
                              "$metadata"
                            ]
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "looper"
                            ]
                          },
                          "data": {
                            "type": "object",
                            "properties": {
                              "max": {
                                "type": "number"
                              },
                              "todo": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "task": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "task"
                                  ],
                                  "additionalProperties": false
                                }
                              },
                              "doneMarker": {
                                "type": "string"
                              },
                              "done": {
                                "type": "boolean"
                              },
                              "appendLast": {
                                "type": "boolean"
                              },
                              "returnLast": {
                                "type": "boolean"
                              },
                              "next": {
                                "type": "string"
                              }
                            },
                            "required": [],
                            "additionalProperties": false
                          }
                        },
                        "required": [
                          "role",
                          "type",
                          "data"
                        ],
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string",
                            "enum": [
                              "$metadata"
                            ]
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "split"
                            ]
                          },
                          "data": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "start",
                                  "next",
                                  "end"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "type",
                              "id"
                            ],
                            "additionalProperties": false
                          }
                        },
                        "required": [
                          "role",
                          "type",
                          "data"
                        ],
                        "additionalProperties": false
                      }
                    ]
                  }
                ],
                "behavior": [
                  "llm-content"
                ]
              }
            }
          }
        },
        "raw": true
      },
      "metadata": {
        "title": "Add Tool Response",
        "description": "Adding tool response to context"
      }
    },
    {
      "id": "runJavascript-1",
      "type": "runJavascript",
      "configuration": {
        "code": "const run = ({response,context})=>{const result=Object.fromEntries(response.map((item,i)=>[`context-${i+1}`,item.item]));if(context){result[\"context-0\"]=context}return result};",
        "inputSchema": {
          "type": "object",
          "properties": {
            "context": {
              "type": "array",
              "items": {
                "type": "object",
                "anyOf": [
                  {
                    "type": "object",
                    "properties": {
                      "role": {
                        "type": "string",
                        "enum": [
                          "user",
                          "model",
                          "tool"
                        ]
                      },
                      "parts": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "anyOf": [
                            {
                              "type": "object",
                              "properties": {
                                "text": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "text"
                              ],
                              "additionalProperties": false
                            },
                            {
                              "type": "object",
                              "properties": {
                                "functionCall": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    },
                                    "args": {
                                      "type": "object",
                                      "properties": {},
                                      "required": [],
                                      "additionalProperties": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "required": [
                                    "name",
                                    "args"
                                  ],
                                  "additionalProperties": false
                                }
                              },
                              "required": [
                                "functionCall"
                              ],
                              "additionalProperties": false
                            }
                          ]
                        }
                      }
                    },
                    "required": [
                      "parts"
                    ],
                    "additionalProperties": false,
                    "behavior": [
                      "llm-content"
                    ]
                  },
                  {
                    "type": "object",
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string",
                            "enum": [
                              "$metadata"
                            ]
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "looper"
                            ]
                          },
                          "data": {
                            "type": "object",
                            "properties": {
                              "max": {
                                "type": "number"
                              },
                              "todo": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "task": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "task"
                                  ],
                                  "additionalProperties": false
                                }
                              },
                              "doneMarker": {
                                "type": "string"
                              },
                              "done": {
                                "type": "boolean"
                              },
                              "appendLast": {
                                "type": "boolean"
                              },
                              "returnLast": {
                                "type": "boolean"
                              },
                              "next": {
                                "type": "string"
                              }
                            },
                            "required": [],
                            "additionalProperties": false
                          }
                        },
                        "required": [
                          "role",
                          "type",
                          "data"
                        ],
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string",
                            "enum": [
                              "$metadata"
                            ]
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "split"
                            ]
                          },
                          "data": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "start",
                                  "next",
                                  "end"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "type",
                              "id"
                            ],
                            "additionalProperties": false
                          }
                        },
                        "required": [
                          "role",
                          "type",
                          "data"
                        ],
                        "additionalProperties": false
                      }
                    ]
                  }
                ],
                "behavior": [
                  "llm-content"
                ]
              }
            },
            "response": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {},
                "required": [],
                "additionalProperties": true
              }
            }
          }
        },
        "name": "run",
        "outputSchema": {
          "type": "object",
          "properties": {}
        },
        "raw": true
      },
      "metadata": {
        "title": "Format Tool Response",
        "description": "Formatting tool response"
      }
    },
    {
      "id": "runJavascript-2",
      "type": "runJavascript",
      "configuration": {
        "code": "const run = ({context})=>{if(!context)throw new Error(\"Context is required\");const c=context;const id=Math.random().toString(36).substring(7);const metadata={role:\"$metadata\",type:\"split\",data:{type:\"start\",id}};return{context:[...c,metadata],id}};",
        "inputSchema": {
          "type": "object",
          "properties": {
            "context": {
              "type": "array",
              "items": {
                "type": "object",
                "anyOf": [
                  {
                    "type": "object",
                    "properties": {
                      "role": {
                        "type": "string",
                        "enum": [
                          "user",
                          "model",
                          "tool"
                        ]
                      },
                      "parts": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "anyOf": [
                            {
                              "type": "object",
                              "properties": {
                                "text": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "text"
                              ],
                              "additionalProperties": false
                            },
                            {
                              "type": "object",
                              "properties": {
                                "functionCall": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    },
                                    "args": {
                                      "type": "object",
                                      "properties": {},
                                      "required": [],
                                      "additionalProperties": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "required": [
                                    "name",
                                    "args"
                                  ],
                                  "additionalProperties": false
                                }
                              },
                              "required": [
                                "functionCall"
                              ],
                              "additionalProperties": false
                            }
                          ]
                        }
                      }
                    },
                    "required": [
                      "parts"
                    ],
                    "additionalProperties": false,
                    "behavior": [
                      "llm-content"
                    ]
                  },
                  {
                    "type": "object",
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string",
                            "enum": [
                              "$metadata"
                            ]
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "looper"
                            ]
                          },
                          "data": {
                            "type": "object",
                            "properties": {
                              "max": {
                                "type": "number"
                              },
                              "todo": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "task": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "task"
                                  ],
                                  "additionalProperties": false
                                }
                              },
                              "doneMarker": {
                                "type": "string"
                              },
                              "done": {
                                "type": "boolean"
                              },
                              "appendLast": {
                                "type": "boolean"
                              },
                              "returnLast": {
                                "type": "boolean"
                              },
                              "next": {
                                "type": "string"
                              }
                            },
                            "required": [],
                            "additionalProperties": false
                          }
                        },
                        "required": [
                          "role",
                          "type",
                          "data"
                        ],
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string",
                            "enum": [
                              "$metadata"
                            ]
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "split"
                            ]
                          },
                          "data": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "start",
                                  "next",
                                  "end"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "type",
                              "id"
                            ],
                            "additionalProperties": false
                          }
                        },
                        "required": [
                          "role",
                          "type",
                          "data"
                        ],
                        "additionalProperties": false
                      }
                    ]
                  }
                ],
                "behavior": [
                  "llm-content"
                ]
              }
            }
          }
        },
        "name": "run",
        "outputSchema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "context": {
              "type": "array",
              "items": {
                "type": "object",
                "anyOf": [
                  {
                    "type": "object",
                    "properties": {
                      "role": {
                        "type": "string",
                        "enum": [
                          "user",
                          "model",
                          "tool"
                        ]
                      },
                      "parts": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "anyOf": [
                            {
                              "type": "object",
                              "properties": {
                                "text": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "text"
                              ],
                              "additionalProperties": false
                            },
                            {
                              "type": "object",
                              "properties": {
                                "functionCall": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    },
                                    "args": {
                                      "type": "object",
                                      "properties": {},
                                      "required": [],
                                      "additionalProperties": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "required": [
                                    "name",
                                    "args"
                                  ],
                                  "additionalProperties": false
                                }
                              },
                              "required": [
                                "functionCall"
                              ],
                              "additionalProperties": false
                            }
                          ]
                        }
                      }
                    },
                    "required": [
                      "parts"
                    ],
                    "additionalProperties": false,
                    "behavior": [
                      "llm-content"
                    ]
                  },
                  {
                    "type": "object",
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string",
                            "enum": [
                              "$metadata"
                            ]
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "looper"
                            ]
                          },
                          "data": {
                            "type": "object",
                            "properties": {
                              "max": {
                                "type": "number"
                              },
                              "todo": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "task": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "task"
                                  ],
                                  "additionalProperties": false
                                }
                              },
                              "doneMarker": {
                                "type": "string"
                              },
                              "done": {
                                "type": "boolean"
                              },
                              "appendLast": {
                                "type": "boolean"
                              },
                              "returnLast": {
                                "type": "boolean"
                              },
                              "next": {
                                "type": "string"
                              }
                            },
                            "required": [],
                            "additionalProperties": false
                          }
                        },
                        "required": [
                          "role",
                          "type",
                          "data"
                        ],
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string",
                            "enum": [
                              "$metadata"
                            ]
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "split"
                            ]
                          },
                          "data": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "start",
                                  "next",
                                  "end"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "type",
                              "id"
                            ],
                            "additionalProperties": false
                          }
                        },
                        "required": [
                          "role",
                          "type",
                          "data"
                        ],
                        "additionalProperties": false
                      }
                    ]
                  }
                ],
                "behavior": [
                  "llm-content"
                ]
              }
            }
          }
        },
        "raw": true
      },
      "metadata": {
        "title": "Add Split Start",
        "description": "Marking the start of parallel processing in the context"
      }
    },
    {
      "id": "runJavascript-3",
      "type": "runJavascript",
      "configuration": {
        "code": "const run = ({context,progress})=>{const contents=Array.isArray(context)?context:[context];const plans=Array.isArray(progress)?progress:[progress];const last=plans[0];if(!last||!last.next){return{context}}const lastLooperMarker=contents.findLastIndex(item=>item.role===\"$metadata\"&&item.type===\"looper\");if(lastLooperMarker>=0){const pastLooper=contents.slice(lastLooperMarker);const hasModel=pastLooper.some(item=>item.role===\"model\");if(hasModel){return{context:contents}}}contents.push({role:\"user\",parts:[{text:last.next}]});return{context:contents}};",
        "inputSchema": {
          "type": "object",
          "properties": {
            "context": {
              "type": "array",
              "items": {
                "type": "object",
                "anyOf": [
                  {
                    "type": "object",
                    "properties": {
                      "role": {
                        "type": "string",
                        "enum": [
                          "user",
                          "model",
                          "tool"
                        ]
                      },
                      "parts": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "anyOf": [
                            {
                              "type": "object",
                              "properties": {
                                "text": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "text"
                              ],
                              "additionalProperties": false
                            },
                            {
                              "type": "object",
                              "properties": {
                                "functionCall": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    },
                                    "args": {
                                      "type": "object",
                                      "properties": {},
                                      "required": [],
                                      "additionalProperties": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "required": [
                                    "name",
                                    "args"
                                  ],
                                  "additionalProperties": false
                                }
                              },
                              "required": [
                                "functionCall"
                              ],
                              "additionalProperties": false
                            }
                          ]
                        }
                      }
                    },
                    "required": [
                      "parts"
                    ],
                    "additionalProperties": false,
                    "behavior": [
                      "llm-content"
                    ]
                  },
                  {
                    "type": "object",
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string",
                            "enum": [
                              "$metadata"
                            ]
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "looper"
                            ]
                          },
                          "data": {
                            "type": "object",
                            "properties": {
                              "max": {
                                "type": "number"
                              },
                              "todo": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "task": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "task"
                                  ],
                                  "additionalProperties": false
                                }
                              },
                              "doneMarker": {
                                "type": "string"
                              },
                              "done": {
                                "type": "boolean"
                              },
                              "appendLast": {
                                "type": "boolean"
                              },
                              "returnLast": {
                                "type": "boolean"
                              },
                              "next": {
                                "type": "string"
                              }
                            },
                            "required": [],
                            "additionalProperties": false
                          }
                        },
                        "required": [
                          "role",
                          "type",
                          "data"
                        ],
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string",
                            "enum": [
                              "$metadata"
                            ]
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "split"
                            ]
                          },
                          "data": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "start",
                                  "next",
                                  "end"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "type",
                              "id"
                            ],
                            "additionalProperties": false
                          }
                        },
                        "required": [
                          "role",
                          "type",
                          "data"
                        ],
                        "additionalProperties": false
                      }
                    ]
                  }
                ],
                "behavior": [
                  "llm-content"
                ]
              }
            },
            "progress": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "max": {
                    "type": "number"
                  },
                  "todo": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "task": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "task"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "doneMarker": {
                    "type": "string"
                  },
                  "done": {
                    "type": "boolean"
                  },
                  "appendLast": {
                    "type": "boolean"
                  },
                  "returnLast": {
                    "type": "boolean"
                  },
                  "next": {
                    "type": "string"
                  }
                },
                "required": [
                  "next"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "name": "run",
        "outputSchema": {
          "type": "object",
          "properties": {
            "context": {
              "type": "array",
              "items": {
                "type": "object",
                "anyOf": [
                  {
                    "type": "object",
                    "properties": {
                      "role": {
                        "type": "string",
                        "enum": [
                          "user",
                          "model",
                          "tool"
                        ]
                      },
                      "parts": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "anyOf": [
                            {
                              "type": "object",
                              "properties": {
                                "text": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "text"
                              ],
                              "additionalProperties": false
                            },
                            {
                              "type": "object",
                              "properties": {
                                "functionCall": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    },
                                    "args": {
                                      "type": "object",
                                      "properties": {},
                                      "required": [],
                                      "additionalProperties": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "required": [
                                    "name",
                                    "args"
                                  ],
                                  "additionalProperties": false
                                }
                              },
                              "required": [
                                "functionCall"
                              ],
                              "additionalProperties": false
                            }
                          ]
                        }
                      }
                    },
                    "required": [
                      "parts"
                    ],
                    "additionalProperties": false,
                    "behavior": [
                      "llm-content"
                    ]
                  },
                  {
                    "type": "object",
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string",
                            "enum": [
                              "$metadata"
                            ]
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "looper"
                            ]
                          },
                          "data": {
                            "type": "object",
                            "properties": {
                              "max": {
                                "type": "number"
                              },
                              "todo": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "task": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "task"
                                  ],
                                  "additionalProperties": false
                                }
                              },
                              "doneMarker": {
                                "type": "string"
                              },
                              "done": {
                                "type": "boolean"
                              },
                              "appendLast": {
                                "type": "boolean"
                              },
                              "returnLast": {
                                "type": "boolean"
                              },
                              "next": {
                                "type": "string"
                              }
                            },
                            "required": [],
                            "additionalProperties": false
                          }
                        },
                        "required": [
                          "role",
                          "type",
                          "data"
                        ],
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string",
                            "enum": [
                              "$metadata"
                            ]
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "split"
                            ]
                          },
                          "data": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "start",
                                  "next",
                                  "end"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "type",
                              "id"
                            ],
                            "additionalProperties": false
                          }
                        },
                        "required": [
                          "role",
                          "type",
                          "data"
                        ],
                        "additionalProperties": false
                      }
                    ]
                  }
                ],
                "behavior": [
                  "llm-content"
                ]
              }
            }
          }
        },
        "raw": true
      },
      "metadata": {
        "title": "Add Looper Task",
        "description": "If there is a pending Looper task, add it."
      }
    },
    {
      "id": "runJavascript-4",
      "type": "runJavascript",
      "configuration": {
        "code": "const run = ({context,toAdd})=>{if(!context)throw new Error(\"Context is required\");const existing=Array.isArray(context)?context:[context];const incoming=toAdd;if(!incoming.parts){const containsUserRole=existing.filter(item=>item.role!==\"model\"&&item.role!==\"$metadata\").length>0;if(!containsUserRole){return{context:[...existing,{role:\"user\",parts:[{text:\"Do your magic\"}]}]}}return{context:existing}}if(!incoming.role){incoming.role=\"user\"}const last=existing[existing.length-1];if(!last){return{context:[incoming]}}if(last.role!==incoming.role){return{context:[...existing,incoming]}}else{const result=structuredClone(existing);const index=result.length-1;result[index].parts.push(...incoming.parts);return{context:result}}};",
        "inputSchema": {
          "type": "object",
          "properties": {
            "context": {
              "type": "array",
              "items": {
                "type": "object",
                "anyOf": [
                  {
                    "type": "object",
                    "properties": {
                      "role": {
                        "type": "string",
                        "enum": [
                          "user",
                          "model",
                          "tool"
                        ]
                      },
                      "parts": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "anyOf": [
                            {
                              "type": "object",
                              "properties": {
                                "text": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "text"
                              ],
                              "additionalProperties": false
                            },
                            {
                              "type": "object",
                              "properties": {
                                "functionCall": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    },
                                    "args": {
                                      "type": "object",
                                      "properties": {},
                                      "required": [],
                                      "additionalProperties": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "required": [
                                    "name",
                                    "args"
                                  ],
                                  "additionalProperties": false
                                }
                              },
                              "required": [
                                "functionCall"
                              ],
                              "additionalProperties": false
                            }
                          ]
                        }
                      }
                    },
                    "required": [
                      "parts"
                    ],
                    "additionalProperties": false,
                    "behavior": [
                      "llm-content"
                    ]
                  },
                  {
                    "type": "object",
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string",
                            "enum": [
                              "$metadata"
                            ]
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "looper"
                            ]
                          },
                          "data": {
                            "type": "object",
                            "properties": {
                              "max": {
                                "type": "number"
                              },
                              "todo": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "task": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "task"
                                  ],
                                  "additionalProperties": false
                                }
                              },
                              "doneMarker": {
                                "type": "string"
                              },
                              "done": {
                                "type": "boolean"
                              },
                              "appendLast": {
                                "type": "boolean"
                              },
                              "returnLast": {
                                "type": "boolean"
                              },
                              "next": {
                                "type": "string"
                              }
                            },
                            "required": [],
                            "additionalProperties": false
                          }
                        },
                        "required": [
                          "role",
                          "type",
                          "data"
                        ],
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string",
                            "enum": [
                              "$metadata"
                            ]
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "split"
                            ]
                          },
                          "data": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "start",
                                  "next",
                                  "end"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "type",
                              "id"
                            ],
                            "additionalProperties": false
                          }
                        },
                        "required": [
                          "role",
                          "type",
                          "data"
                        ],
                        "additionalProperties": false
                      }
                    ]
                  }
                ],
                "behavior": [
                  "llm-content"
                ]
              }
            },
            "toAdd": {
              "type": "object",
              "properties": {
                "role": {
                  "type": "string",
                  "enum": [
                    "user",
                    "model",
                    "tool"
                  ]
                },
                "parts": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "text": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "text"
                        ],
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {
                          "functionCall": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "args": {
                                "type": "object",
                                "properties": {},
                                "required": [],
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            },
                            "required": [
                              "name",
                              "args"
                            ],
                            "additionalProperties": false
                          }
                        },
                        "required": [
                          "functionCall"
                        ],
                        "additionalProperties": false
                      }
                    ]
                  }
                }
              },
              "required": [
                "parts"
              ],
              "additionalProperties": false,
              "behavior": [
                "llm-content",
                "config"
              ]
            }
          }
        },
        "name": "run",
        "outputSchema": {
          "type": "object",
          "properties": {
            "context": {
              "type": "array",
              "items": {
                "type": "object",
                "anyOf": [
                  {
                    "type": "object",
                    "properties": {
                      "role": {
                        "type": "string",
                        "enum": [
                          "user",
                          "model",
                          "tool"
                        ]
                      },
                      "parts": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "anyOf": [
                            {
                              "type": "object",
                              "properties": {
                                "text": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "text"
                              ],
                              "additionalProperties": false
                            },
                            {
                              "type": "object",
                              "properties": {
                                "functionCall": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    },
                                    "args": {
                                      "type": "object",
                                      "properties": {},
                                      "required": [],
                                      "additionalProperties": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "required": [
                                    "name",
                                    "args"
                                  ],
                                  "additionalProperties": false
                                }
                              },
                              "required": [
                                "functionCall"
                              ],
                              "additionalProperties": false
                            }
                          ]
                        }
                      }
                    },
                    "required": [
                      "parts"
                    ],
                    "additionalProperties": false,
                    "behavior": [
                      "llm-content"
                    ]
                  },
                  {
                    "type": "object",
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string",
                            "enum": [
                              "$metadata"
                            ]
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "looper"
                            ]
                          },
                          "data": {
                            "type": "object",
                            "properties": {
                              "max": {
                                "type": "number"
                              },
                              "todo": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "task": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "task"
                                  ],
                                  "additionalProperties": false
                                }
                              },
                              "doneMarker": {
                                "type": "string"
                              },
                              "done": {
                                "type": "boolean"
                              },
                              "appendLast": {
                                "type": "boolean"
                              },
                              "returnLast": {
                                "type": "boolean"
                              },
                              "next": {
                                "type": "string"
                              }
                            },
                            "required": [],
                            "additionalProperties": false
                          }
                        },
                        "required": [
                          "role",
                          "type",
                          "data"
                        ],
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string",
                            "enum": [
                              "$metadata"
                            ]
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "split"
                            ]
                          },
                          "data": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "start",
                                  "next",
                                  "end"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "type",
                              "id"
                            ],
                            "additionalProperties": false
                          }
                        },
                        "required": [
                          "role",
                          "type",
                          "data"
                        ],
                        "additionalProperties": false
                      }
                    ]
                  }
                ],
                "behavior": [
                  "llm-content"
                ]
              }
            }
          }
        },
        "raw": true
      },
      "metadata": {
        "title": "Add Task",
        "description": "Adding task to the prompt."
      }
    },
    {
      "id": "runJavascript-5",
      "type": "runJavascript",
      "configuration": {
        "code": "const run = ({context,forkOutputs})=>{const fork=forkOutputs;const existing=Array.isArray(context)?context:[context];const progress=[];for(let i=existing.length-1;i>=0;i--){const item=existing[i];if(item.role===\"$metadata\"&&item.type===\"looper\"){progress.push(item.data)}}if(fork){if(progress.length){return{progress}}else{return{context}}}else{return{context,progress}}};",
        "forkOutputs": false,
        "inputSchema": {
          "type": "object",
          "properties": {
            "context": {
              "type": "array",
              "items": {
                "type": "object",
                "anyOf": [
                  {
                    "type": "object",
                    "properties": {
                      "role": {
                        "type": "string",
                        "enum": [
                          "user",
                          "model",
                          "tool"
                        ]
                      },
                      "parts": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "anyOf": [
                            {
                              "type": "object",
                              "properties": {
                                "text": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "text"
                              ],
                              "additionalProperties": false
                            },
                            {
                              "type": "object",
                              "properties": {
                                "functionCall": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    },
                                    "args": {
                                      "type": "object",
                                      "properties": {},
                                      "required": [],
                                      "additionalProperties": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "required": [
                                    "name",
                                    "args"
                                  ],
                                  "additionalProperties": false
                                }
                              },
                              "required": [
                                "functionCall"
                              ],
                              "additionalProperties": false
                            }
                          ]
                        }
                      }
                    },
                    "required": [
                      "parts"
                    ],
                    "additionalProperties": false,
                    "behavior": [
                      "llm-content"
                    ]
                  },
                  {
                    "type": "object",
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string",
                            "enum": [
                              "$metadata"
                            ]
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "looper"
                            ]
                          },
                          "data": {
                            "type": "object",
                            "properties": {
                              "max": {
                                "type": "number"
                              },
                              "todo": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "task": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "task"
                                  ],
                                  "additionalProperties": false
                                }
                              },
                              "doneMarker": {
                                "type": "string"
                              },
                              "done": {
                                "type": "boolean"
                              },
                              "appendLast": {
                                "type": "boolean"
                              },
                              "returnLast": {
                                "type": "boolean"
                              },
                              "next": {
                                "type": "string"
                              }
                            },
                            "required": [],
                            "additionalProperties": false
                          }
                        },
                        "required": [
                          "role",
                          "type",
                          "data"
                        ],
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string",
                            "enum": [
                              "$metadata"
                            ]
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "split"
                            ]
                          },
                          "data": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "start",
                                  "next",
                                  "end"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "type",
                              "id"
                            ],
                            "additionalProperties": false
                          }
                        },
                        "required": [
                          "role",
                          "type",
                          "data"
                        ],
                        "additionalProperties": false
                      }
                    ]
                  }
                ],
                "behavior": [
                  "llm-content"
                ]
              }
            },
            "forkOutputs": {
              "type": "boolean"
            }
          }
        },
        "name": "run",
        "outputSchema": {
          "type": "object",
          "properties": {
            "progress": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "max": {
                    "type": "number"
                  },
                  "todo": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "task": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "task"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "doneMarker": {
                    "type": "string"
                  },
                  "done": {
                    "type": "boolean"
                  },
                  "appendLast": {
                    "type": "boolean"
                  },
                  "returnLast": {
                    "type": "boolean"
                  },
                  "next": {
                    "type": "string"
                  }
                },
                "required": [
                  "next"
                ],
                "additionalProperties": false
              }
            },
            "context": {
              "type": "array",
              "items": {
                "type": "object",
                "anyOf": [
                  {
                    "type": "object",
                    "properties": {
                      "role": {
                        "type": "string",
                        "enum": [
                          "user",
                          "model",
                          "tool"
                        ]
                      },
                      "parts": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "anyOf": [
                            {
                              "type": "object",
                              "properties": {
                                "text": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "text"
                              ],
                              "additionalProperties": false
                            },
                            {
                              "type": "object",
                              "properties": {
                                "functionCall": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    },
                                    "args": {
                                      "type": "object",
                                      "properties": {},
                                      "required": [],
                                      "additionalProperties": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "required": [
                                    "name",
                                    "args"
                                  ],
                                  "additionalProperties": false
                                }
                              },
                              "required": [
                                "functionCall"
                              ],
                              "additionalProperties": false
                            }
                          ]
                        }
                      }
                    },
                    "required": [
                      "parts"
                    ],
                    "additionalProperties": false,
                    "behavior": [
                      "llm-content"
                    ]
                  },
                  {
                    "type": "object",
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string",
                            "enum": [
                              "$metadata"
                            ]
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "looper"
                            ]
                          },
                          "data": {
                            "type": "object",
                            "properties": {
                              "max": {
                                "type": "number"
                              },
                              "todo": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "task": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "task"
                                  ],
                                  "additionalProperties": false
                                }
                              },
                              "doneMarker": {
                                "type": "string"
                              },
                              "done": {
                                "type": "boolean"
                              },
                              "appendLast": {
                                "type": "boolean"
                              },
                              "returnLast": {
                                "type": "boolean"
                              },
                              "next": {
                                "type": "string"
                              }
                            },
                            "required": [],
                            "additionalProperties": false
                          }
                        },
                        "required": [
                          "role",
                          "type",
                          "data"
                        ],
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string",
                            "enum": [
                              "$metadata"
                            ]
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "split"
                            ]
                          },
                          "data": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "start",
                                  "next",
                                  "end"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "type",
                              "id"
                            ],
                            "additionalProperties": false
                          }
                        },
                        "required": [
                          "role",
                          "type",
                          "data"
                        ],
                        "additionalProperties": false
                      }
                    ]
                  }
                ],
                "behavior": [
                  "llm-content"
                ]
              }
            }
          }
        },
        "raw": true
      },
      "metadata": {
        "title": "Read Progress so far"
      }
    },
    {
      "id": "runJavascript-6",
      "type": "runJavascript",
      "configuration": {
        "code": "const run = ({context,generated})=>{if(!context)throw new Error(\"Context is required\");if(!generated)throw new Error(\"Generated is required\");const c=context;const g=generated;let doneMarker=null;for(let i=0;i<c.length;++i){const item=c[i];if(item.role===\"$metadata\"&&item.type===\"looper\"){const plan=item.data;if(plan.doneMarker){doneMarker=plan.doneMarker;break}}}if(!doneMarker){return{context:[...c,g]}}let containsMarkers=false;for(let i=0;i<g.parts.length;++i){const part=g.parts[i];if(\"text\"in part&&part.text.includes(doneMarker)){containsMarkers=true;part.text=part.text.replaceAll(doneMarker,\"\").trim();break}}if(!containsMarkers){return{context:[...c,g]}}const metadata={role:\"$metadata\",type:\"looper\",data:{done:true}};return{context:[...c,g,metadata]}};",
        "inputSchema": {
          "type": "object",
          "properties": {
            "context": {
              "type": "array",
              "items": {
                "type": "object",
                "anyOf": [
                  {
                    "type": "object",
                    "properties": {
                      "role": {
                        "type": "string",
                        "enum": [
                          "user",
                          "model",
                          "tool"
                        ]
                      },
                      "parts": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "anyOf": [
                            {
                              "type": "object",
                              "properties": {
                                "text": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "text"
                              ],
                              "additionalProperties": false
                            },
                            {
                              "type": "object",
                              "properties": {
                                "functionCall": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    },
                                    "args": {
                                      "type": "object",
                                      "properties": {},
                                      "required": [],
                                      "additionalProperties": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "required": [
                                    "name",
                                    "args"
                                  ],
                                  "additionalProperties": false
                                }
                              },
                              "required": [
                                "functionCall"
                              ],
                              "additionalProperties": false
                            }
                          ]
                        }
                      }
                    },
                    "required": [
                      "parts"
                    ],
                    "additionalProperties": false,
                    "behavior": [
                      "llm-content"
                    ]
                  },
                  {
                    "type": "object",
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string",
                            "enum": [
                              "$metadata"
                            ]
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "looper"
                            ]
                          },
                          "data": {
                            "type": "object",
                            "properties": {
                              "max": {
                                "type": "number"
                              },
                              "todo": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "task": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "task"
                                  ],
                                  "additionalProperties": false
                                }
                              },
                              "doneMarker": {
                                "type": "string"
                              },
                              "done": {
                                "type": "boolean"
                              },
                              "appendLast": {
                                "type": "boolean"
                              },
                              "returnLast": {
                                "type": "boolean"
                              },
                              "next": {
                                "type": "string"
                              }
                            },
                            "required": [],
                            "additionalProperties": false
                          }
                        },
                        "required": [
                          "role",
                          "type",
                          "data"
                        ],
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string",
                            "enum": [
                              "$metadata"
                            ]
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "split"
                            ]
                          },
                          "data": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "start",
                                  "next",
                                  "end"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "type",
                              "id"
                            ],
                            "additionalProperties": false
                          }
                        },
                        "required": [
                          "role",
                          "type",
                          "data"
                        ],
                        "additionalProperties": false
                      }
                    ]
                  }
                ],
                "behavior": [
                  "llm-content"
                ]
              }
            },
            "generated": {
              "type": "object",
              "properties": {
                "role": {
                  "type": "string",
                  "enum": [
                    "user",
                    "model",
                    "tool"
                  ]
                },
                "parts": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "text": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "text"
                        ],
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {
                          "functionCall": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "args": {
                                "type": "object",
                                "properties": {},
                                "required": [],
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            },
                            "required": [
                              "name",
                              "args"
                            ],
                            "additionalProperties": false
                          }
                        },
                        "required": [
                          "functionCall"
                        ],
                        "additionalProperties": false
                      }
                    ]
                  }
                }
              },
              "required": [
                "parts"
              ],
              "additionalProperties": false,
              "behavior": [
                "llm-content"
              ]
            },
            "text": {
              "type": "string"
            }
          }
        },
        "name": "run",
        "outputSchema": {
          "type": "object",
          "properties": {
            "context": {
              "type": "array",
              "items": {
                "type": "object",
                "anyOf": [
                  {
                    "type": "object",
                    "properties": {
                      "role": {
                        "type": "string",
                        "enum": [
                          "user",
                          "model",
                          "tool"
                        ]
                      },
                      "parts": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "anyOf": [
                            {
                              "type": "object",
                              "properties": {
                                "text": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "text"
                              ],
                              "additionalProperties": false
                            },
                            {
                              "type": "object",
                              "properties": {
                                "functionCall": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    },
                                    "args": {
                                      "type": "object",
                                      "properties": {},
                                      "required": [],
                                      "additionalProperties": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "required": [
                                    "name",
                                    "args"
                                  ],
                                  "additionalProperties": false
                                }
                              },
                              "required": [
                                "functionCall"
                              ],
                              "additionalProperties": false
                            }
                          ]
                        }
                      }
                    },
                    "required": [
                      "parts"
                    ],
                    "additionalProperties": false,
                    "behavior": [
                      "llm-content"
                    ]
                  },
                  {
                    "type": "object",
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string",
                            "enum": [
                              "$metadata"
                            ]
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "looper"
                            ]
                          },
                          "data": {
                            "type": "object",
                            "properties": {
                              "max": {
                                "type": "number"
                              },
                              "todo": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "task": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "task"
                                  ],
                                  "additionalProperties": false
                                }
                              },
                              "doneMarker": {
                                "type": "string"
                              },
                              "done": {
                                "type": "boolean"
                              },
                              "appendLast": {
                                "type": "boolean"
                              },
                              "returnLast": {
                                "type": "boolean"
                              },
                              "next": {
                                "type": "string"
                              }
                            },
                            "required": [],
                            "additionalProperties": false
                          }
                        },
                        "required": [
                          "role",
                          "type",
                          "data"
                        ],
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string",
                            "enum": [
                              "$metadata"
                            ]
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "split"
                            ]
                          },
                          "data": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "start",
                                  "next",
                                  "end"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "type",
                              "id"
                            ],
                            "additionalProperties": false
                          }
                        },
                        "required": [
                          "role",
                          "type",
                          "data"
                        ],
                        "additionalProperties": false
                      }
                    ]
                  }
                ],
                "behavior": [
                  "llm-content"
                ]
              }
            }
          }
        },
        "raw": true
      },
      "metadata": {
        "title": "Done Check",
        "description": "Checking for the 'Done' marker"
      }
    },
    {
      "id": "text-0",
      "type": "text",
      "configuration": {},
      "metadata": {
        "title": "Gemini API Call",
        "description": "Applying Gemini to do work"
      }
    },
    {
      "id": "turnBoardsToFunctions",
      "type": "map",
      "configuration": {},
      "metadata": {
        "title": "Turn Boards into Functions",
        "description": "Turning provided boards into functions"
      }
    }
  ],
  "graphs": {
    "subgraph-0": {
      "title": "Board to functions",
      "description": "Use this board to convert specified boards into function-calling signatures",
      "edges": [
        {
          "from": "curry-0",
          "to": "runJavascript-0",
          "out": "board",
          "in": "board"
        },
        {
          "from": "input-0",
          "to": "curry-0",
          "out": "context",
          "in": "context"
        },
        {
          "from": "input-0",
          "to": "curry-0",
          "out": "item",
          "in": "$board"
        },
        {
          "from": "runJavascript-0",
          "to": "output-0",
          "out": "board",
          "in": "boardURL"
        },
        {
          "from": "runJavascript-0",
          "to": "output-0",
          "out": "flags",
          "in": "flags"
        },
        {
          "from": "runJavascript-0",
          "to": "output-0",
          "out": "function",
          "in": "function"
        }
      ],
      "nodes": [
        {
          "id": "input-0",
          "type": "input",
          "configuration": {
            "schema": {
              "type": "object",
              "properties": {
                "context": {
                  "type": "object",
                  "behavior": [
                    "llm-content"
                  ],
                  "properties": {
                    "role": {
                      "type": "string",
                      "enum": [
                        "user",
                        "model",
                        "tool"
                      ]
                    },
                    "parts": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "text": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "text"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "functionCall": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "args": {
                                    "type": "object",
                                    "properties": {},
                                    "required": [],
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "required": [
                                  "name",
                                  "args"
                                ],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "functionCall"
                            ],
                            "additionalProperties": false
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "parts"
                  ],
                  "additionalProperties": false
                },
                "item": {
                  "type": "string"
                }
              },
              "required": [
                "context",
                "item"
              ]
            }
          }
        },
        {
          "id": "output-0",
          "type": "output",
          "configuration": {
            "schema": {
              "type": "object",
              "properties": {
                "boardURL": {
                  "type": "object",
                  "properties": {},
                  "required": [],
                  "additionalProperties": true,
                  "behavior": [
                    "board"
                  ]
                },
                "flags": {
                  "type": "object",
                  "properties": {
                    "inputLLMContent": {
                      "type": "string"
                    },
                    "inputLLMContentArray": {
                      "type": "string"
                    },
                    "outputLLMContent": {
                      "type": "string"
                    },
                    "outputLLMContentArray": {
                      "type": "string"
                    }
                  },
                  "required": [],
                  "additionalProperties": false
                },
                "function": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "parameters": {
                      "type": "object",
                      "behavior": [
                        "json-schema"
                      ],
                      "properties": {},
                      "required": [],
                      "additionalProperties": true
                    }
                  },
                  "required": [
                    "name"
                  ],
                  "additionalProperties": false
                }
              },
              "required": [
                "boardURL",
                "flags",
                "function"
              ]
            }
          }
        },
        {
          "id": "curry-0",
          "type": "curry",
          "configuration": {}
        },
        {
          "id": "runJavascript-0",
          "type": "runJavascript",
          "configuration": {
            "code": "const run = ({board})=>{const b=board;const inputs=b.nodes.filter(node=>node.type===\"input\")||[];const outputs=b.nodes.filter(node=>node.type===\"output\");if(outputs.length===0){throw new Error(\"No outputs found\")}const inputSchema=inputs[0]?.configuration?.schema||{};const outputSchema=outputs[0].configuration?.schema;if(!outputSchema){throw new Error(\"No output schema found\")}const properties={};const flags={};for(const key in inputSchema.properties){const property=inputSchema.properties[key];const isObject=property.type===\"object\";const isArray=property.type===\"array\";const type=isObject||isArray?\"string\":property.type;if(isObject&&property.behavior?.includes(\"llm-content\")){flags.inputLLMContent=key}else if(isArray&&property.items?.behavior?.includes(\"llm-content\")){flags.inputLLMContentArray=key;continue}const description2=property.description||property.title||\"text\";properties[key]={type,description:description2}}if(flags.inputLLMContentArray){if(flags.inputLLMContentArray!==\"context\"){const c=b.args?.context;if(c){b.args??={};b.args[flags.inputLLMContentArray]=c;delete b.args.context}}}else{delete b.args?.context}for(const key in outputSchema.properties){const property=outputSchema.properties[key];const isObject=property.type===\"object\";const isArray=property.type===\"array\";if(isObject&&property.behavior?.includes(\"llm-content\")){flags.outputLLMContent=key}else if(isArray&&property.items?.behavior?.includes(\"llm-content\")){flags.outputLLMContentArray=key}}const name=b.title?.replace(/\\W/g,\"_\")||\"function\";const description=b.description;const parameters=Object.entries(properties).length>0?{type:\"object\",properties}:void 0;const f={name,description};if(parameters){f.parameters=parameters}return{function:f,returns:outputSchema,flags,board}};",
            "inputSchema": {
              "type": "object",
              "properties": {
                "board": {
                  "type": "object",
                  "properties": {},
                  "required": [],
                  "additionalProperties": true
                }
              }
            },
            "name": "run",
            "outputSchema": {
              "type": "object",
              "properties": {
                "function": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "parameters": {
                      "type": "object",
                      "behavior": [
                        "json-schema"
                      ],
                      "properties": {},
                      "required": [],
                      "additionalProperties": true
                    }
                  },
                  "required": [
                    "name"
                  ],
                  "additionalProperties": false
                },
                "board": {
                  "type": "object",
                  "properties": {},
                  "required": [],
                  "additionalProperties": true,
                  "behavior": [
                    "board"
                  ]
                },
                "flags": {
                  "type": "object",
                  "properties": {
                    "inputLLMContent": {
                      "type": "string"
                    },
                    "inputLLMContentArray": {
                      "type": "string"
                    },
                    "outputLLMContent": {
                      "type": "string"
                    },
                    "outputLLMContentArray": {
                      "type": "string"
                    }
                  },
                  "required": [],
                  "additionalProperties": false
                }
              }
            },
            "raw": true
          },
          "metadata": {
            "title": "Get Function Signature from board"
          }
        }
      ]
    },
    "subgraph-1": {
      "title": "Invoke Board With Args",
      "description": "Takes one item of `boardInvocationAssembler` output and invokes it as a board with arguments.",
      "version": "0.0.1",
      "edges": [
        {
          "from": "input-0",
          "to": "runJavascript-2",
          "out": "item",
          "in": "item"
        },
        {
          "from": "input-0",
          "to": "runJavascript-3",
          "out": "item",
          "in": "item"
        },
        {
          "from": "invoke-0",
          "to": "runJavascript-1",
          "out": "*",
          "in": ""
        },
        {
          "from": "runJavascript-0",
          "to": "output-0",
          "out": "item",
          "in": "item"
        },
        {
          "from": "runJavascript-1",
          "to": "runJavascript-0",
          "out": "result",
          "in": "result"
        },
        {
          "from": "runJavascript-2",
          "to": "invoke-0",
          "out": "*",
          "in": ""
        },
        {
          "from": "runJavascript-3",
          "to": "runJavascript-0",
          "out": "flags",
          "in": "flags"
        }
      ],
      "nodes": [
        {
          "id": "input-0",
          "type": "input",
          "configuration": {
            "schema": {
              "type": "object",
              "properties": {
                "item": {
                  "type": "object",
                  "properties": {
                    "$flags": {
                      "type": [
                        "array",
                        "boolean",
                        "null",
                        "number",
                        "object",
                        "string"
                      ]
                    }
                  },
                  "required": [
                    "$flags"
                  ],
                  "additionalProperties": true
                }
              },
              "required": [
                "item"
              ]
            }
          }
        },
        {
          "id": "output-0",
          "type": "output",
          "configuration": {
            "schema": {
              "type": "object",
              "properties": {
                "item": {
                  "type": [
                    "array",
                    "boolean",
                    "null",
                    "number",
                    "object",
                    "string"
                  ]
                }
              },
              "required": [
                "item"
              ]
            }
          }
        },
        {
          "id": "invoke-0",
          "type": "invoke",
          "configuration": {},
          "metadata": {
            "title": "Invoke board",
            "description": "Invoking the board with unpacked arguments"
          }
        },
        {
          "id": "runJavascript-0",
          "type": "runJavascript",
          "configuration": {
            "code": "const run = ({result,flags})=>{let contentDetected=false;const inputs=result;const item=[];const f=flags;if(f){if(f.outputLLMContent){const content=inputs[f.outputLLMContent];content.role=\"tool\";item.push(content);contentDetected=true}else if(f.outputLLMContentArray){const contentArray=inputs[f.outputLLMContentArray];contentArray.forEach(content=>{if(content.role!==\"$metadata\"){content.role=\"tool\"}item.push(content)});contentDetected=true}}else{for(const key in inputs){const input=inputs[key];if(input!==null&&typeof input===\"object\"&&\"content\"in input){const content=input.content;if(content.parts&&Array.isArray(content.parts)){content.role=\"tool\";item.push(content);contentDetected=true}}}}if(!contentDetected){const text=JSON.stringify(inputs);item.push({parts:[{text}],role:\"tool\"})}return{item}};",
            "inputSchema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": [
                    "array",
                    "boolean",
                    "null",
                    "number",
                    "object",
                    "string"
                  ]
                },
                "flags": {
                  "type": [
                    "array",
                    "boolean",
                    "null",
                    "number",
                    "object",
                    "string"
                  ]
                }
              }
            },
            "name": "run",
            "outputSchema": {
              "type": "object",
              "properties": {
                "item": {
                  "type": [
                    "array",
                    "boolean",
                    "null",
                    "number",
                    "object",
                    "string"
                  ]
                }
              }
            },
            "raw": true
          },
          "metadata": {
            "title": "Format results",
            "description": "Formatting results"
          }
        },
        {
          "id": "runJavascript-1",
          "type": "runJavascript",
          "configuration": {
            "code": "const run = result=>({result});",
            "inputSchema": {
              "type": "object",
              "properties": {
                "": {
                  "type": [
                    "array",
                    "boolean",
                    "null",
                    "number",
                    "object",
                    "string"
                  ]
                }
              }
            },
            "name": "run",
            "outputSchema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": [
                    "array",
                    "boolean",
                    "null",
                    "number",
                    "object",
                    "string"
                  ]
                }
              }
            },
            "raw": true
          },
          "metadata": {
            "title": "Pack results",
            "description": "Packing results"
          }
        },
        {
          "id": "runJavascript-2",
          "type": "runJavascript",
          "configuration": {
            "code": "const run = ({item:item2})=>{const{$flags,...result}=item2;return result};",
            "inputSchema": {
              "type": "object",
              "properties": {
                "item": {
                  "type": "object",
                  "properties": {
                    "$flags": {
                      "type": [
                        "array",
                        "boolean",
                        "null",
                        "number",
                        "object",
                        "string"
                      ]
                    }
                  },
                  "required": [
                    "$flags"
                  ],
                  "additionalProperties": true
                }
              }
            },
            "name": "run",
            "outputSchema": {
              "type": "object",
              "properties": {}
            },
            "raw": true
          },
          "metadata": {
            "title": "Unpack args",
            "description": "Unpacking board arguments"
          }
        },
        {
          "id": "runJavascript-3",
          "type": "runJavascript",
          "configuration": {
            "code": "const run = ({item:item2})=>{const{$flags}=item2;return{flags:$flags}};",
            "inputSchema": {
              "type": "object",
              "properties": {
                "item": {
                  "type": "object",
                  "properties": {
                    "$flags": {
                      "type": [
                        "array",
                        "boolean",
                        "null",
                        "number",
                        "object",
                        "string"
                      ]
                    }
                  },
                  "required": [
                    "$flags"
                  ],
                  "additionalProperties": true
                }
              }
            },
            "name": "run",
            "outputSchema": {
              "type": "object",
              "properties": {
                "flags": {
                  "type": [
                    "array",
                    "boolean",
                    "null",
                    "number",
                    "object",
                    "string"
                  ]
                }
              }
            },
            "raw": true
          },
          "metadata": {
            "title": "Get flags",
            "description": "Getting flags for the board invocation"
          }
        }
      ]
    }
  }
}