{
  "title": "Human",
  "description": "A human in the loop. Use this node to insert a real person (user input) into your team of synthetic workers.",
  "$schema": "https://raw.githubusercontent.com/breadboard-ai/breadboard/@google-labs/breadboard-schema@1.4.0/packages/schema/breadboard.schema.json",
  "version": "0.0.1",
  "edges": [
    {
      "from": "appendContext",
      "to": "output-2",
      "out": "context",
      "in": "context"
    },
    {
      "from": "input",
      "to": "appendContext",
      "out": "text",
      "in": "text"
    },
    {
      "from": "input",
      "to": "output-2",
      "out": "text",
      "in": "text"
    },
    {
      "from": "createSchema",
      "to": "input",
      "out": "schema",
      "in": "schema"
    },
    {
      "from": "createSchema",
      "to": "appendContext",
      "out": "context",
      "in": "context"
    },
    {
      "from": "input-1",
      "to": "maybeOutputRouter",
      "out": "context",
      "in": "context"
    },
    {
      "from": "input-1",
      "to": "createSchema",
      "out": "title",
      "in": "title"
    },
    {
      "from": "input-1",
      "to": "createSchema",
      "out": "description",
      "in": "description"
    },
    {
      "from": "maybeOutputRouter",
      "to": "createSchema",
      "out": "context",
      "in": "context"
    },
    {
      "from": "maybeOutputRouter",
      "to": "output",
      "out": "output",
      "in": "output"
    }
  ],
  "nodes": [
    {
      "id": "output-2",
      "type": "output",
      "configuration": {
        "schema": {
          "type": "object",
          "properties": {
            "context": {
              "type": "array",
              "items": {
                "type": "object",
                "behavior": [
                  "llm-content"
                ]
              },
              "title": "Context"
            },
            "text": {
              "title": "Text",
              "type": "string"
            }
          }
        }
      }
    },
    {
      "id": "appendContext",
      "type": "invoke",
      "configuration": {
        "$board": "#appendContext"
      },
      "metadata": {
        "title": "Append Context",
        "description": "Appending user input to the conversation context"
      }
    },
    {
      "id": "input",
      "type": "input",
      "configuration": {
        "schema": {
          "type": "object",
          "properties": {
            "text": {
              "title": "Text",
              "type": "string"
            }
          },
          "required": [
            "text"
          ]
        }
      },
      "metadata": {
        "title": "Input",
        "description": "Asking user for input"
      }
    },
    {
      "id": "createSchema",
      "type": "invoke",
      "configuration": {
        "$board": "#createSchema"
      },
      "metadata": {
        "title": "Create Schema",
        "description": "Creating a schema for user input"
      }
    },
    {
      "id": "input-1",
      "type": "input",
      "configuration": {
        "schema": {
          "type": "object",
          "properties": {
            "context": {
              "title": "Context",
              "description": "Incoming conversation context",
              "type": "array",
              "items": {
                "type": "object",
                "behavior": [
                  "llm-content"
                ]
              },
              "examples": [
                "[]"
              ],
              "default": "[]"
            },
            "title": {
              "title": "Title",
              "description": "The title to ask",
              "default": "User",
              "type": "string"
            },
            "description": {
              "title": "Description",
              "description": "The description of what to ask",
              "default": "User's question or request",
              "type": "string"
            }
          },
          "required": []
        }
      }
    },
    {
      "id": "maybeOutputRouter",
      "type": "invoke",
      "configuration": {
        "$board": "#maybeOutputRouter"
      },
      "metadata": {
        "title": "Maybe Output",
        "description": "Checking if the last message was from the model"
      }
    },
    {
      "id": "output",
      "type": "output",
      "configuration": {
        "schema": {
          "type": "object",
          "behavior": [
            "bubble"
          ],
          "properties": {
            "output": {
              "type": "string",
              "title": "Output",
              "description": "The output to display"
            }
          }
        }
      },
      "metadata": {
        "title": "Output",
        "description": "Displaying the output the user."
      }
    }
  ],
  "kits": [],
  "graphs": {
    "appendContext": {
      "edges": [
        {
          "from": "appendContext-input",
          "to": "appendContext-run",
          "out": "*"
        },
        {
          "from": "appendContext-run",
          "to": "appendContext-output",
          "out": "*"
        }
      ],
      "nodes": [
        {
          "id": "appendContext-input",
          "type": "input",
          "configuration": {}
        },
        {
          "id": "appendContext-run",
          "type": "runJavascript",
          "configuration": {
            "code": "function appendContext({ context, text }) {\n    return {\n      context: [...context || [], { role: \"user\", parts: [{ text }] }]\n    };\n  }",
            "name": "appendContext",
            "raw": true
          }
        },
        {
          "id": "appendContext-output",
          "type": "output",
          "configuration": {}
        }
      ]
    },
    "createSchema": {
      "edges": [
        {
          "from": "createSchema-input",
          "to": "createSchema-run",
          "out": "*"
        },
        {
          "from": "createSchema-run",
          "to": "createSchema-output",
          "out": "*"
        }
      ],
      "nodes": [
        {
          "id": "createSchema-input",
          "type": "input",
          "configuration": {}
        },
        {
          "id": "createSchema-run",
          "type": "runJavascript",
          "configuration": {
            "code": "function createSchema({ title, description, context }) {\n    const schema2 = {\n      type: \"object\",\n      properties: {\n        text: {\n          title,\n          description,\n          behavior: [\"transient\"]\n        }\n      }\n    };\n    return { schema: schema2, context };\n  }",
            "name": "createSchema",
            "raw": true
          }
        },
        {
          "id": "createSchema-output",
          "type": "output",
          "configuration": {}
        }
      ]
    },
    "maybeOutputRouter": {
      "edges": [
        {
          "from": "maybeOutputRouter-input",
          "to": "maybeOutputRouter-run",
          "out": "*"
        },
        {
          "from": "maybeOutputRouter-run",
          "to": "maybeOutputRouter-output",
          "out": "*"
        }
      ],
      "nodes": [
        {
          "id": "maybeOutputRouter-input",
          "type": "input",
          "configuration": {}
        },
        {
          "id": "maybeOutputRouter-run",
          "type": "runJavascript",
          "configuration": {
            "code": "function maybeOutputRouter({ context }) {\n  if (Array.isArray(context) && context.length > 0) {\n    const lastItem = context[context.length - 1];\n    if (lastItem.role === \"model\") {\n      const output = lastItem.parts.map((item) => item.text).join(\"/n\");\n      return { output, context };\n    }\n  }\n  return { context };\n}",
            "name": "maybeOutputRouter",
            "raw": true
          }
        },
        {
          "id": "maybeOutputRouter-output",
          "type": "output",
          "configuration": {}
        }
      ]
    }
  }
}