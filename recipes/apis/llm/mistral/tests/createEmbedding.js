import { base, recipe } from "@google-labs/breadboard";

import { core } from "@google-labs/core-kit";
import { starter } from "@google-labs/llm-starter";

/*
To run this: 

1. Create an environment variable called MISTRAL_API_KEY with your API key
2. npx breadboard run createEmbedding.js --kit @google-labs/core-kit --kit @google-labs/llm-starter -i "{ \"api_inputs\": {
      \"authentication\": {
        \"bearer\": \"MISTRAL_API_KEY\"
      },
      \"application/json\": {
        \"encoding_format\": \"float\",
        \"input\": [
          \"Hello, my name is Paul and I'm not a large language model. I'm a real boy.\"],
        \"model\": \"mistral-embed\"
      }
    }
}"
*/

const metaData = {
  title: "Create Embedding",
  description:
    "Creates an embedding from the Mistral API (Generated by OpenAPI recipe)",
  version: "0.0.3",
};

/*
 Note currently the tool to generate the OpenAPI spec does not support the security Scheme, therefore secrets will not work, you have to use an input called key.
*/
export default await recipe(() => {
  const input = base.input({ $id: "input" });

  return core.invoke({
    path: "../createEmbedding.json",
    input: input.api_inputs,
    ...input,
    ...starter.secrets({ keys: ["MISTRAL_API_KEY"] }),
  });
}).serialize(metaData);
