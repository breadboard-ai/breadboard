{
  "title": "Text Generator",
  "description": "This is a text generator. It can generate text using various LLMs. Currently, it supports the follwogin models: Google Gemini Pro, Google PaLM text-bison-001, OpenAI GPT-3.5 Turbo, and a mock model.",
  "version": "0.0.1",
  "edges": [
    {
      "from": "input",
      "to": "gemini",
      "out": "useStreaming",
      "in": "useStreaming"
    },
    {
      "from": "input",
      "to": "gemini",
      "out": "text",
      "in": "text"
    },
    {
      "from": "gemini",
      "to": "textOutput",
      "out": "text",
      "in": "text"
    },
    {
      "from": "gemini",
      "to": "streamOutput",
      "out": "stream",
      "in": "stream"
    },
    {
      "from": "secrets-2",
      "to": "palm-generateText-1",
      "out": "PALM_KEY",
      "in": "PALM_KEY"
    },
    {
      "from": "input",
      "to": "switchModel",
      "out": "MODEL",
      "in": "MODEL"
    },
    {
      "from": "input",
      "to": "switchModel",
      "out": "useStreaming",
      "in": "useStreaming"
    },
    {
      "from": "input",
      "to": "gpt35",
      "out": "useStreaming",
      "in": "useStreaming"
    },
    {
      "from": "gpt35",
      "to": "textOutput",
      "out": "text",
      "in": "text"
    },
    {
      "from": "input",
      "to": "gpt35",
      "out": "text",
      "in": "text"
    },
    {
      "from": "gpt35",
      "to": "streamOutput",
      "out": "stream",
      "in": "stream"
    },
    {
      "from": "palm-generateText-1",
      "to": "textOutput",
      "out": "completion",
      "in": "text"
    },
    {
      "from": "input",
      "to": "palm-generateText-1",
      "out": "text",
      "in": "text"
    },
    {
      "from": "input",
      "to": "mockModel",
      "out": "useStreaming",
      "in": "useStreaming"
    },
    {
      "from": "mockModel",
      "to": "textOutput",
      "out": "text",
      "in": "text"
    },
    {
      "from": "input",
      "to": "mockModel",
      "out": "text",
      "in": "text"
    },
    {
      "from": "switchModel",
      "to": "textOutput",
      "out": "other",
      "in": "text"
    },
    {
      "from": "switchModel",
      "to": "gemini",
      "out": "gemini",
      "in": "gemini"
    },
    {
      "from": "switchModel",
      "to": "palm-generateText-1",
      "out": "palm",
      "in": "palm"
    },
    {
      "from": "switchModel",
      "to": "gpt35",
      "out": "gpt35",
      "in": "gpt35"
    },
    {
      "from": "switchModel",
      "to": "mockModel",
      "out": "mock",
      "in": "mock"
    },
    {
      "from": "mockModel",
      "to": "streamOutput",
      "out": "stream",
      "in": "stream"
    }
  ],
  "nodes": [
    {
      "id": "input",
      "type": "input",
      "configuration": {
        "schema": {
          "type": "object",
          "properties": {
            "text": {
              "type": "string",
              "title": "Text",
              "description": "The text to generate"
            },
            "useStreaming": {
              "type": "boolean",
              "title": "Stream",
              "description": "Whether to stream the output",
              "default": "false"
            },
            "MODEL": {
              "type": "string",
              "title": "Model",
              "description": "The model to use for generation",
              "enum": [
                "Gemini Pro",
                "GPT 3.5 Turbo",
                "PaLM",
                "mock"
              ],
              "examples": [
                "Gemini Pro"
              ]
            }
          },
          "required": [
            "text"
          ]
        }
      }
    },
    {
      "id": "textOutput",
      "type": "output",
      "configuration": {
        "schema": {
          "type": "object",
          "properties": {
            "text": {
              "type": "string",
              "title": "Text",
              "description": "The generated text"
            }
          }
        }
      }
    },
    {
      "id": "streamOutput",
      "type": "output",
      "configuration": {
        "schema": {
          "type": "object",
          "properties": {
            "stream": {
              "type": "object",
              "title": "Stream",
              "description": "The generated text",
              "format": "stream"
            }
          }
        }
      }
    },
    {
      "id": "switchModel",
      "type": "runJavascript",
      "configuration": {
        "name": "switchModel",
        "code": "function switchModel({MODEL,useStreaming}){switch(MODEL){case\"Gemini Pro\":return{gemini:true};case\"PaLM\":if(useStreaming){return{other:`Streaming is not supported for ${MODEL}`}}return{palm:true};case\"mock\":return{mock:true};case\"GPT 3.5 Turbo\":return{gpt35:true};default:return{other:`Unsupported model: ${MODEL}`}}}",
        "raw": true
      }
    },
    {
      "id": "gemini",
      "type": "invoke",
      "configuration": {
        "path": "gemini-generator.json"
      }
    },
    {
      "id": "palm-generateText-1",
      "type": "palm-generateText"
    },
    {
      "id": "secrets-2",
      "type": "secrets",
      "configuration": {
        "keys": [
          "PALM_KEY"
        ]
      }
    },
    {
      "id": "gpt35",
      "type": "invoke",
      "configuration": {
        "path": "openai-gpt-35-turbo.json"
      }
    },
    {
      "id": "mockModel",
      "type": "invoke",
      "configuration": {
        "path": "mock-text-generator.json"
      }
    }
  ],
  "kits": [
    {
      "url": "npm:@google-labs/palm-kit"
    },
    {
      "url": "npm:@google-labs/llm-starter"
    },
    {
      "url": "npm:@google-labs/core-kit"
    }
  ]
}