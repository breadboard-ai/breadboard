{
  "title": "Board Caller",
  "description": "Takes a tool-calling-capable generator and a list of board URLs, and helps generator call these boards as tools",
  "version": "0.0.6",
  "edges": [
    {
      "from": "lambda-1",
      "to": "invoke-2",
      "constant": true,
      "out": "board",
      "in": "board"
    },
    {
      "from": "noStreaming",
      "to": "generate",
      "out": "useStreaming",
      "in": "useStreaming"
    },
    {
      "from": "generate",
      "to": "formatOutput",
      "out": "toolCalls",
      "in": "toolCalls"
    },
    {
      "from": "parameters",
      "to": "generate",
      "out": "text",
      "in": "text"
    },
    {
      "from": "parameters",
      "to": "generate",
      "out": "context",
      "in": "context"
    },
    {
      "from": "invoke-2",
      "to": "generate",
      "out": "tools",
      "in": "tools"
    },
    {
      "from": "invoke-2",
      "to": "getBoardArgs",
      "out": "urlMap",
      "in": "urlMap"
    },
    {
      "from": "parameters",
      "to": "invoke-2",
      "out": "boards",
      "in": "boards"
    },
    {
      "from": "formatOutput",
      "to": "output",
      "out": "*"
    },
    {
      "from": "hoistOutputs",
      "to": "formatOutput",
      "out": "result",
      "in": "result"
    },
    {
      "from": "callBoardAsTool",
      "to": "hoistOutputs",
      "out": "*"
    },
    {
      "from": "getBoardArgs",
      "to": "callBoardAsTool",
      "out": "*"
    },
    {
      "from": "parameters",
      "to": "getBoardArgs",
      "out": "generator",
      "in": "generator"
    },
    {
      "from": "generate",
      "to": "getBoardArgs",
      "out": "toolCalls",
      "in": "toolCalls"
    },
    {
      "from": "generate",
      "to": "formatOutput",
      "out": "context",
      "in": "context"
    },
    {
      "from": "parameters",
      "to": "generate",
      "out": "generator",
      "in": "path"
    }
  ],
  "nodes": [
    {
      "id": "output",
      "type": "output",
      "configuration": {
        "schema": {
          "type": "object",
          "properties": {
            "result": {
              "type": "object",
              "title": "Result",
              "description": "The result generated by the tool"
            },
            "name": {
              "type": "string",
              "title": "Tool Name",
              "description": "The name of the tool that generated the text"
            },
            "context": {
              "type": "array",
              "title": "Context",
              "description": "The conversation context"
            }
          }
        }
      }
    },
    {
      "id": "parameters",
      "type": "input",
      "configuration": {
        "schema": {
          "type": "object",
          "properties": {
            "text": {
              "type": "string",
              "title": "Text",
              "description": "The text to use with tool calling",
              "examples": [
                "What is the square root of e?"
              ]
            },
            "context": {
              "type": "array",
              "title": "Context",
              "description": "An array of messages to use as conversation context",
              "items": {
                "type": "object"
              },
              "default": "[]"
            },
            "generator": {
              "type": "string",
              "title": "Generator",
              "description": "The URL of the generator to call",
              "examples": [
                "gemini-generator.json"
              ]
            },
            "boards": {
              "type": "array",
              "title": "Tools",
              "description": "URLs of boards to use as tools",
              "items": {
                "type": "string"
              },
              "examples": [
                "[ \"https://raw.githubusercontent.com/breadboard-ai/breadboard/main/seeds/breadboard-web/public/graphs/math.json\", \"https://raw.githubusercontent.com/breadboard-ai/breadboard/main/seeds/breadboard-web/public/graphs/search-summarize.json\" ]"
              ]
            }
          },
          "required": [
            "text",
            "boards"
          ]
        }
      }
    },
    {
      "id": "lambda-1",
      "type": "lambda",
      "configuration": {
        "board": {
          "kind": "board",
          "board": {
            "edges": [
              {
                "from": "lambda-3",
                "to": "map-4",
                "constant": true,
                "out": "board",
                "in": "board"
              },
              {
                "from": "formatResults",
                "to": "output-2",
                "out": "*"
              },
              {
                "from": "map-4",
                "to": "formatResults",
                "out": "list",
                "in": "json"
              },
              {
                "from": "input-1",
                "to": "map-4",
                "out": "boards",
                "in": "list"
              }
            ],
            "nodes": [
              {
                "id": "input-1",
                "type": "input"
              },
              {
                "id": "output-2",
                "type": "output"
              },
              {
                "id": "lambda-3",
                "type": "lambda",
                "configuration": {
                  "board": {
                    "kind": "board",
                    "board": {
                      "edges": [
                        {
                          "from": "boardToFunction",
                          "to": "output-2",
                          "out": "function",
                          "in": "function"
                        },
                        {
                          "from": "input-1",
                          "to": "boardToFunction",
                          "out": "item",
                          "in": "boardURL"
                        },
                        {
                          "from": "input-1",
                          "to": "output-2",
                          "out": "item",
                          "in": "boardURL"
                        }
                      ],
                      "nodes": [
                        {
                          "id": "input-1",
                          "type": "input"
                        },
                        {
                          "id": "output-2",
                          "type": "output"
                        },
                        {
                          "id": "boardToFunction",
                          "type": "invoke",
                          "configuration": {
                            "path": "/graphs/board-as-function.json"
                          }
                        }
                      ],
                      "kits": [
                        {
                          "url": "npm:@google-labs/core-kit"
                        }
                      ]
                    }
                  }
                }
              },
              {
                "id": "map-4",
                "type": "map",
                "configuration": {}
              },
              {
                "id": "formatResults",
                "type": "jsonata",
                "configuration": {
                  "expression": "{\n      \"tools\": [function],\n      \"urlMap\": $merge([{ function.name: boardURL }])\n  }",
                  "raw": true
                }
              }
            ],
            "kits": [
              {
                "url": "npm:@google-labs/core-kit"
              },
              {
                "url": "npm:@google-labs/llm-starter"
              }
            ]
          }
        }
      }
    },
    {
      "id": "invoke-2",
      "type": "invoke",
      "configuration": {}
    },
    {
      "id": "generate",
      "type": "invoke"
    },
    {
      "id": "noStreaming",
      "type": "passthrough",
      "configuration": {
        "useStreaming": false
      }
    },
    {
      "id": "getBoardArgs",
      "type": "jsonata",
      "configuration": {
        "expression": "$merge([{\n      \"path\": $lookup(urlMap, toolCalls[0].name)\n    },\n    { \"generator\": generator },\n    toolCalls[0].args\n  ])",
        "raw": true
      }
    },
    {
      "id": "formatOutput",
      "type": "jsonata",
      "configuration": {
        "expression": "{ \"result\": result, \"name\": toolCalls[0].name, \"context\": context }",
        "raw": true
      }
    },
    {
      "id": "callBoardAsTool",
      "type": "invoke"
    },
    {
      "id": "hoistOutputs",
      "type": "jsonata",
      "configuration": {
        "expression": "$ ~> | ** | {}, \"schema\" |"
      }
    }
  ],
  "kits": [
    {
      "url": "npm:@google-labs/llm-starter"
    },
    {
      "url": "npm:@google-labs/core-kit"
    }
  ]
}