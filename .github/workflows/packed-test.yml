name: Test packages
on:
  push:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  BOARD: dl_board.json

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout to repository
        uses: actions/checkout@main
        with:
          sparse-checkout: .github/fixtures
      - name: Set matrix data
        env:
          FILE: .github/fixtures/npx_scripts.json
        id: set-matrix
        run: echo "matrix=$(jq -c . < $FILE)" >> $GITHUB_OUTPUT

  test:
    runs-on: ubuntu-latest
    needs: setup
    strategy:
      fail-fast: false
      matrix:
        node-version:
          - 20.x
        fixtures: ${{ fromJson(needs.setup.outputs.matrix).fixtures }}
    name: "${{ matrix.fixtures.name }}${{ matrix.fixtures.expect == 'fail' && ' (exected failure)' || '' }} - Node ${{ matrix.node-version }}"
    steps:
      - name: Setup node ${{ matrix.node-version }}
        uses: actions/setup-node@main
        with:
          node-version: ${{ matrix.node-version }}

      - name: Checkout to repository
        uses: actions/checkout@main
        if: ${{ matrix.fixtures.checkout }}

      - name: Output YAML arary to temporary script file
        run: |
          echo "#!/bin/bash -e" > script.sh
          echo "set -xv" >> script.sh
          echo -e "${{ join(matrix.fixtures.script, '\n') }}" >> script.sh
          chmod +x script.sh

      - name: Show script content
        run: cat script.sh

      - name: Execute the script
        id: execute_script
        continue-on-error: ${{ matrix.fixtures.expect == 'fail' }}
        run: ./script.sh

      - if: ${{ steps.execute_script.outcome == 'success' && matrix.fixtures.expect == 'fail' }}
        run: echo "Test unexpectedly passed" && exit 1

      - if: ${{ steps.execute_script.outcome == 'failure' && matrix.fixtures.expect == 'fail' }}
        run: echo "This is expected to fail"
