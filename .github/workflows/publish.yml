name: Publish NPM Package

on:
  workflow_dispatch:
    inputs:
      packageName:
        description: "Package Name (e.g., graph-runner)"
        required: true
        type: string
      packageVersion:
        description: "Package Version (e.g., 1.0.0)"
        required: true
        type: string
      milestoneTag:
        description: "Milestone Tag (e.g., graph-runner-m1)"
        required: false
        type: string

env:
  ALLOWED_PACKAGES: |
    breadboard

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Validate Package Name
        run: |
          if [[ ! " $ALLOWED_PACKAGES " =~ " ${{ github.event.inputs.packageName }} " ]]; then

            echo "Error: Invalid package name"
            echo "github.event.inputs.packageName: ${{ github.event.inputs.packageName }}"

            echo "ALLOWED_PACKAGES: $ALLOWED_PACKAGES"

            exit 1
          fi

      - if: github.event.inputs.packageVersion == ''
        name: Do not publish if package version is empty
        run: exit 0

      - name: Check package version validity
        run: |
          if [[ ! ${{ github.event.inputs.packageVersion }} =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Error: Invalid package version. Package version must be in the format of x.y.z"
            exit 1
          fi

      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: "20.x"

      - name: Install Dependencies
        run: npm ci

      - name: Sync Repository
        run: npm run sync

      - name: Change Directory to Package
        run: cd packages/${{ github.event.inputs.packageName }}

      - name: Update Package Version
        run: npm version ${{ github.event.inputs.packageVersion }}

      - name: Git config
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"

      - name: Commit and Push Changes
        run: |
          git commit -am "[${{ github.event.inputs.packageName }}] Publish ${{ github.event.inputs.packageVersion }}" || echo "No changes to commit"
          git push

      - name: Tag Milestone
        if: github.event.inputs.milestoneTag != ''
        run: |
          git tag ${{ github.event.inputs.milestoneTag }}
          git push origin ${{ github.event.inputs.milestoneTag }}

      - name: Publish to NPM
        run: npm publish --registry https://wombat-dressing-room.appspot.com --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
