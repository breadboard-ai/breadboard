name: Publish NPM Package

on:
  workflow_dispatch:
    inputs:
      packageName:
        description: "Package Name (e.g., graph-runner)"
        required: true
        type: string
      packageVersion:
        description: "Package Version (e.g., 1.0.0)"
        required: true
        type: string
      milestoneTag:
        description: "Milestone Tag (e.g., graph-runner-m1)"
        required: false
        type: string

env:
  ALLOWED_PACKAGES: |
    breadboard

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - run: echo "github.event.inputs.packageName ${{ github.event.inputs.packageName }}"
      - run: echo "github.event.inputs.packageVersion ${{ github.event.inputs.packageVersion }}"
      - run: echo "github.event.inputs.milestoneTag ${{ github.event.inputs.milestoneTag }}"
      - run: echo "ALLOWED_PACKAGES ${ALLOWED_PACKAGES}"

      - name: Validate Package Name is in Allowed Packages
        if: ${{ !contains(env.ALLOWED_PACKAGES, github.event.inputs.packageName) }}
        run: echo "Package name '${{ github.event.inputs.packageName }}' is not in the list of allowed packages." && exit 1

      - if: github.event.inputs.packageVersion == ''
        name: Do not publish if package version is empty
        run: exit 0

      - name: Check package version validity
        run: |
          if [[ ! ${{ github.event.inputs.packageVersion }} =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Error: Invalid package version. Package version must be in the format of x.y.z"
            exit 1
          fi

      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: "20.x"

      - name: Install Dependencies
        run: npm ci

      - name: Checking the code quality
        run: npm run lint

      - name: Checking the code formatting
        run: npm run check:format

      - name: Running tests
        run: npm run test

      - name: Sync Repository
        run: npm run sync

      - name: Update Package Version
        working-directory: packages/${{ github.event.inputs.packageName }}
        run: npm version ${{ github.event.inputs.packageVersion }} --no-git-tag-version

      - name: Commit and Push Changes
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          git commit -am "[${{ github.event.inputs.packageName }}] Publish ${{ github.event.inputs.packageVersion }}" || echo "No changes to commit"
          git push

      - name: Tag Milestone
        run: |
          git tag ${{ github.event.inputs.milestoneTag }}
          git push origin ${{ github.event.inputs.milestoneTag }}

      - name: Publish to NPM
        working-directory: packages/${{ github.event.inputs.packageName }}
        run: |
          npm publish --registry https://wombat-dressing-room.appspot.com --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
